<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
    "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd" [
  <!ENTITY % commondata SYSTEM "../ent/common.ent" > %commondata;
]>
<chapter id="installation">
<title>Installation</title>

<section>
<title>Requirements</title>

<para>Building Debian Live images has very few system requirements:</para>
<orderedlist>
<listitem><para>An up-to-date version of &live-helper;</para></listitem>
<listitem><para>A POSIX-compliant shell, such as <computeroutput>bash</computeroutput> or <computeroutput>dash</computeroutput>.</para></listitem>
<listitem><para><computeroutput>debootstrap</computeroutput> or <computeroutput>cdebootstrap</computeroutput></para></listitem>
<listitem><para>Linux 2.6.x</para></listitem>
</orderedlist>

<para>Note especially that using a Debian installation is not required - &live-helper; will run on many operating systems.</para>

</section>

<section>
<title>Installing &live-helper;</title>

<para>You may install &live-helper; in a number of different ways:</para>

<orderedlist>
<listitem><para>From the Debian repository</para></listitem>
<listitem><para>From source</para></listitem>
<listitem><para>From snapshots</para></listitem>
<listitem><para>From backports.org</para></listitem>
</orderedlist>

<para>If you are using &lenny; or &sid; the recommended way is to install &live-helper; via the Debian repository.</para>

<sect1>
 <title>From the Debian repository</title>

 <para>Simply install &live-helper; like any other package:</para>

<screen>
 % apt-get install live-helper
</screen>

<para>or</para>

<screen>
 % aptitude install live-helper
</screen>

</sect1>

<sect1>
 <title>From source</title>

 <para>&live-helper; is developed using the Git revision control system. On Debian systems, this is provided by the <computeroutput>git-core</computeroutput> package. To check out the latest code, execute:</para>

<screen>
 % git clone git://git.debian.net/git/live-helper.git
</screen>

 <para>You can build and install your own Debian package by executing:</para>

<screen>
 % cd live-helper
 % dpkg-buildpackage -uc -us -rfakeroot
 % cd ..
 $ dpkg -i live-helper*.deb
</screen>

 <para>Since &live-helper; version 1.0~a38-1, you can use local version of &live-helper; without installation:</para>

<screen>
 % live-helper/helpers/lh_local
</screen>

 <para>Subsequent calls to <filename>lh_</filename>-prefixed helpers in that shell environment will then use the version located in the directory you executed <filename>lh_local</filename> from.</para>

 <para>You can also install &live-helper; directly to your system by executing:</para>

<screen>
 $ make install
</screen>
</sect1>

<sect1>
<title>From 'snapshots'</title>
<para>If you do not wish to build or install &live-helper; from source, you can use snapshots. These are built automatically from the latest version in Git.</para>
</sect1>

<sect1>
<title>From Backports.org</title>

 <para>Whilst &live-helper; and friends are currently not a part of Debian stable relase, they will work on &etch; as well. You will need the following programs:</para>

<orderedlist>
<listitem><para>An <emphasis>etch</emphasis> backport of <computeroutput>cdebootstrap</computeroutput> from backports.org</para></listitem>
<listitem><para>The <emphasis>lenny</emphasis> or <emphasis>sid</emphasis> version of &live-helper;</para></listitem>
</orderedlist>

<sect2>
<title>Installing cdebootstrap from backports.org</title>
<orderedlist>

<listitem><para>Put this in your /etc/apt/sources.list:</para>

<screen>
deb http://www.backports.org/debian etch-backports main
</screen></listitem>

<listitem><para>Update the package indices</para>

<screen>
apt-get update
</screen></listitem>

<listitem><para>Install <computeroutput>cdebootstrap</computeroutput>:</para>

<screen>
apt-get install -t etch-backports cdebootstrap
</screen></listitem>

</orderedlist>
</sect2>

<sect2>
<title>Installing &live-helper; on etch</title>

<para>It is not recommended that you use &live-helper; from backports.org as it is likely to be out of date.

The live-helper package from Lenny or Sid can be installed on Etch (without upgrading other packages, such as libc6; it's just shell scripts).

1. install cdebootstrap from backports.org (as indicated above)

apt-get install -t etch-backports cdebootstrap

2. install live-helper from testing or unstable

apt-get install -t unstable live-helper

Of course you need the testing or unstable sources in /etc/apt/sources.list for this.</para>

</sect2>
</sect1>

</section>
<section>
<title>&live-initramfs;</title>
<para><emphasis>N.B. You do not need to install on your host system to create customised Debian Live systems. However, doing so will do no harm.</emphasis></para>

<sect1>
<title>Using a customised &live-initramfs;</title>

<para>To modify the code you can follow the process below. Please ensure you are familiar with the terms mentioned in <xref linkend="terms"/>.</para>

<orderedlist>

<listitem><para>Checkout the &live-initramfs; source</para>

<screen>
$ git clone git://git.debian.net/git/live-initramfs.git
</screen>
</listitem>

<listitem><para>Make changes to your local copy</para></listitem>

<listitem>
<para>Build a &live-initramfs; <computeroutput>.deb</computeroutput></para>
<para>You must build either on your target distribution or in a chroot containing your target platform: this means if your target is lenny then you should build against lenny. You can use a personal builder such <computeroutput>pbuilder</computeroutput> to automate building packages in chroot. To build directly on the target platform, use <computeroutput>debuild</computeroutput> (provided by the <computeroutput>devscripts</computeroutput> package):</para>

<screen>
$ cd live-initramfs
$ debuild -us -uc -b
</screen>
</listitem>

<listitem>
<para>Use the generated &live-initramfs; <computeroutput>.deb</computeroutput></para>

<para>As &live-initramfs; is installed by the build system, installing the package in the host system is not sufficient: you should treat the generated <computeroutput>.deb</computeroutput> like another custom package. Please see <xref linkend="custom-packages"/> for more information. You should pay particular attention to <xref linkend="custom-packages-apt"/>.</para>
</listitem>

</orderedlist>
</sect1>

</section>

</chapter>
