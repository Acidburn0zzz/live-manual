<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
    "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd" [
  <!ENTITY % commondata SYSTEM "../ent/common.ent" > %commondata;
]>
<chapter id="live-environment">
<title>The Live environment</title>

<section>
<title>Swap space</title>
<para>FIXME</para>
</section>

<section id="hostname">
<title>Hostname</title>
<para>FIXME</para>
</section>

<section id="live-user">
<title>The Live user</title>
<para>Username FIXME.</para>
<para>One important consideration is that the live user is created by &live-initramfs; during bootup, it is not created by &live-helper; when building the image.</para>

 <para>You can specify additional groups that the live user will belong to by preseeding the <computeroutput>passwd/user-default-groups</computeroutput> debconf value. For example, to add the live user to the <computeroutput>fuse</computeroutput> group, add the following to a file in the <filename class="directory">config/chroot_local-preseed</filename> directory:</para>

<screen>
 debconf passwd/user-default-groups string dialout cdrom floppy audio video fuse
</screen>

 <para>For more information about debconf preseeding, please see <xref linkend="debconf-preseed"/>.</para>

</section>

<section id="language">
<title>Language</title>
<para>FIXME</para>
</section>

<section id="persistence">
<title>Persistence</title>
<para>A live cd paradigm is a preinstalled system which runs from a read-only media, like a cdrom, were writes and modifications does not survive reboots of the host hardware which runs it.</para>
<para>A Debian Live system is a generalization of this paradigm and thus supports more media, and not only cds; but stills, in its default behaviour, it should be considered read only and all the runtime evolutions of the system are lost with a shutdown.</para>

<para>Persistence is a common name for different kinds of solutions for saving across reboots some or all of this runtime evolution of the system; to undestand how it could work it could be handy to know that even if the system is booted and runt from a read only media, modification to the files and directories are wrote on a writable media , tipically a ram disk (tmpfs) and ram disk's data do not survive reboots.</para>
<para>The data stored on this ramdisk should be saved in a writable persistent media like on an Hard Disk, a USB key, a network "share" or even a session of a multisession (re)writable CD/DVD. All this cited media are supported in Debian Live in different ways, all but latest one requires a special boot parameter to be specified at boot: <computeroutput>persistent</computeroutput>.</para>

<section><title>Full persistence</title>
<para>With "full persistence" it is meant that instead of using a tmpfs for storing modifications to the read-only media (with the copy-on-write, COW, system) a writable partition is used. In order to use this feature a partition with a clean writable supported filesystem on it labeled "live-rw" must be attached on the system at bootime and the system must be started with "persistent" boot parameter; this partition could be an ext2 partition on the hard disk or on a usb key created with, e.g.:</para>

<screen>
# mkfs.ext2 -L live-rw /dev/sdb1
</screen>

<para>But since live system users, not always can use an hard drive partition, maybe because they aren't allowed or they wan't to repartition a drive, and considering that most USB keys have laughables write speeds, "full" persistence could be also used with just image files, so you could create a file representing a partition and put this image file even on a NTFS partition of a foreign OS, with something like:</para>

<screen>
$ dd if=/dev/zero of=live-rw bs=1024k count=1 seek=1k # for a 1G image file
# mkfs.ext2 -F live-rw
</screen>

<para>Then copy the <computeroutput>live-rw</computeroutput> file in a writable partition and reboot with "persistent" boot parameter.</para>
</section>

<section><title>Home automounting</title>
<para>If during the boot a partition (filesystem) image file or a partition labeled  <computeroutput>home-rw</computeroutput> will be discovered, this filesystem will be directly mounted as <computeroutput>/home</computeroutput>, thus permitting persistence of files that belong to the e.g. default user. It can be combined with full persistence.</para>
</section>

<section><title>Snapshots</title>
<para>Snapshots are collection of files and directories which are not mounted while running but which are copied from a persistent device to the system (tmpfs) at boot and which are resynced at reboot/shutdown of the system. The content of a snapshot could reside on a partition or an image file (like the above mentioned types) labeled <computeroutput>live-sn</computeroutput>, but it defaults as a  simple cpio archive named <computeroutput>live-sn.cpio.gz</computeroutput>. As above at boot time, the block devices connected to the system are traversed to see it a suche named partition or file could be found. A power interruption during runtime could mean data lost hence a tool invoked  <computeroutput>live-snapshot --refresh</computeroutput> could be called to sync important changes. This type of persistence since no not write continuosly to the persistent media is the most flash-based device friendly and the fastest of all the persistence systems.</para>
<para> A /home version of snapshot exists too and its label is <computeroutput>home-sn.*</computeroutput>; it works the same as the main snapshot but it is only applied to /home.</para>
<para> All kind of snapshots cannot currently handle file deleting while full persistence and obviously home automounting could.</para>
</section>

<section><title>Partial remasterings</title>
<para>The runtime modification of the tmpfs could be collected usign live-snapshot in a squashfs and added to the cd by remastering the iso in case of cd-r or adding a session to multisession cd/dvd(rw); live-initramfs mounts all /live filesystem in order or with the module bootparameter.</para>
</section>

</section>

</chapter>
