:B~ Sobre esse manual

1~about-manual Sobre esse manual

Este manual serve como um ponto de acesso único a toda a documentação
relacionada ao projeto Debian Live e, em particular se aplica ao software
produzido pelo projeto para o lançamento do Debian 7,0 "wheezy". Uma versão
atualizada pode ser sempre encontrada em http://live.debian.net/

Embora live-manual esteja principalmente focado em ajudar a construir um
sistema live e não tópicos do usuário final, um usuário final pode encontrar
algumas informações úteis nestas seções: {O Básico}#the-basics abrange
imagens que se preparam para serem iniciadas a partir da mídia ou da rede, e
{Personalizar comportamentos em tempo de
execução}#customizing-run-time-behaviours descrevem algumas opções que podem
ser especificadas no prompt de inicialização, tais como selecionar um layout
de teclado e localidade, e usar persistência.

Alguns comandos mencionados no texto devem ser executados com privilégios de
super-usuário, que podem ser obtidos tornando-se usuário root via #{su}# ou
usando #{sudo}#. Para distinção entre os comandos que talvez possam ser
executados como usuário não privilegiado e aqueles que requerem privilégios
de super usuário, os comandos são precididos por: #{$}# ou #{#}#
respectivamente. Esse simbolo não é parte do comando.

2~ Para os impacientes

Embora acreditemos que tudo neste manual é importante para pelo menos alguns
de nossos usuários, percebemos que tem muito material para cobertura e você
pode querer experimentar o sucesso precoce utilizando o software antes de se
aprofundar nos detalhes. Portanto, sugerimos a leitura na seguinte ordem.

Primeiro, leia este capítulo, {Sobre este manual}#about-manual, desde o
início e terminando com a seção {Termos}#terms. Em seguida, passe para os
três tutoriais na frente da seção de exemplos {exemplos}#examples  projetada
para ensinar conceitos básicos de construção de imagem e
personalização. Leia primeiro {Usando os exemplos}#using-the-examples,
seguido por {Tutorial 1: Uma imagem padrão}#tutorial-1, {Tutorial 2: Um
utilitário de navegador}#tutorial-2 e finalmente {Tutorial 3: Uma imagem
personalizada}#tutorial-3. Ao final desses tutoriais, você vai ter um
gostinho do que pode ser feito com o Debian Live.

Nós te incentivamos a realizar um estudo mais aprofundado do manual, talvez
na próxima leitura {O Básico}#the-basics, roçando ou pulando {Construindo
uma imagem netboot}#building-netboot-image, e terminando com a leitura da
Personalização {Customization overview}#customization-overview  e os
capítulos que se seguem. Para este ponto, esperamos que você esteja
completamente animado com o que pode ser feito com Debian Live e motivado
para ler o restante do manual, capa a capa.

2~terms Terminologia

_* *{Sistema Live}*: Um sistema operacional que pode inicializar sem
instalação em um disco rígido. Sistemas live não devem alterar o(s)
sistema(s) operacional(s) local(is) ou arquivo(s) já instalados no disco
rígido do computador a não ser que seja instruido para isso. Sistemas Live
são tipicamente inicializados a partir de uma mídia como CDs, DVDs ou
pendrive(s). Alguns também podem inicializar através da rede.

_* *{Debian Live}*: O sub-projeto Debian que manten os pacotes live-boot,
live-build, live-config, e live-manual.

_* *{Sistema Debian Live}*: Um sistema live que usa softwares do sistema
operacional Debian que também pode ser inicializado a partir de CD's, DVDs,
Discos USB, através da rede (via imagens netbook), e através da Internet
(via parametro de boot #{fetch=URL}#).

_* *{Sistema Hospedeiro}*: O ambiente usado para criar o sistema live.

_* *{Sistema Destino}*: O ambiente usado para rodar o sistema live.

_* *{live-boot}*: Uma coleção de scripts usados para inicializar sistemas
live. live-boot era formalmente parte do /{live-initramfs}/.

_* *{live-build}*: Uma coleção de scripts usados para construir sistemas
Debian live customizados. live-build era formalmente conhecido como
/{live-helper}/, e ainda antes conhecido como /{live-package}/.

_* *{live-config}*: Uma coleção de scripts usados para configurar um sistema
live durante o processo de boot. live-config era formalmente parte do
/{live-initramfs}/.

_* *{live-manual}*: Esse documento é mantido em um pacote chamado
live-manual.

_* *{Instalador Debian (d-i)}*: O sistema oficial de instalação para a
distribuição Debian.

_* *{Paramentros de inicialização}*: Parametros que podem ser entrados no
prompt do bootloader para influenciar o kernel ou o live-config.

_* *{chroot}*: O programa /{chroot}/, #{chroot(8)}#, nos habilita a rodar
simultâneamente diferentes instâncias do ambiente do GNU/Linux em um único
sistema sem reinicialização.

_* *{Imagem Binaria}*: Um arquivo contendo o sistema live, como binary.iso
ou binary.img.

_* *{Distribuição Destino}*: A distribuição em que o sistema live será
baseado. Isso pode diferir da distribuição do seu sistema host.

A distribuição estável (*{stable}*) contem a última versão oficial lançada
do Debian. A distribuição *{testing}* é a ária de estágio para a próxima
versão estável(stable). A maior vantagem de usar essa distribuição é que ela
tem versões mais recentes de software relacionado com a versão estável
(*{stable}*). A distribuição instável (*{unstable}*) é onde ocorre o
desenvolvimento ativo do Debian. Geralmente, essa distribuição é mantida por
desenvolvedores e aqueles que vivem no limite.

2~ Autores

Lista de autores (em ordem alfabética)

_* Ben Armstrong

_* Brendan Sleight

_* Chris Lamb

_* Daniel Baumann

_* Franklin Piat

_* Jonas Stein

_* Kai Hendry

_* Marco Amadori

_* Mathieu Geli

_* Matthias Kirschner

_* Richard Nelson

_* Trent W. Buck

2~how-to-contribute Contribuindo com esse documento

Este manual foi concebido como um projeto da comunidade e todas as propostas
de melhorias e contribuições são muito bem-vindos. A maneira preferida para
enviar sua contribuição é enviá-la para a lista de discussão. Por favor,
consulte a seção {Contato}#contact para mais informações.

Quando estiver submetendo uma contribuição, por favor identificar claramente
o seu titular de direitos autorais e incluir a declaração de
licenciamento. Note que para ser aceita, a contribuição deve ser licenciada
obre as mesmas licenças do resto do documento, ou seja, GPL versão 3 ou
superior.

Os fontes para esse manail são mantidos usando o sistema de controle de
versão Git. Você pode fazer o checkout da ultima cópia executando:

code{

$ git clone git://live.debian.net/git/live-manual.git

}code

Antes de submeter sua contribuição, por favor pré-visualize seu
trabalho. Para pré-visualizar o live-manual, tenha certeza que os pacotes
necessários para contruir estão instalados executando:

code{

 # apt-get install make po4a sisu-complete libnokogiri-ruby

}code

Você também pode construir o live-manual a partir do primeiro nível do
diretório do seu Git checkout executando:

code{

 $ make build

}code

Uma vez que é demorado construir o manual em todos os idiomas suportados,
você pode achar que é conveniente, na  prova construir, para apenas um
idioma, por exemplo, executando:

code{

 $ make build LANGUAGES=en

}code

Também é possível construir, por tipo de documento, por exemplo:

code{

 $ make build FORMATS=pdf

}code

Ou a combinação dos dois, por exemplo:

code{

 $ make build LANGUAGES=it FORMATS=html

}code

3~ Aplicando Atualizações

Diretamente cometer ao repoitório é possivel por qualquer um. No entanto,
nós pedimo que você mande maiores mudanças para a lista de e-mail para
discuti-las primeiro. Para enviar ao repositório, os seguintes passos são
necessários:

_* Obter a chave publica de commit:

code{

 $ mkdir -p ~/.ssh/identity.d
 $ wget http://live.debian.net/other/keys/git@live.debian.net \
     -O ~/.ssh/identity.d/git@live.debian.net
 $ wget http://live.debian.net/other/keys/git@live.debian.net.pub \
     -O ~/.ssh/identity.d/git@live.debian.net.pub
 $ chmod 0600 ~/.ssh/identity.d/git@live.debian.net*

}code

_* Adicione a seguinte sessão na configuração do seu openssh-client:

code{

 $ cat >> ~/.ssh/config << EOF
 Host live.debian.net
     Hostname live.debian.net
     User git
     IdentityFile ~/.ssh/identity.d/git@live.debian.net
 EOF

}code

_* Fazer o checkout de um clone do manual por ssh:

code{

 $ git clone git@live.debian.net:/live-manual.git
 $ cd live-manual && git checkout debian-next

}code

_* Observe que você acessa quaisquer alterações no ramo seguinte do Debian,
e não no ramo Debian.

_* Não use #{make commit}# a menos que você esteja atualizando traduções
neste acesso, e, nesse caso, não misture as alterações no manual de Inglês e
traduções na submissão, mas acessar separadamente cada um . Veja a seção de
{Tradução}#translation para mais detalhes.

_* Escreva mensagens de submissão, que consistem em sentanças completas
úteis, começando por letra maiuscula e acabando com uma parada
total. Normalmente iniciando com as formas
'Fixing/Adding/Removing/Correcting/Translating'.

code{

 $ git commit -a -m "Adding a section on applying patches."

}code

_* Enviar as submissões para os servidor.

code{

 $ git push

}code

3~translation Tradução

Para começar uma tradução para uma nova linguagem, siga estes passos:

_* Traduza os arquivos *{about_manual.ssi.pot}*, *{about_project.ssi.pot}* e
*{index.html.in.pot}* para sua linguagem com seu editor preferido (Por
exemplo /{poedit}/). Envie os arquivos traduzidos #{.po}# para a lista de
email assim o time de tradução poderá verificar sua integridade.

_* Para ativar uma nova linguagem no autobuild basta adicionar os arquivos
iniciais traduzidos para #{manual/po/${LANGUAGE}/}# e executar #{make
commit}#. E então editar #{manual/_sisu/home/index.html}#.

_* Uma vez que a nova linguagem esteja adicionada, voce pode aleatoriamente
continuar a traduzir o restante dos arquivos .po na pasta #{manual/po/}#.

_* Não se esqueça que você precisa executar #{make commit}# para garantir
que os manuais traduzidos estejem atualizados a partir dos arquivos po e
então você pode rever as suas alterações #{make build}# antes  #{git add
.}#, #{git commit -a -m "Translating..."}# e #{git push}#.

*{Observação:}* Você pode usar #{make clean}# para limpar a sua árvore git antes de enviar. Este passo não é obrigatório graças ao gitignore., Mas é uma boa prática para evitar enviar arquivos involuntariamente.
