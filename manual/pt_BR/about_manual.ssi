:B~ Sobre esse manual

1~about-manual Sobre esse manual

The main goal of this manual is to serve as a single access point to all
documentation related to the Debian Live project. While it is primarily
focused on helping you build a live system and not on end-user topics, an
end-user may find some useful information in these sections: {The
Basics}#the-basics covers preparing images to be booted from media or the
network, and {Customizing run time
behaviours}#customizing-run-time-behaviours describes some options that may
be specified at the boot prompt, such as selecting a keyboard layout and
locale, and using persistence.

Alguns comandos mencionados no texto devem ser executados com privilégios de
super-usuário, que podem ser obtidos tornando-se usuário root via #{su}# ou
usando #{sudo}#. Para distinção entre os comandos que talvez possam ser
executados como usuário não privilegiado e aqueles que requerem privilégios
de super usuário, os comandos são precididos por: #{$}# ou #{#}#
respectivamente. Esse simbolo não é parte do comando.

2~ For the impatient

While we believe that everything in this manual is important to at least
some of our users, we realize it is a lot of material to cover and that you
may wish to experience early success using the software before delving into
the details. Therefore, we have provided three tutorials in the
{Examples}#examples section designed to teach you image building and
customization basics. Read {Using the examples}#using-the-examples first,
followed by {Tutorial 1: A standard image}#tutorial-1, {Tutorial 2: A web
browser utility}#tutorial-2 and finally {Tutorial 3: A personalized
image}#tutorial-3. By the end of these tutorials, you will have a taste of
what can be done with Debian Live. We encourage you to return to more
in-depth study of the manual, perhaps next reading {The basics}#the-basics,
skimming or skipping {Building a netboot image}#building-netboot-image, and
finishing by reading the {Customization overview}#customization-overview and
the chapters that follow it. By this point, we hope you are thoroughly
excited by what can be done with Debian Live and motivated to read the rest
of the manual, cover-to-cover.

2~terms Terminologia

_* *{Live system}*: Um sistema operacional que pode inicializar sem
instalação em um disco rígido. Sistemas live não devem alterar o(s)
sistema(s) operacional(s) local(is) ou arquivo(s) já instalados no disco
rígido do computador a não ser que seja instruido para isso. Sistemas Live
são tipicamente inicializados a partir de uma mídia como CDs, DVDs ou
pendrive(s). Alguns também podem inicializar através da rede.

_* *{Debian Live}*: O sub-projeto Debian que manten os pacotes live-boot,
live-build, live-config, e live-manual.

_* *{Debian Live system}*: Um sistema live que usa softwares do sistema
operacional Debian que também pode ser inicializado a partir de CD's, DVDs,
Discos USB, através da rede (via imagens netbook), e através da Internet
(via parametro de boot #{fetch=URL}#).

_* *{Host system}*: O ambiente usado para criar o sistema live.

_* *{Target system}*: O ambiente usado para rodar o sistema live.

_* *{live-boot}*: Uma coleção de scripts usados para inicializar sistemas
live. live-boot era formalmente parte do live-initramfs.

_* *{live-build}*: Uma coleção de scripts usados para construir sistemas
Debian live customizados. live-build era formalmente conhecido como
live-helper, e ainda antes conhecido como live-package.

_* *{live-config}*: Uma coleção de scripts usados para configurar um sistema
live durante o processo de boot. live-config era formalmente parte do
live-initramfs.

_* *{live-manual}*: Esse documento é mantido em um pacote chamado
live-manual.

_* *{Debian Installer (d-i)}*: O sistema oficial de instalação para a
distribuição Debian.

_* *{Boot parameters}*: Parametros que podem ser entrados no prompt do
bootloader para influenciar o kernel ou o live-config.

_* *{chroot}*: O programa chroot, #{chroot(8)}#, nos habilita a rodar
simultâneamente diferentes instâncias do ambiente do GNU/Linux em um único
sistema sem reinicialização.

_* *{Binary image}*: Um arquivo contendo o sistema live, como binary.iso ou
binary.img.

_* *{Target distribution}*: A distribuição em que o sistema live será
baseado. Isso pode diferir da distribuição do seu sistema host.

_* *{Squeeze/Wheezy/Sid (stable/testing/unstable)}*: Debian codenames for
releases. At the time of writing, Squeeze is the current *{stable}* release
and Wheezy is the current *{testing}* release. Sid will always be a synonym
for the *{unstable}* release. Throughout the manual, we tend to use
codenames for the releases, as that is what is supported by the tools
themselves.

A distribuição estável (*{stable}*) contem a última versão oficial lançada
do Debian. A distribuição *{testing}* é a ária de estágio para a próxima
versão estável(stable). A maior vantagem de usar essa distribuição é que ela
tem versões mais recentes de software relacionado com a versão estável
(*{stable}*). A distribuição instável (*{unstable}*) é onde ocorre o
desenvolvimento ativo do Debian. Geralmente, essa distribuição é mantida por
desenvolvedores e aqueles que vivem no limite.

2~Autores

A lista de autores (em ordem alfabética)

_* Ben Armstrong

_* Brendan Sleight

_* Chris Lamb

_* Daniel Baumann

_* Franklin Piat

_* Jonas Stein

_* Kai Hendry

_* Marco Amadori

_* Mathieu Geli

_* Matthias Kirschner

_* Richard Nelson

_* Trent W. Buck

2~how-to-contribute Contribuindo com esse documento

This manual is intended as a community project and all proposals for
improvements and contributions are extremely welcome. The preferred way to
submit a contribution is to send it to the mailing list. Please see the
section {Contact}#contact for more information.

Quando estiver submetendo uma contribuição, por favor identificar claramente
o seu titular de direitos autorais e incluir a declaração de
licenciamento. Note que para ser aceita, a contribuição deve ser licenciada
obre as mesmas licenças do resto do documento, ou seja, GPL versão 3 ou
superior.

Os fontes para esse manail são mantidos usando o sistema de controle de
versão Git. Você pode fazer o checkout da ultima cópia executando:

code{

$ git clone git://live.debian.net/git/live-manual.git

}code

Antes de submeter sua contribuição, por favor pré-visualize seu
trabalho. Para pré-visualizar o live-manual, tenha certeza que os pacotes
necessários para contruir estão instalados executando:

code{

 # apt-get install make po4a sisu-complete libnokogiri-ruby

}code

Você também pode construir o live-manual a partir do primeiro nível do
diretório do seu Git checkout executando:

code{

 $ make build

}code

Since it takes a while to build the manual in all supported languages, you
may find it convenient when proofing to build for only one language, e.g. by
executing:

code{

 $ make build LANGUAGES=en

}code

3~ Aplicando patches

Diretamente cometer ao repoitório é possivel por qualquer um. No entanto,
nós pedimo que você mande maiores mudanças para a lista de e-mail para
discuti-las primeiro. Para enviar ao repositório, os seguintes passos são
necessários:

_* Obter a chave publica de commit:

code{

 $ mkdir -p ~/.ssh/identity.d
 $ wget http://live.debian.net/other/keys/git@live.debian.net \
     -O ~/.ssh/identity.d/git@live.debian.net
 $ wget http://live.debian.net/other/keys/git@live.debian.net.pub \
     -O ~/.ssh/identity.d/git@live.debian.net.pub
 $ chmod 0600 ~/.ssh/identity.d/git@live.debian.net*

}code

_* Adicione a seguinte sessão na configuração do seu openssh-client:

code{

 $ cat >> ~/.ssh/config << EOF
 Host live.debian.net
     Hostname live.debian.net
     User git
     IdentityFile ~/.ssh/identity.d/git@live.debian.net
 EOF

}code

_* Fazer o checkout de um clone do manual por ssh:

code{

 $ git clone gitosis@live.debian.net:/live-manual.git
 $ git checkout debian-next

}code

_* Note that you should commit any changes on the debian-next branch, not on
the debian branch.

_* Depois de editar os arquivos no manual/en/, por favor chame o alvo
'commit' no nível superior do diretório para higiênizar os arquivos e
atualizar os arquivos de tradução.  

code{

 $ make commit

}code

_* Depois de higiênizar submeta as mudançãs. Escreva mensagens de submissão,
que consistem em sentanças completas úteis, começando por letra maiuscula e
acabando com uma parada total. Normalmente iniciando com as formas
'Fixing/Adding/Removing/Correcting/Translating'.

code{

 $ git commit -a -m "Adding a section on applying patches."

}code

_* Enviar as submissões para os servidor.

code{

 $ git push

}code

3~ Translation

To submit a translation for a new language, follow these three steps:

_* Translate the about_manual.ssi.pot, about_project.ssi.pot and
index.html.in.pot files to your language with your favourite editor (such as
poedit). Send translated files to the mailing list. Once we have reviewed
your submission, we will add the new language to the manual (providing the
po files) and will enable it in the autobuild.

_* Once the new language is added, you can randomly start translating all po
files in #{manual/po/}#.

_* Don't forget you need #{make commit}# to ensure the translated manuals
are updated from the po files, before #{git commit -a}# and #{git push}#.
