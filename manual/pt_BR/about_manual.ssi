:B~ Sobre esse manual

1~about-manual Sobre esse manual

This manual serves as a single access point to all documentation related to
the Live Systems project and in particular applies to the software produced
by the project for the Debian 7.0 "${testing}" release. An up-to-date
version can always be found at http://live-systems.org/

While live-manual is primarily focused on helping you build a live system
and not on end-user topics, an end-user may find some useful information in
these sections: {The Basics}#the-basics covers downloading prebuilt images
and preparing images to be booted from media or the network, either using
the web builder or running live-build directly on your system. {Customizing
run time behaviours}#customizing-run-time-behaviours describes some options
that may be specified at the boot prompt, such as selecting a keyboard
layout and locale, and using persistence.

Alguns comandos mencionados no texto devem ser executados com privilégios de
super-usuário, que podem ser obtidos tornando-se usuário root via #{su}# ou
usando #{sudo}#. Para distinção entre os comandos que talvez possam ser
executados como usuário não privilegiado e aqueles que requerem privilégios
de super usuário, os comandos são precididos por: #{$}# ou #{#}#
respectivamente. Esse simbolo não é parte do comando.

2~ Para os impacientes

Embora acreditemos que tudo neste manual é importante para pelo menos alguns
de nossos usuários, percebemos que tem muito material para cobertura e você
pode querer experimentar o sucesso precoce utilizando o software antes de se
aprofundar nos detalhes. Portanto, sugerimos a leitura na seguinte ordem.

First, read this chapter, {About this manual}#about-manual, from the
beginning and ending with the {Terms}#terms section. Next, skip to the three
tutorials at the front of the {Examples}#examples section designed to teach
you image building and customization basics. Read {Using the
examples}#using-the-examples first, followed by {Tutorial 1: A default
image}#tutorial-1, {Tutorial 2: A web browser utility}#tutorial-2 and
finally {Tutorial 3: A personalized image}#tutorial-3. By the end of these
tutorials, you will have a taste of what can be done with live systems.

We encourage you to return to more in-depth study of the manual, perhaps
next reading {The basics}#the-basics, skimming or skipping {Building a
netboot image}#building-netboot-image, and finishing by reading the
{Customization overview}#customization-overview and the chapters that follow
it. By this point, we hope you are thoroughly excited by what can be done
with live systems and motivated to read the rest of the manual,
cover-to-cover.

2~terms Terminologia

_* *{Sistema Live}*: Um sistema operacional que pode inicializar sem
instalação em um disco rígido. Sistemas live não devem alterar o(s)
sistema(s) operacional(s) local(is) ou arquivo(s) já instalados no disco
rígido do computador a não ser que seja instruido para isso. Sistemas Live
são tipicamente inicializados a partir de uma mídia como CDs, DVDs ou
pendrive(s). Alguns também podem inicializar através da rede.

_* *{Live medium}*: As distinct from live system, the live medium refers to
the CD, DVD or USB stick where the binary produced by live-build and used to
boot the live system is written. More broadly, the term also refers to any
place where this binary resides for the purposes of booting the live system,
such as the location for the network boot files.

_* *{Live Systems Project}*: The project which maintains, among others, the
live-boot, live-build, live-config, live-tools and live-manual packages.

_* *{Live system}*: A live system that may be booted from CDs, DVDs, USB
sticks, over the network (via netboot images), and over the Internet (via
boot parameter #{fetch=URL}#).

_* *{Sistema Hospedeiro}*: O ambiente usado para criar o sistema live.

_* *{Sistema Destino}*: O ambiente usado para rodar o sistema live.

_* *{live-boot}*: Uma coleção de scripts usados para inicializar sistemas
live.

_* *{live-build}*: A collection of scripts used to build customized live
systems.

_* *{live-config}*: Uma coleção de scripts usados para configurar um sistema
live durante o processo de boot.

_* *{live-tools}*: A collection of additional scripts used to perform useful
tasks within a running live system.

_* *{live-manual}*: Esse documento é mantido em um pacote chamado
live-manual.

_* *{Instalador Debian (d-i)}*: O sistema oficial de instalação para a
distribuição Debian.

_* *{Paramentros de inicialização}*: Parametros que podem ser inseridos no
prompt do bootloader para influenciar o kernel ou o live-config.

_* *{chroot}*: O programa /{chroot}/, #{chroot(8)}#, nos habilita a rodar
simultâneamente diferentes instâncias do ambiente do GNU/Linux em um único
sistema sem reinicialização.

_* *{Imagem Binaria}*: Um arquivo contendo o sistema live, como binary.iso
ou binary.img.

_* *{Distribuição Destino}*: A distribuição em que o sistema live será
baseado. Isso pode diferir da distribuição do seu sistema host.

_* *{stable/testing/unstable}*: The *{stable}* distribution contains the
latest officially released distribution of Debian. The *{testing}*
distribution is the staging area for the next *{stable}* release. A major
advantage of using this distribution is that it has more recent versions of
software relative to the *{stable}* release. The *{unstable}* distribution
is where active development of Debian occurs. Generally, this distribution
is run by developers and those who like to live on the edge. Throughout the
manual, we tend to use codenames for the releases, such as ${testing} or
sid, as that is what is supported by the tools themselves.

2~ Autores

Lista de autores (em ordem alfabética)

_* Ben Armstrong

_* Brendan Sleight

_* Carlos Zuferri

_* Chris Lamb

_* Daniel Baumann

_* Franklin Piat

_* Jonas Stein

_* Kai Hendry

_* Marco Amadori

_* Mathieu Geli

_* Matthias Kirschner

_* Richard Nelson

_* Trent W. Buck

2~how-to-contribute Contribuindo com esse documento

This manual is intended as a community project and all proposals for
improvements and contributions are extremely welcome. Please see the section
{Contributing to the project}#contributing-to-project for detailed
information on how to fetch the commit key and make good commits.

3~ Aplicando Atualizações

In order to make changes to the English manual you have to edit the right
files in #{manual/en/}# but prior to the submission of your contribution,
please preview your work. To preview the live-manual, ensure the packages
needed for building it are installed by executing:

code{

 # apt-get install make po4a ruby ruby-nokogiri sisu-complete texlive-generic-recommended

}code

Você também pode construir o live-manual a partir do primeiro nível do
diretório do seu Git checkout executando:

code{

 $ make build

}code

Uma vez que é demorado construir o manual em todos os idiomas suportados,
você pode achar que é conveniente, na  prova, construir para apenas um
idioma, por exemplo, executando:

code{

 $ make build LANGUAGES=en

}code

Também é possível construir, por tipo de documento, por exemplo:

code{

 $ make build FORMATS=pdf

}code

Ou a combinação dos dois, por exemplo:

code{

 $ make build LANGUAGES=de FORMATS=html

}code

After revising your work and making sure that everything is fine, do not use
#{make commit}# unless you are updating translations in the commit, and in
that case, do not mix changes to the English manual and translations in the
same commit, but use separate commits for each. See the
{Translation}#translation section for more details.

3~translation Tradução

Para começar uma tradução para uma nova linguagem, siga estes passos:

_* Traduza os arquivos *{about_manual.ssi.pot}*, *{about_project.ssi.pot}* e
*{index.html.in.pot}* para sua linguagem com seu editor preferido (Por
exemplo /{poedit}/). Envie os arquivos traduzidos #{.po}# para a lista de
email assim o time de tradução poderá verificar sua integridade.

_* Para ativar uma nova linguagem no autobuild basta adicionar os arquivos
iniciais traduzidos para #{manual/po/${LANGUAGE}/}# e executar #{make
commit}#. E então editar #{manual/_sisu/home/index.html}#.

_* Uma vez que a nova linguagem esteja adicionada, voce pode aleatoriamente
continuar a traduzir o restante dos arquivos .po na pasta #{manual/po/}#.

_* Don't forget that you need #{make commit}# to ensure the translated
manuals are updated from the po files and then you can review your changes
launching #{make build}# before #{git add .}#, #{git commit -m
"Translating..."}# and #{git push}#.

After running #{make commit}# you will see some text scroll by. These are
basically informative messages about the processing status and also some
hints about what can be done in order to improve live-manual. Unless you see
a fatal error, you usually can proceed and submit your contribution.

live-manual comes with two utilities that can greatly help translators to
find untranslated and changed strings. The first one is "make translate". It
launches an script that tells you in detail how many untranslated strings
there are in each po file. The second one, the "make fixfuzzy" target, only
acts upon changed strings but it helps you to find and fix them one by one.

Keep in mind that even though these utilities might be really helpful to do
translation work on the command line, the use of an specialized tool like
/{poedit}/ is the recommended way to do the task. It is also a good idea to
read the Debian localization (l10n) documentation and, specifically to
live-manual, the {Guidelines for translators}#guidelines-translators.

*{Observação:}* Você pode usar #{make clean}# para limpar a sua árvore git antes de enviar. Este passo não é obrigatório graças ao gitignore., Mas é uma boa prática para evitar enviar arquivos involuntariamente.
