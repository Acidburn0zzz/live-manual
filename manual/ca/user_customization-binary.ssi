:B~ Personalització de la imatge binària

1~customizing-binary Personalització de la imatge binària

2~ Carregador d'arrencada

live-build utilitza /{syslinux}/ i alguns dels seus derivats (depenent del
tipus d'imatge) com carregadors d'arrencada per defecte. Es poden
personalitzar fàcilment en un nombre de maneres que van des de proporcionar
un tema complet a només modificar alguns fitxers que permeten, per exemple,
canviar el temps d'espera d'arrencada o simplement afegir una imatge de fons
personalitzada.

Si es vol utilitzar un tema complet es pot especificar l'opció
#{--syslinux-theme}# (veure man #{lb_config}#). live-build descarregarà el
tema del mirall i l'instaŀlarà. També es pot empaquetar en un .deb un tema
propi o modificar-ne un ja existent i pujar-lo a un servidor local.

Imaginar que es vol construir un client Progress Linux però es prefereix
incloure el tema del servidor, perquè es vol tenir el menú d'ajuda. S'hauria
d'utilitzar #{lb config}# de la següent manera:

code{

 $ lb config --mode progress-linux --syslinux-theme progress-server

}code

If you do not want to bother building a .deb, simply add your local
configuration files for a default image to
#{config/bootloaders/isolinux}#. Replacing *{isolinux}* for *{extlinux}*,
*{pxelinux}* or *{syslinux}* depending on your use case.

També hi ha la possibilitat de fer petits canvis. Per exemple, els derivats
de syslinux estan configurats per defecte amb un temps d'espera de 0 (zero)
el que significa que faran una pausa indefinida en la seva pantalla inicial
fins que es premi una tecla.

Per modificar el temps d'espera d'arrencada d'una imatge #{iso-hybrid}# es
pot editar el fitxer *{isolinux.cfg}* per defecte especificant el temps
d'espera en segons i afegir-lo a #{config/includes.binary/isolinux/}#

Un *{isolinux.cfg}* modificat per arrencar després de cinc segons seria
semblant a aquest:

code{

 include menu.cfg
 default vesamenu.c32
 prompt 0
 timeout 50

}code

Una forma alternativa d'aconseguir el mateix objectiu podria ser escriure un
script ganxo i afegir-lo a #{config/hooks/}#. Recordar afegir el sufix
#{.binary}# per tal que s'executi durant l'etapa binary. Un exemple
proposat:

code{

 #!/bin/sh

 sed -i -e 's|timeout 0|timeout 50|' binary/isolinux/isolinux.cfg

}code

De la mateixa manera, si es vol utilitzar una imatge personalitzada
splash.png es pot afegir una imatge de 640x480 píxels a
#{config/includes.binary/isolinux/}#

2~ metadades ISO 

Quan es crea una imatge binària ISO9660, es poden utilitzar les següents
opcions per afegir diverses metadades textuals. Això pot ajudar a
identificar fàcilment la versió o la configuració d'una imatge sense
arrencar-la.

_* #{LB_ISO_APPLICATION/--iso-application NAME}#: Ha de descriure
l'aplicació que serà a la imatge. La longitud màxima per aquest camp és de
128 caràcters.

_* #{LB_ISO_PREPARER/--iso-preparer NAME}#: Ha de descriure al preparador de
la imatge, en general amb algunes dades de contacte. El valor per defecte
per a aquesta opció és la versió de live-build utilitzada, la qual cosa pot
ajudar amb la depuració d'errors posterior. La longitud màxima per aquest
camp és de 128 caràcters.

_* #{LB_ISO_PUBLISHER/--iso-publisher NAME}#: Ha de descriure l'editor de la
imatge, en general amb algunes dades de contacte. La longitud màxima per
aquest camp és de 128 caràcters.

_* #{LB_ISO_VOLUME/--iso-volume NAME}#: Això ha d'especificar l'ID de volum
de la imatge. Això s'utilitza com una etiqueta visible per l'usuari en
algunes plataformes com Windows i Apple Mac OS. La longitud màxima per
aquest camp és de 32 caràcters.
