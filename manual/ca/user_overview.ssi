:B~ Descripció general de les eines

1~overview-of-tools Descripció general de les eines

Aquest capítol conté un resum de les tres eines principals utilitzades en la
construcció dels sistemes en viu: live-build, live-boot i live-config.

2~live-build El paquet live-build

live-build és un conjunt de scripts per a crear sistemes en viu. Aquests
scripts també s'anomenen «ordres».

La idea darrere de live-build és ser un marc que utilitza un directori de
configuració per automatitzar completament i personalitzar tots els aspectes
de la construcció d'una imatge en viu.

Molts conceptes són similars als utilitzats per a crear paquets Debian amb
/{debhelper}/:

_* Els scripts tenen una ubicació central per a la configuració del seu
funcionament. Amb /{debhelper}/ aquest és el subdirectori #{debian/}# d'un
arbre de paquets. Per exemple, dh_install buscarà, entre altres, un fitxer
anomenat #{debian/install}# per a determinar quins fitxers han d'existir en
un paquet binari en particular. De la mateixa manera, live-build emmagatzema
la seva configuració per complet sota un subdirectori #{config/}#.

_* Els scripts són independents - és a dir, sempre és segur executar cada
ordre.

Unlike /{debhelper}/, live-build provides the tools to generate a skeleton
configuration directory. This could be considered to be similar to tools
such as /{dh-make}/. For more information about these tools, read on, since
the remainder of this section discuses the four most important
commands. Note that the preceding #{lb}# is a generic wrapper for live-build
commands.

_* *{lb init}*: Responsible for initializing a Live system configuration
directory. See {The lb init command}#lb-init for more information.

_* *{lb config}*: Responsible for applying a configuration on top of an
already initialized configuration directory. See {The lb config
command}#lb-config for more information.

_* *{lb build}*: Responsable d'iniciar la creació d'un sistema en
viu. Consultar {L'ordre lb build}#lb-build per a més informació.

_* *{lb clean}*: Responsable d'eliminar parts de la construcció d'un sistema
viu. Consultar {L'ordre lb clean}#lb-clean per a més informació.

3~lb-init The #{lb init}# command

As discussed in {live-build}#live-build, the scripts that make up live-build
read their configuration with the #{source}# command from a single directory
named #{config/}#. As constructing this directory by hand would be
time-consuming and error-prone, the #{lb init}# command can be used to
create the initial skeleton configuration tree.

The #{lb init}# command creates the following directories inside
#{config/}#: #{hooks/}#, #{includes/}#, several other includes
subdirectories for each stage of the build process and
#{package-lists/}#. The latter includes a list of several important live
packages like live-boot, live-config and live-config-sysvinit.

3~lb-config L'ordre #{lb config}#

Issuing #{lb config}# without any arguments completes the #{config/}#
subdirectory which it populates with some default settings in configuration
files, and two skeleton trees named #{auto/}# and #{local/}#.

code{

 $ lb config
 [2014-04-25 17:14:34] lb config 
 P: Updating config tree for a debian/wheezy/i386 system

}code

Using #{lb config}# without any arguments would be suitable for users who
need a very basic image, or who intend to provide a more complete
configuration via #{auto/config}# later (see {Managing a
configuration}#managing-a-configuration for details).

Normalment, s'haurà d'especificar algunes opcions. Per exemple, per a
especificar quina distribució es vol construir mitjançant el seu nom en
clau:

code{

 $ lb config --distribution sid

}code

És possible especificar diverses opcions, com ara:

code{

 $ lb config --binary-images netboot --bootappend-live "boot=live components hostname=live-host username=live-user" ...

}code

Una llista completa d'opcions està disponible a la pàgina del manual
#{lb_config}#.

3~lb-build L'ordre #{lb build}#

L'ordre #{lb build}# llegeix la configuració del directori #{config/}#. A
continuació, executa les ordres de nivell inferior necessàries per a
construir el sistema en viu.

3~lb-clean L'ordre #{lb clean}#

L'ordre #{lb clean}# s'encarrega d'eliminar diverses parts d'una construcció
per a que altres construccions posteriors puguin començar des d'un estat
net. Per defecte, es netegen les etapes #{chroot}#, #{binary}# i #{source}#,
però la caché es manté intacta. A més, es poden netejar etapes
individuals. Per exemple, si s'han fet canvis que només afecten a la fase
binary, utilitzar #{lb clean --binary}# abans de construir un nou binary. Si
els canvis modifiquen el bootstrap i/o la caché de paquets, per exemple,
canvis en les opcions #{--mode}#, #{--architecture}# o #{--bootstrap}#, s'ha
d'utilitzar #{lb clean --purge}#.  Veure la pàgina del manual de
#{lb_clean}# per a una llista completa d'opcions.

2~live-boot El paquet live-boot

live-boot és un conjunt de scripts per a proporcionar hooks a
/{initramfs-tools}/, que s'utilitzen per a generar un initramfs capaç
d'arrencar sistemes vius, com ara els creats per live-build. Això inclou les
ISOs dels sistemes en viu, netboot tarballs i imatges per a memòries USB.

En el moment d'arrencar, buscarà medis de només lectura que continguin un
directori #{/live/}# on s'emmagatzema un sistema de fitxers arrel (sovint
una imatge de un sistema de fitxers comprimit squashfs). Si el troba, crearà
un entorn d'escriptura, utilitzant aufs, per a que puguin arrencar sistemes
com Debian o similars.

Més informació sobre ramfs inicial a Debian es pot trobar al Debian Linux
Kernel Handbook http://kernel-handbook.alioth.debian.org/ al capítol sobre
initramfs.

2~live-config El paquet live-config

live-config consta dels scripts que s'executen durant l'arrencada després de
live-boot per a configurar el sistema en viu de forma automàtica. S'ocupa de
tasques com ara l'establiment de les locales, el nom d'amfitrió, la zona
horària, crear l'usuari en viu, l'inhibició de tasques de cron i l'inici
automàtic de sessió per a l'usuari en viu.
