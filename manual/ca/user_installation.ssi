:B~ Instaŀlació

1~installation Instaŀlació

2~requirements Requisits

Building live system images has very few system requirements:

_* Accés de superusuari (root)

_* Una versió actualitzada de live-build

_* Una shell compatible amb POSIX, com ara /{bash}/ o /{dash}/

_* /{debootstrap}/ o /{cdebootstrap}/

_* Linux 2.6.x o superior.

Tenir en compte que no cal usar Debian o una distribució derivada de Debian
ja que live-build funcionarà en gairebé qualsevol distribució amb els
requisits anteriors.

2~installing-live-build Instaŀlació de live-build

Es pot instaŀlar live-build en un nombre de maneres diferentes:

_* Des del repositori Debian

_* A partir del codi font

_* A partir d'instantànies

Si s'utilitza Debian, la manera recomanada és instaŀlar live-build des del
repositori de Debian.

3~ Des del repositori de Debian

Només cal instaŀlar live-build com qualsevol altre paquet:

code{

 # apt-get install live-build

}code

3~ A partir del codi font

live-build es desenvolupa utilitzant el sistema de control de versions Git.
En els sistemes basats en Debian, això és proporcionat pel paquet git. Per
comprovar l'últim codi, executar:

code{

 $ git clone git://live-systems.org/git/live-build.git

}code

Es pot construir i instaŀlar un paquet Debian pròpi mitjançant l'execució
de:

code{

 $ cd live-build
 $ dpkg-buildpackage -b -uc -us
 $ cd ..

}code

Ara instaŀlar qualsevol dels fitxers #{.deb}# recent construïts que ens
interessen, per exemple,

code{

 # dpkg -i live-build_3.0-1_all.deb

}code

Es pot instaŀlar live-build directament al sistema mitjançant l'execució de:

code{

 # make install

}code

i desinstaŀlar amb:

code{

 # make uninstall

}code

3~ A partir d'instantànies

Si no es desitja construir o instaŀlar live-build a partir de les fonts, es
pot utilitzar les instantànies. Aquestes es construeixen automàticament a
partir de l'última versió del Git, i estan disponibles a
http://live-systems.org/debian/.

2~ Instal.lació de live-boot i live-config

*{Note:}* You do not need to install live-boot or live-config on your system to create customized live systems. However, doing so will do no harm and is useful for reference purposes. If you only want the documentation, you may now install the /{live-boot-doc}/ and /{live-config-doc}/ packages separately.

3~ Des del repositori de Debian

Tots dos, live-boot i live-config, estan disponibles al arxiu de Debian,
d'una manera similar a {Instaŀlació de live-build}#installing-live-build.

3~ A partir del codi font

Per utilitzar les darreres fonts del git, es pot seguir el procés
seguent. Assegurar-se d'estar familiaritzat amb els termes esmentats a
{Termes}#terms.

_* Clonar les fonts de live-boot i live-config

code{

 $ git clone git://live-systems.org/git/live-boot.git
 $ git clone git://live-systems.org/git/live-config.git

}code

Consultar les pàgines del manual de live-boot i live-config per més detalls
sobre la seva personalització si aquesta és la raó per construir aquests
paquets a partir de les fonts.

_* Crear els fitxers .deb de live-boot i live-config 

S'ha de crear ja sigui en la distribució de destinació o en un chroot que
contingui la plataforma de destinació: és a dir, si el objectiu és wheezy
llavors s'ha de construir contra wheezy.

Es pot utilitzar un constructor personal, com ara /{pbuilder}/ o /{sbuild}/
si es necessita crear live-boot per a una distribució de destinació
diferenta del sistema de construcció. Per exemple, per a les imatges en viu
de wheezy, crear live-boot en un chroot wheezy. Si la distribució de
destinació per casualitat coincideix amb la distribució del sistema de
construcció, es pot construir directament en el sistema de construcció amb
#{dpkg-buildpackage}# (proporcionat pel paquet /{dpkg-dev}/):

code{

 $ cd live-boot
 $ dpkg-buildpackage -b -uc -us
 $ cd ../live-config
 $ dpkg-buildpackage -b -uc -us

}code

_* Utilitzar tots el fitxers .deb generats que calguin

Com live-boot y live-config són instaŀlats per el sistema de construcció
live-build, la instaŀlació dels paquets en el sistema amfitrió no és
suficient: s'ha de tractar els .deb generats com si fossin uns paquets
personalitzats. Ja que el propòsit per construir aquests paquets a partir
del codi font és per provar coses noves a curt termini abans del llançament
oficial, seguir els pasos de {Instaŀlació de paquets modificats o de
tercers}#installing-modified-or-third-party-packages per incloure
temporalment els paquets rellevants en la configuració. En particular, cal
observar que ambdós paquets es divideixen en una part genèrica, una part de
documentació i un o més back-ends. Incloure la part genèrica, només un dels
back-ends que coincideixi amb la configuració, i, opcionalment, la
documentació. Suposant que s'està construint una imatge en viu en el
directori actual i que s'han generat tots els .deb per a una única versió
dels dos paquets al directori superior, aquestes ordres de bash són per
copiar tots els paquets importants, incloent-hi els back-ends per defecte:

code{

 $ cp ../live-boot{_,-initramfs-tools,-doc}*.deb  config/packages.chroot/
 $ cp ../live-config{_,-sysvinit,-doc}*.deb  config/packages.chroot/

}code

3~ A partir d'instantànies

Es pot deixar que live-build utilitzi les darreres instantànies de live-boot
i live-config configurant un repositori de tercers en el directori de
configuració de live-build. Suposant que ja s'ha creat un arbre de
configuració del directori actual amb #{lb config}#:

code{

 $ lb config --archives live-systems.org

}code
