:B~ Personalització dels continguts

1~customizing-contents Personalització dels continguts

Aquest capítol tracta d'afinar la personalització dels continguts del
sistema en viu més enllà de simplement triar els paquets que es desitja
incloure. Els «includes» permeten afegir o reemplaçar fitxers arbitraris en
la imatge Debian Live, els scripts ganxo (hooks) permeten executar ordres
arbitràries en diferents etapes de la construcció i en el moment d'arrencar,
i la preconfiguració permet configurar paquets quan s'instaŀlen mitjançant
respostes a les preguntes de debconf .

2~includes Includes

Tot i que l'ideal seria un sistema Debian Live que inclogués només fitxers
proporcionats per paquets Debian sense modificació, de vegades és convenient
proporcionar o modificar part del contingut a través de fitxers. Amb els
includes, és possible afegir (o substituir) fitxers arbitraris en la imatge
Debian Live. live-build ofereix tres mecanismes per al seu ús:

_* Chroot local includes: Aquests permeten afegir o substituir fitxers
dintre de chroot/Live en el sistema de fitxers. Consultar {Live/chroot local
includes}#live-chroot-local-includes per a més informació.

_* Binary local includes: Aquests et permeten afegir o substituir fitxers a
la imatge binària. Consultar {Binary local includes}#binary-local-includes
per a més informació.

_* Binary includes: Aquests et permeten afegir o substituir els fitxers
específics de Debian a la imatge binària, com ara les plantilles i
directoris d'eines. Consultar {Binary includes}#binary-includes per a més
informació.

Consultar {Termes}#terms per a més informació sobre la distinció entre les
imatges "Live" and "binary".

3~live-chroot-local-includes Live/chroot local includes

Es poden utilitzar els chroot local includes per afegir o reemplaçar fitxers
en el sistema de fitxers chroot/Live perquè puguin ser utilitzats en el
sistema en viu. Un ús típic és per omplir l'esquelet de directori d'usuari
(#{/etc/skel}#)utilitzat pel sistema en viu per crear el directori home de
l'usuari en viu. Un altre és el de subministrar fitxers de configuració que
poden ser simplement afegits o reemplaçats en la imatge sense processar;
veure{Live/chroot local hooks}#live-chroot-local-hooks si es necessita
processar-los.

Per incloure fitxers, només s'han d'afegir al directori
#{config/includes.chroot}#. Aquest directori es correspon amb el directori
arrel #{/}# del sistema en viu. Per exemple, per afegir un fitxer
#{/var/www/index.html}# en el sistema en viu, fer:

code{

 $ mkdir -p config/includes.chroot/var/www
 $ cp /path/to/my/index.html config/includes.chroot/var/www

}code

La configuració tindrà llavors l'estructura següent:

code{

 -- config
    [...]
     |-- includes.chroot
     |   `-- var
     |       `-- www
     |           `-- index.html
    [...]
     `-- templates

}code

Els chroot local includes s'instaŀlen després de la instaŀlació del paquets
de tal manera que es sobreescriuen els fitxers instaŀlats pels paquets.

3~binary-local-includes Binary local includes

Per incloure material com documentació o vídeos en el sistema de fitxers
dels medis de manera que sigui accessible immediatament després de la
inserció dels medis sense haver de arrencar el sistema en viu, es pot
utilitzar els binary local includes. Això funciona de manera similar als
chroot local includes. Per exemple, si els fitxers #{~/video_demo.*}# són
vídeos de demostració del sistema en viu descrits i lligats per una pàgina
d'índex HTML. Només cal copiar el material a #{config/includes.binary/}# de
la següent manera:

code{

 $ cp ~/video_demo.* config/includes.binary/

}code

Aquests fitxers apareixeran ara en el directori arrel dels medis en viu.

3~binary-includes Binary includes

live-build té alguns fitxers estàndard (com ara la documentació) que
s'inclouen en la configuració per defecte de tots els medis en viu. Això es
pot desactivar amb:

code{

 $ lb config --includes none

}code

En cas contrari, el material serà instaŀlat per live-build a #{/includes/}#
per defecte  en el sistema de fitxers dels medis o bé es pot especificar una
ruta alternativa amb l'opció #{--includes}#.

2~hooks Scripts ganxo (Hooks)

Els scripts ganxo permeten executar ordres en les etapes de la construcció
chroot i binary per tal de personalitzar la imatge.

3~live-chroot-local-hooks Live/chroot local hooks

Per executar ordres en l'etapa chroot, crear un script ganxo al directori
#{config/hooks/}# amb el sufix #{.chroot}# que contingui les ordres. El
ganxo s'executarà en el chroot després que la resta de la configuració del
chroot s'hagi aplicat, assegurar-se que la configuració inclou tots els
paquets i els fitxers que el ganxo necessita per funcionar. Veure els
scripts chroot d'exemple per a diverses tasques comunes de personalització
que es poden trovar a #{/usr/share/live/build/examples/hooks}# que es poden
copiar o fer un enllaç simbòlic per utilitzar-los en la configuració pròpia.

3~boot-time-hooks Scripts ganxo durant l'arrencada

Per executar ordres durant l'arrencada, es pot proporcionar scripts ganxo
live-config com s'explica a la secció "Personalització" de la seva pàgina de
manual. Es poden proporcionar els ganxos de live-config a
#{/lib/live/config/}#, tenint en compte la seqüència dels números. A
continuació, proporcionar el script ganxo propi amb el prefix d'un número de
seqüència apropiat, ja sigui com a un chroot local include a
#{config/includes.chroot/lib/live/config/}#, o com un paquet personalitzat
com es va discutir a {Instaŀlació de paquets modificats o de
tercers}#installing-modified-or-third-party-packages.

3~ Binary local hooks

Per executar ordres a l'etapa binary, crear un script ganxo amb un sufix
#{.binary}# que contingui les ordres al directori #{config/hooks/}#. El
ganxo s'executarà després que s'executin totes les ordres de la etapa binary
però avans dels binary_checksums, la darrera ordre de la etapa binary. Les
ordres del ganxo no s'executen al chroot, per tant tenir cura de no
modificar cap fitxer de fora del arbre de construcció, o es pot fer malbé el
sistema de creació! Veure els scripts ganxo de binary per a diverses tasques
comunes de personalització a #{/usr/share/live/build/examples/hooks}# que es
poden copiar o fer un enllaç simbòlic per utilitzar-los en la configuració
pròpia.

2~ Preconfiguració de les preguntes de Debconf

Els fitxers del directory #{config/preseed/}# amb el sufix #{.preseed}#
seguits del sufix de la etapa (#{.chroot}# o #{.binary}#) son considerats
fitxers de preconfiguració de debconf i són instaŀlats per live-build
utilitzant #{debconf-set-selections}# durant l'etapa corresponent.

Per a més informació sobre debconf, veure #{debconf(7)}# del paquet
/{debconf}/.
