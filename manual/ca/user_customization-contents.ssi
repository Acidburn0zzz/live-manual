:B~ Personalització dels continguts

1~customizing-contents Personalització dels continguts

Aquest capítol tracta d'afinar la personalització dels continguts del
sistema en viu més enllà de simplement triar els paquets que es desitja
incloure. Els «includes» permeten afegir o reemplaçar fitxers arbitraris en
la imatge en viu, els scripts ganxo (hooks) permeten executar ordres
arbitràries en diferents etapes de la construcció i en el moment d'arrencar,
i la preconfiguració (preseeding) permet configurar els paquets quan
s'instal·len proporcionant respostes a les preguntes de debconf .

2~includes Includes

Tot i que l'ideal seria un sistema en viu que inclogués només fitxers
proporcionats per paquets Debian sense modificació, de vegades és convenient
proporcionar o modificar part del contingut a través de fitxers. Amb els
includes, és possible afegir (o substituir) fitxers arbitraris en la imatge
en viu. live-build ofereix dos mecanismes per al seu ús:

_* Chroot local includes: Aquests permeten afegir o substituir fitxers
dintre de chroot/Live en el sistema de fitxers. Consultar {Live/chroot local
includes}#live-chroot-local-includes per a més informació.

_* Binary local includes: Aquests permeten afegir o substituir fitxers dins
la imatge binària. Consultar {Binary local includes}#binary-local-includes
per a més informació.

Consultar {Termes}#terms per a més informació sobre la distinció entre les
imatges "Live" and "binary".

3~live-chroot-local-includes Live/chroot local includes

Chroot local includes can be used to add or replace files in the chroot/Live
filesystem so that they may be used in the Live system. A typical use is to
populate the skeleton user directory (#{/etc/skel}#) used by the Live system
to create the live user's home directory. Another is to supply configuration
files that can be simply added or replaced in the image without processing;
see {Chroot local hooks}#chroot-local-hooks if processing is needed.

Per a incloure fitxers, només s'han d'afegir al directori
#{config/includes.chroot}#. Aquest directori es correspon amb el directori
arrel #{/}# del sistema en viu. Per exemple, per a afegir un fitxer
#{/var/www/index.html}# en el sistema en viu, fer:

code{

 $ mkdir -p config/includes.chroot/var/www
 $ cp /path/to/my/index.html config/includes.chroot/var/www

}code

La configuració tindrà llavors l'estructura següent:

code{

 -- config
    [...]
     |-- includes.chroot
     |   `-- var
     |       `-- www
     |           `-- index.html
    [...]

}code

Els chroot local includes s'instal·len després de la instal·lació del
paquets de tal manera que es sobreescriuen els fitxers instal·lats pels
paquets.

3~binary-local-includes Binary local includes

Per a incloure material com documentació o vídeos en el sistema de fitxers
del medi en viu de manera que sigui accessible immediatament després de la
inserció del medi sense haver de arrencar el sistema en viu, es pot
utilitzar els binary local includes. Això funciona de manera similar als
chroot local includes. Per exemple, si els fitxers #{~/video_demo.*}# són
vídeos de demostració del sistema en viu descrits i lligats per una pàgina
d'índex HTML. Només cal copiar el material a #{config/includes.binary/}# de
la següent manera:

code{

 $ cp ~/video_demo.* config/includes.binary/

}code

Aquests fitxers apareixeran ara en el directori arrel del medi en viu.

2~hooks Scripts ganxo (Hooks)

Hooks allow commands to be run in the chroot and binary stages of the build
in order to customize the image. Depending on whether you are building a
live image or a regular system image you have to place your hooks in
#{config/hooks/live}# or #{config/hooks/normal}# respectively. These are
frequently referred to as local hooks because they are executed inside the
build environment.

There are also boot-time hooks that allow you to run commands once the image
has already been built, during the boot process.

3~chroot-local-hooks Chroot local hooks

To run commands in the chroot stage, create a hook script with a
#{.hook.chroot}# suffix containing the commands either in the
#{config/hooks/live}# or #{config/hooks/normal}# directories. The hook will
run in the chroot after the rest of your chroot configuration has been
applied, so remember to ensure your configuration includes all packages and
files your hook needs in order to run. See the example chroot hook scripts
for various common chroot customization tasks provided in
#{/usr/share/doc/live-build/examples/hooks}# which you can copy or symlink
to use them in your own configuration.

3~ Binary local hooks

To run commands in the binary stage, create a hook script with a
#{.hook.binary}# suffix containing the commands either in the
#{config/hooks/live}# or #{config/hooks/normal}# directories. The hook will
run after all other binary commands are run, but before binary_checksums,
the very last binary command. The commands in your hook do not run in the
chroot, so take care not to modify any files outside of the build tree, or
you may damage your build system! See the example binary hook scripts for
various common binary customization tasks provided in
#{/usr/share/doc/live-build/examples/hooks}# which you can copy or symlink
to use them in your own configuration.

3~boot-time-hooks Scripts ganxo durant l'arrencada

Per a executar ordres durant l'arrencada, es pot proporcionar scripts ganxo
per a live-config com s'explica a la secció "Personalització" de la seva
pàgina del manual. Es poden afegir els ganxos de live-config a
#{/lib/live/config/}#, tenint en compte la seqüència dels números. A
continuació, afegir el script ganxo propi amb un número de seqüència
apropiat com a prefix, ja sigui com a un chroot local include a
#{config/includes.chroot/lib/live/config/}#, o com un paquet personalitzat
com es va discutir a {Instal·lació de paquets modificats o de
tercers}#installing-modified-or-third-party-packages.

2~ Preconfiguració de les preguntes de Debconf

Els fitxers del directory #{config/preseed/}# amb el sufix #{.cfg}# seguits
del sufix de l'etapa (#{.chroot}# o #{.binary}#) son considerats fitxers de
preconfiguració de debconf i són instal·lats per live-build utilitzant
#{debconf-set-selections}# durant l'etapa corresponent.

Per a més informació sobre debconf, veure #{debconf(7)}# del paquet
/{debconf}/.
