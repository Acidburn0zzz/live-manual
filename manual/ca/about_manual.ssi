:B~ Sobre aquest manual

1~about-manual Sobre aquest manual

Aquest manual serveix com a punt d'accés únic a tota la documentació
relacionada amb el projecte Debian Live i en particular s'aplica al
programari produït pel projecte per la versió Debian 7.0 "wheezy". Una
versió actualitzada es pot trobar sempre a http://live.debian.net/

Si bé live-manual es centra principalment en ajudar a construir un sistema
viu i no en temes dels usuaris finals, un usuari final pot trobar informació
útil en aquestes seccions: {Conceptes bàsics}#the-basics abasta la
preparació d'imatges per ser arrencadas des dels dispositius o la xarxa, i
{Personalització dels comportaments en temps
d'execució}#customizing-run-time-behaviours descriu algunes de les opcions
que es poden especificar durant l'arrencada del sistema, com ara la selecció
de la disposició del teclat, la configuració regional i l'us de la
persistència.

Algunes de les ordres esmentades en el text s'han d'executar amb privilegis
de superusuari que es poden obtenir esdevenint l'usuari root amb #{su}# o
mitjançant l'ús de #{sudo}#. Per distingir entre les ordres que poden ser
executades per un usuari sense privilegis i aquelles que requereixen
privilegis de root, s'anteposa #{$}# o #{#}# respectivament. Aquest símbol
no és part de l'ordre. 

2~ Per als impacients

Si bé creiem que tot el que hi ha en aquest manual és important si més no
per alguns dels nostres usuaris, ens adonem que hi ha una gran quantitat de
material per cobrir i que és possible que es vulgui experimentar l'èxit amb
el programari aviat, abans d'aprofundir en els detalls. Per tant, us
recomanem llegir en el següent ordre.

En primer lloc, llegir aquest capítol, {Sobre aquest manual}#about-manual,
des del principi i acabant amb els {Termes}#terms. A continuació, saltar als
tres tutorials abans dels {Exemples}#examples, secció dissenyada per
ensenyar la construcció de la imatge i alguns aspectes bàsics de la
personalització. Llegir en primer lloc {Ús dels exemples}#using-the-examples
seguit per {Tutorial 1: Una imatge estàndard}#tutorial-1, {Tutorial 2: Una
utilitat de navegador web}#tutorial-2 i finalment, {Tutorial 3: Una image
personalitzada}#tutorial-3. Al final d'aquests tutorials, es tindrà una idea
del que es pot fer amb Debian Live.

Us animem a tornar i a fer un estudi del manual en profunditat, la propera
lectura pot ser {Conceptes bàsics}#the-basics, fregant o saltant {Construir
una imatge netboot}#building-netboot-image, i acabant per la lectura de la
{Visió general de la personalització}#customization-overview i els capítols
que segueixen. En aquest punt, esperem que estigueu ben emocionats pel que
es pot fer amb Debian Live i motivats per llegir la resta del manual, de
principi a fi.

2~terms Termes

_* *{Sistema viu}*: Un sistema operatiu que pot arrencar sense necessitat
d'instaŀlació en un disc dur. Els sistemes vius no alteren el sistema
operatiu local(s) o els fitxer(s) ja instaŀlats al disc dur de l'ordinador a
menys que així se'ls ho indiqui. Els sistemes vius normalment s'inician des
de dispositius, com ara CD, DVD o memòries USB. Alguns també poden arrencar
des de la xarxa.

_* *{Debian Live}*: Un subprojecte de Debian, que manté, entre altres, els
paquets live-boot, live-build, live-config i live-manual. 

_* *{Sistema Debian Live}*: Un sistema viu que utilitza el programari del
sistema operatiu Debian que es pot arrencar des d'un CD, DVD, memòries USB,
o la xarxa (utilitzant imatges netboot) i a través d'Internet (mitjançant el
paràmetre d'arrencada #{fetch=URL}#).

_* *{Sistema amfitrió}*: L'entorn utilitzat per crear el sistema en viu.

_* *{Sistema objectiu}*: L'entorn que s'utilitza per executar el sistema en
viu.

_* *{live-boot}*: Una coŀlecció de scripts per arrencar els sistemes
vius. live-boot abans havia estat part de /{live-initramfs}/.

_* *{live-build}*: Una coŀlecció de scripts utilitzats per construir
sistemes personalitzats de Debian Live. live-build era anteriorment conegut
com /{live-helper}/ i fins i tot abans conegut com /{live-package}/.

_* *{live-config}*: Una coŀlecció de scripts utilitzats per configurar un
sistema en viu durant el procés d'arrencada. live-config abans va ser part
de /{live-initramfs}/.

_* *{live-manual}*: Aquest document és mantingut en un paquet anomenat
live-manual

_* *{Instaŀlador de Debian (d-i)}*: El sistema oficial d'instaŀlació de la
distribució Debian.

_* *{Paràmeters d'arrencada}*: Els paràmetres que es poden introduir a
l'indicador del carregador d'arrencada per influir en el nucli o live-config

_* *{chroot}*: El programa /{chroot}/, #{chroot(8)}#, ens permet executar
diferentes instàncies d'un entorn GNU/Linux a la vegada en un sol sistema
sense reiniciar.

_* *{Imatge binaria}*: Un fitxer que conté el sistema en viu, com ara
binary.iso o binary.img.

_* *{Distribució objectiu}*: La distribució en què es basa el sistema en
viu. Que pot diferir de la distribució del sistema amfitrió.

_* *{stable/testing/unstable}*: La distribució *{stable}* conté l'última
distribució de Debian llençada oficialment. La distribució *{testing}* és
l'àrea d'assaig per a la pròxima versió *{stable}*. Un avantatge important
de l'ús d'aquesta distribució és que té versions més recents del programari
en relació amb l'edició *{stable}*. La distribució *{unstable}* és on es
produeix el desenvolupament actiu de Debian. En general, aquesta distribució
és utilitzada pels desenvolupadors i els que els agrada viure en risc. Al
llarg del manual, es tendeix a utilitzar els seus noms en clau, com ara
wheezy or sid, ja que és el que fan servir les pròpies eines.

2~ Autors

Llistat d'autors (en ordre alfabètic)

_* Ben Armstrong

_* Brendan Sleight

_* Carlos Zuferri

_* Chris Lamb

_* Daniel Baumann

_* Franklin Piat

_* Jonas Stein

_* Kai Hendry

_* Marco Amadori

_* Mathieu Geli

_* Matthias Kirschner

_* Richard Nelson

_* Trent W. Buck

2~how-to-contribute Contribuir a aquest document

Aquest manual està pensat com un projecte comunitari i totes les propostes
per millorar-lo i les contribucions són molt benvingudes. Veure la secció
{Contribuir al projecte}#contributing-to-project per obtenir informació
detallada sobre com obtenir la clau i fer bons commits.

3~ Aplicar canvis

Per tal de realitzar canvis en el manual anglès s'ha d'editar els fitxers
correctes a #{manual/en/}# però abans de presentar una contribució,
previsualitzar el treball. Per previsualitzar el live-manual, assegurar-se
que s'han instaŀlat els paquets necessaris per a la seva construcció
mitjançant l'execució de:

code{

# apt-get install make po4a sisu-complete libnokogiri-ruby

}code

Es pot crear el live-manual des del directori de nivell superior del arbre
Git mitjançant l'execució de:

code{

 $ make build

}code

Com es necessita un cert temps per construir el manual en tots els idiomes
suportats, potser resulti convenient quan es fa una prova construir un sol
idioma, per exemple, mitjançant l'execució de:

code{

$ make build LANGUAGES=en

}code

També es possible crear per tipus de document, per exemple: 

code{

 $ make build FORMATS=pdf

}code

O combinar tot dos, per exemple:

code{

 $ make build LANGUAGES=it FORMATS=html

}code

Després de revisar el treball i assegurar-se que tot està bé, no fer un
#{make commit}# a menys que s'actualitzen les traduccions al mateix temps, i
en aquest cas, no barrejar els canvis al manual anglès i les traduccions en
el mateix commit, fer-ne un altre separat per cada canvi. Veure la secció
{Traducció}#translation per a més detalls.

3~translation Traducció

Per començar la traducció d'un idioma nou, seguir aquests passos:

_* Traduir els fitxers *{about_manual.ssi.pot}*, *{about_project.ssi.pot}* i
*{index.html.in.pot}* a la vostra llengua amb el vostre editor favorit (per
exemple /{poedit}/). Enviar els fitxers #{.po}# traduïts a la llista de
correu perquè l'equip de traducció pugui comprovar la seva integritat.

_* Per activar una nova llengua al autobuild, només cal afegir els fitxers
inicials traduïts a #{manual/po/${LANGUAGE}/}# i executar #{make commit}#. I
llavors editar #{manual/_sisu/home/index.html}#.

_* Una vegada que s'ha afegit la nova llengua, es pot continuar traduint la
resta de fitxers dins de #{manual/po/}# a l'atzar.

_* No oblidar que es necessari fer #{make commit}# per garantir que els
manuals traduïts s'actualitzen a partir del fitxers po i llavors es poden
revisar els canvis executant #{make build}# abans de #{git add .}#, #{git
commit -m "Translating..."}# i #{git push}#.

Després d'executar #{make commit}# es podrà veure una mica de text a la
pantalla. Bàsicament són missatges informatius sobre l'estat del procés i
també algunes pistes sobre el que es pot fer per millorar live-manual. Si no
es veu cap error fatal, generalment es pot procedir i enviar la contribució.

live-manual ve amb dues utilitats que poden ser de gran ajuda pels
traductors a l'hora de trobar missatges sense traduir i difusos. La primera
és "make check". Aquesta activa un script que comprova la integritat dels
fitxers po i indica en detall quants missatges complets o incomplets hi ha a
cada fitxer po. S'atura quan troba un error fatal i informa en detall sobre
quin és el problema. La segona, "make translate", només actua sobre els
missatges difusos però ajuda a trobar-los i corregir-los un per un.

*{Nota:}* Es pot utilitzar #{make clean}# per netejar l'arbre git abans de fer un push. Aquest  pas no és obligatori, gràcies al fitxer .gitignore, però és una bona pràctica per evitar enviar fitxers de forma involuntària.
