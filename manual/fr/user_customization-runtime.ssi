:B~ Personnalisation des comportements au moment de l'exécution

1~customizing-run-time-behaviours Personnalisation des comportements au
moment de l'exécution

Toute la configuration qui est fait pendant l'exécution est fait par
live-config. Voici quelques options les plus courantes de live-config
d'intérêt pour les utilisateurs. Une liste complète de toutes les
possibilités peut être trouvée dans la page de manuel de live-config.

2~ Personnalisation de l'utilisateur Live

Une considération importante est que l'utilisateur live est créé par
live-boot au démarrage, non pas par live-config au moment de la
construction. Ça influence non seulement là où les documents relatifs à
l'utilisateur live sont introduits dans votre construction, tel que discuté
dans {Live/chroot local includes}#live-chroot-local-includes, mais aussi
tous les groupes et les autorisations associées à l'utilisateur live.

Vous pouvez spécifier d'autres groupes pour l'utilisateur live en
préconfigurant la valeur debconf #{passwd/user-default-groups}#. Par
exemple, pour ajouter l'utilisateur live au groupe #{fuse}# ajoutez la ligne
suivante à un fichier dans le répertoire #{config/chroot_local-preseed}#:

code{

 user-setup passwd/user-default-groups string audio cdrom dip floppy video plugdev netdev powerdev scanner bluetooth fuse

}code

Il est également possible de changer le nom d'utilisateur par défaut «user»
et du mot de passe par défaut "live". Si vous voulez pour quelque raison,
vous pouvez facilement faire ça comme suit:

Pour modifier le nom d'utilisateur par défaut, vous pouvez simplement le
spécifier dans votre config:

code{

$ --bootappend-live "username=live-user"

}code

Une façon possible de changer le mot de passe par défaut est au moyen d'un
hook comme décrit dans {Boot-time hooks}#boot-time-hooks. Pour ce faire vous
pouvez utiliser le hook "passwd" de
#{/usr/share/doc/live-config/examples/hooks}#, ajouter un préfixe correct
(par exemple 200-passwd) et l'ajouter à
#{config/chroot_local-includes/lib/live/config/}#

2~customizing-locale-and-language Personnalisation des paramètres régionaux
et la langue

Au démarrage du système live, la langue est impliqué dans trois étapes:

_* la génération des paramètres régionaux

_* réglage de la disposition du clavier pour la console

_* réglage de la disposition du clavier pour X

Les paramètres régionaux par défaut pendant la construction d'un système
Live sont "locales=en_US.UTF-8". Pour définir les paramètres régionaux qui
doivent être générés, utilisez le paramètre #{locales}# dans l'option
#{--bootappend-live}# de #{lb config}#, par exemple

code{

 $ lb config --bootappend-live "locales=de_CH.UTF-8"

}code

Ce paramètre peut également être utilisé à la ligne de commande du
noyau. Vous pouvez spécifier des paramètres régionaux par
#{language_country.encoding}#.

Tant la console et la configuration du clavier X dépendent du paramètre
#{keyboard-layouts}# de l'option #{--bootappend-live}#. Options valides pour
les dispositions des claviers X peuvent être trouvés dans
#{/usr/share/X11/xkb/rules/base.xml}# (plutôt limitées à des codes des pays
à deux lettres). Pour trouver la valeur (les deux caractères), correspondant
à une langue essayez de rechercher le nom anglais de la nation où la langue
est parlée, par exemple:

code{

 $ grep -i sweden -C3 /usr/share/X11/xkb/rules/base.xml | grep name
 <name>se</name>

}code

Pour obtenir les fichiers des paramètres régionaux pour les claviers
allemand et suisse allemand dans X utiliser:

code{

 $ lb config --bootappend-live "locales=de_CH.UTF-8 keyboard-layouts=ch"

}code

Une liste des valeurs valides des claviers pour la console peut être figuré
avec la commande suivante:

code{

 $ for i in $(find /usr/share/keymaps/ -iname "*kmap.gz"); \
     do basename $i | head -c -9; echo; done | sort | less

}code

Alternativement, vous pouvez utiliser le paquet #{console-setup}#, un outil
pour vous permettre de configurer la disposition de la console en utilisant
définitions X (XKB), vous pouvez alors définir votre clavier plus
précisément avec variables #{keyboard-layouts}#, #{keyboard-variant}#,
#{keyboard-options}# et #{keyboard-model}#; live-boot pourra également
utiliser ces paramètres pour la configuration de X. Par exemple, pour mettre
en place un système français avec une disposition Français Dvorak (appelée
Bepo) sur un clavier TypeMatrix, à la fois dans la console et X11, utilisez:

code{

 $ lb config --bootappend-live \
     "locales=fr_FR.UTF-8 keyboard-layouts=fr keyboard-variant=bepo keyboard-model=tm2030usb"

}code

2~persistence Persistance

Un paradigme d'un Live CD est être un système pré-installé qui se démarre du
support en lecture seule, comme un cdrom, où les données et les
modifications ne survivent pas aux redémarrages du matériel hôte qui
l'exécute.

Un système Debian Live est une généralisation de ce paradigme et soutient
ainsi autres supports, en plus de CDs, mais encore, dans son comportement
par défaut, il doit être considéré en lecture seule et toutes les évolutions
d'exécution du système sont perdus à l'arrêt.

La persistance est un nom commun pour les différents types de solutions pour
sauver, après un redémarrage, certaines ou toutes les données, de cette
évolution pendant l'exécution du système. Pour comprendre comment cela
pourrait fonctionner il pourrait être utile de savoir que même si le système
est démarré et exécuté à partir d'un support en lecture seule, la
modification des fichiers et répertoires sont écrits sur des supports
inscriptibles, typiquement un disque ram (tmpfs) et aux disques RAM les
données ne survivent pas à un redémarrage.

Les données stockées sur ce disque virtuel doivent être enregistrées sur un
support inscriptible persistant comme un disque dur, une clé USB, un partage
réseau ou même une séance d'un CD/DVD multisession (ré)inscriptible. Tous
ces supports sont pris en charge dans Debian Live de différentes manières,
et tous mais le dernier nécessitent un paramètre de démarrage spéciale à
préciser au moment du démarrage: #{persistent}#.

3~ Persistance pleine

Par «persistance pleine» on entend que plutôt que d'utiliser un tmpfs pour
le stockage des modifications au support en lecture seule (avec le système
copy-on-write, COW) une partition accessible en écriture est utilisée. Pour
utiliser cette fonction une partition avec un système de fichiers accessible
en écriture avec l'étiquette "live-rw" doit être fixé sur le système au
moment du démarrage et le système doit être démarré avec le paramètre de
démarrage "persistent". Cette partition peut être une partition ext2 du
disque dur ou sur une clé USB créé avec, par exemple:

code{

 # mkfs.ext2 -L live-rw /dev/sdb1

}code

Voir aussi {Utilisation de l'espace disponible sur une clé
USB}#using-usb-extra-space.

Si vous avez déjà une partition sur votre dispositif, vous pouvez simplement
modifier l'étiquette avec l'un des suivants:

code{

 # tune2fs -L live-rw /dev/sdb1 # for ext2,3,4 filesystems

}code

Mais puisque les utilisateurs du système live ne peuvent pas toujours
utiliser une partition du disque dur, et considérant que la plupart des clés
USB ont des vitesses d'écriture pauvres, «pleine» persistance pourrait
également être utilisé avec des fichiers image, si vous pouviez créer un
fichier qui représente une partition et mettre cette image fichier, même sur
une partition NTFS d'un système d'exploitation étranger, avec quelque chose
comme:

code{

 $ dd if=/dev/null of=live-rw bs=1G seek=1 # for a 1GB sized image file
 $ /sbin/mkfs.ext2 -F live-rw

}code

Ensuite, copiez le fichier #{live-rw}# sur une partition accessible en
écriture et redémarrer avec le paramètre de démarrage "persistent".

3~ Montage automatique de Home

Si lors de l'initialisation une partition (système de fichiers) un fichier
image ou une partition étiquetée #{home-rw}# est découverte, ce système de
fichiers sera monté directement comme #{/home}#, permettant ainsi la
persistance des fichiers qui appartiennent à l'utilisateur par défaut. Elle
peut être combinée avec la persistance complète.

3~ Instantanés

Les instantanés sont des collections de fichiers et de répertoires qui ne
sont pas montés lors de l'exécution, mais qui sont copiés à partir d'un
périphérique persistant à le système (tmpfs) au démarrage et qui sont
resynchronisés au redémarrage/arrêt du système. Le contenu d'un instantané
pourrait résider sur une partition ou un fichier image (comme les types
mentionnés ci-dessus) étiquetés #{live-sn}#, mais il est par défaut à une
archive cpio simple appelé #{live-sn.cpio.gz}#. Comme ci-dessus, au moment
du démarrage, les périphériques connectés à le système sont examinés pour
voir si une partition ou un fichier nommé comme ça pourrait être trouvé. Une
coupure de courant pendant l'exécution pourrait conduire à la perte de
données, donc un outil appelé #{live-snapshot --refresh}# pourrait être
appelé à synchroniser des changements importants. Ce type de persistance,
car elle n'écrit pas continuellement dans les supports persistants, est le
plus respectueux avec les dispositifs flash et le plus rapide de tous les
systèmes de persistance.

Une version instantané de /home existe aussi, et son étiquette est
#{home-sn.*}#; elle travaille le même que l'instantané principale, mais il
est seulement appliquée à /home.

Les instantanés ne peuvent pas actuellement gérer la suppression de
fichiers, mais la persistance pleine et le montage automatique de home si
peuvent le faire.

3~ SubText persistant

Si un utilisateur a besoin de multiples stockages persistants du même type
pour différents endroits ou l'essai, tel que #{live-rw-nonwork}# et
#{live-rw-work}#, le paramètre de démarrage #{persistent-subtext}# utilisé
en conjonction avec le paramètre de démarrage #{persistent}# permettra
multiples mais uniques supports persistants. Un exemple serait le cas si un
utilisateur voudrait utiliser une partition persistante étiqueté
#{live-sn-subText}# il utiliserait les paramètres de démarrage:
#{persistent}# #{persistent-subtext=subText}#.

3~ Remasterisation partielle

Les modifications de l'exécution du tmpfs pourraient être recueillies à
l'aide de live-snapshot dans une squashfs et ajoutés au CD en remasterisant
l'ISO dans le cas des CD-R ou en ajoutant une session à un cd/dvd(rw)
multisession; live-boot monte tous les systèmes de fichiers /live dans
l'ordre ou avec le paramètre de démarrage du module.
