:B~ À propos de ce manuel

1~about-manual À propos de ce manuel

L'objectif principal de ce manuel est servir de point d'accès unique à tous
les documents liés au projet Debian Live et particulièrement aux logiciels
produits par le projet pour Debian 7.0 "wheezy". Une version mise à jour
peut toujours être trouvée à http://live.debian.net/

Tandis ce manuel est principalement sur vous aider à construire un système
Live et non pas sur des sujets de l'utilisateur final, un utilisateur final
peut trouver des informations utiles dans ces sections: {Les
Bases}#the-basics couvrent la préparation des images pour être démarrées sur
les supports ou sur le réseau, et {Personnalisation des comportements au
moment de l'exécution}#customizing-run-time-behaviours décrit certaines
options qui peuvent être spécifiées à l'invite de démarrage, tels que la
sélection d'un clavier, des paramètres régionaux et la persistance.

Certaines commandes mentionnées dans le texte doivent être exécutées avec
les privilèges de super-utilisateur, qui peuvent être obtenus en devenant
super-utilisateur à l'aide de #{su}# ou en utilisant #{sudo}#. Afin de
distinguer les commandes qui peuvent être exécutées par un utilisateur sans
privilèges de celles nécessitant les privilèges de super-utilisateur, les
commandes sont précédées respectivement par #{$}# ou #{#}#. Ce symbole ne
fait pas partie de la commande.

2~ Pour les impatients

Même si nous croyons que tout dans ce manuel est important pour au moins
certains de nos utilisateurs, nous nous rendons compte qu'il y a beaucoup de
matière à couvrir et que vous pouvez vouloir expérimenter avant d'entrer
dans les détails. Par conséquent, nous vous suggérons de lire dans l'ordre
suivant.

Tout d'abord, lisez ce chapitre {À propos de ce manuel}#about-manual dès le
début et finissant avec la section {Terminologie}#terms. Ensuite, sautez aux
trois tutoriels à l'avant de la section {Exemples}#examples destinée à vous
apprendre la construction de l'image et les bases de la
personnalisation. Lire en premier {En utilisant les
exemples}#using-the-examples, suivie par {Tutoriel 1: Une image
standard}#tutorial-1, {Tutoriel 2: Un logiciel de navigateur Web}#tutorial-2
et finalement {Tutoriel 3: Une image personnalisée}#tutorial-3. À la fin de
ces tutoriels, vous aurez un avant-goût de ce qui peut être fait avec Debian
Live.

Nous vous encourageons à revenir à l'étude plus approfondie du manuel, la
prochaine lecture peut-être {Les bases}#the-basics, passer pour {Construire
une image netboot}#building-netboot-image, et finissant par la lecture de
la{Vue d'ensemble de la personnalisation}#customization-overview et les
autres sections suivantes. En ce point, nous espérons que vous soyez
complètement excités par ce que on peut faire avec Debian Live et motivés
pour lire le reste du manuel, du début à la fin.

2~terms Terminologie

_* *{Système Live}*: Un système d'exploitation pouvant être démarré sans
installation préalable sur un disque dur. Les Systèmes Live ne modifient pas
le système d'exploitation local ou les fichiers installés sur le disque dur
sans qu'on leur en donne explicitement l'instruction. D'habitude, les
systèmes Live sont démarrés à partir des supports tels que des CD, DVD, ou
des clés USB. Certains systèmes peuvent également être démarrés sur le
réseau.

_* *{Debian Live}*: Le sous-projet Debian qui maintient, entre autres, les
paquets live-boot, live-build, live-config et live-manual.

_* *{Système Debian Live}*: Un système live qui utilise les logiciels du
système d'exploitation Debian et qui peut être démarré sur CD, DVD, clé USB,
sur le réseau (à l'aide des images netboot), et à partir d'Internet (à
l'aide du paramètre de démarrage #{fetch=URL}#).

_* *{Système hôte}*: L'environnement utilisé pour créer le système live.

_* *{Système cible}*: L'environnement utilisé pour faire fonctionner le
système live.

_* *{live-boot}*: Une collection de scripts utilisés pour lancer des
systèmes live. live-boot faisait initialement partie de /{live-initramfs}/.

_* *{live-build}*: Une collection de scripts utilisés pour personnaliser les
systèmes Debian Live. live-build était initialement nommé /{live-package}/,
puis /{live-helper}/.

_* *{live-config}*: Une collection de scripts utilisés pour configurer un
système live pendant le processus d'amorçage. live-config faisait
initialement partie de /{live-initramfs}/.

_* *{live-manual}*: Ce document est maintenu dans un paquet nommé
live-manual.

_* *{Debian Installer (d-i)}*: Le système d'installation officiel pour la
distribution Debian.

_* *{Paramètres d'amorçage}*: Les paramètres qui peuvent être entrés à
l'invite de démarrage afin de modifier le noyau ou live-config.

_* *{chroot}*: Le logiciel /{chroot}/, #{chroot(8)}#, nous permet d'exécuter
plusieurs instances concurrentes de l'environnement GNU/Linux sur un système
sans redémarrage.

_* *{Image binaire}*: Un fichier contenant le système live, tel que
binary.iso ou binary.img.

_* *{Distribution cible}*: La distribution sur laquelle votre système live
sera basée. Ceci peut être diffèrent de la distribution de votre système
hôte.

_* *{stable/testing/unstable}*: La distribution *{stable}* contient la
dernière version officielle de Debian. La distribution *{testing}* est la
prochaine version stable où seulement les paquets suffisamment matures
peuvent entrer. Un avantage de cette distribution est qu'elle contient des
logiciels de versions plus récentes que la version *{stable}*. La
distribution *{unstable}* est en constante évolution. En général cette
distribution est utilisée par les développeurs et ceux qui aiment le
risque. Tout au long du manuel, nous avons tendance à utiliser les noms de
code pour les évolutions majeures, tels que wheezy ou sid, car c'est ce qui
est soutenu par les outils eux-mêmes.

2~ Auteurs

La liste des auteurs (dans l'ordre alphabétique):

_* Ben Armstrong

_* Brendan Sleight

_* Carlos Zuferri

_* Chris Lamb

_* Daniel Baumann

_* Franklin Piat

_* Jonas Stein

_* Kai Hendry

_* Marco Amadori

_* Mathieu Geli

_* Matthias Kirschner

_* Richard Nelson

_* Trent W. Buck

2~how-to-contribute Contribuer à ce document

Ce manuel est conçu comme un projet communautaire et toutes les propositions
d'améliorations et de contributions sont bienvenues. La meilleure façon de
soumettre une contribution est l'envoyer à la liste de diffusion. S'il vous
plaît voir {Contact}#contact pour plus d'informations.

Lorsque vous soumettez une contribution, veuillez indiquer clairement le
copyright et inclure la mention légale relative à la licence. Notez que pour
être acceptée, la contribution doit être déposée sous la même licence que le
reste du document, c'est-à-dire la GPL version 3 ou ultérieure.

Les sources de ce manuel sont maintenues à l'aide du logiciel de gestion de
versions Git (voir {Dépôts Git}#git-repositories). Vous pouvez obtenir la
dernière copie en exécutant:

code{

$ git clone git://live.debian.net/git/live-manual.git

}code

Avant de soumettre votre contribution, veuillez prévisualiser votre
travail. Afin de prévisualiser live-manual, assurez-vous que les paquets
nécessaires sont installés en exécutant:

code{

 # apt-get install make po4a sisu-complete libnokogiri-ruby

}code

Vous pouvez compiler live-manual dans le répertoire de niveau supérieur de
votre Git checkout en exécutant:

code{

 $ make build

}code

Comme il faut un certain temps pour construire le manuel dans toutes les
langues disponibles, il peut être pratique construire pour une seule langue,
par exemple en exécutant:

code{

 $ make build LANGUAGES=en

}code

Il est également possible de construire par type de document, par exemple,

code{

 $ make build FORMATS=pdf

}code

Ou combiner les deux, par exemple:

code{

 $ make build LANGUAGES=it FORMATS=html

}code

3~ Appliquer des modifications

Les contributions au dépôt sont possibles pour tout le monde. Cependant,
nous vous demandons d'envoyer les changements importants sur la liste de
diffusion au préalable. Afin de faire un push au dépôt, les étapes suivantes
sont nécessaires.

_* Téléchargez la clé publique:

code{

 $ mkdir -p ~/.ssh/identity.d
 $ wget http://live.debian.net/other/keys/git@live.debian.net \
     -O ~/.ssh/identity.d/git@live.debian.net
 $ wget http://live.debian.net/other/keys/git@live.debian.net.pub \
     -O ~/.ssh/identity.d/git@live.debian.net.pub
 $ chmod 0600 ~/.ssh/identity.d/git@live.debian.net*

}code

_* Ajoutez la section suivante à votre configuration openssh-client:

code{

 $ cat >> ~/.ssh/config << EOF
 Host live.debian.net
     Hostname live.debian.net
     User git
     IdentityFile ~/.ssh/identity.d/git@live.debian.net
 EOF

}code

_* Clonez le manuel via ssh:

code{

 $ git clone git@live.debian.net:/live-manual.git
 $ cd live-manual && git checkout debian-next

}code

_* Notez que vous devez livrer les changements sur la branche debian-next,
pas sur la branche debian.

_* Ne pas utiliser #{make commit}# à moins que vous mettez à jour les
traductions dans le commit, et dans ce cas, ne pas mélanger les
modifications apportées au manuel en anglais et les traductions dans la même
livraison, mais utiliser commits séparés. Voir la section
{Traduction}#translation pour plus de détails.

_* Veuillez écrire les commentaires du commit à l'aide de phrases complètes,
en commençant par une majuscule et en terminant par un point, et avec la
forme 'Fixing/Adding/Removing/Correcting/Translating', par exemple

code{

 $ git commit -a -m "Adding a section on applying patches."

}code

_* Envoyez votre commit au serveur:

code{

 $ git push

}code

3~translation Traduction

Pour commencer la traduction d'une nouvelle langue, suivez ces étapes:

_* Traduire les fichiers *{about_manual.ssi.pot}*, *{about_project.ssi.pot}*
et *{index.html.in.pot}* à votre langue avec votre éditeur préféré (comme
/{poedit}/). Envoyer les fichiers #{.po}# traduits à la liste de diffusion
afin que l'équipe de traduction puisse vérifier leur intégrité.

_* Pour activer une nouvelle langue dans l'autobuild il suffit d'ajouter les
premiers fichiers traduits à #{manual/po/${LANGUAGE}/}# et lancer #{make
commit}#.  Et alors modifier #{manual/_sisu/home/index.html}#.

_* Une fois la nouvelle langue est ajoutée,  vous pouvez continuer avec la
traduction des fichiers po dans #{manual/po/}# de façon aléatoire.

_* N'oubliez pas que vous devez faire un #{make commit}# pour assurer que la
traduction des manuels est mise à jour à partir des fichiers po, alors vous
pouvez réviser vos modifications avec #{make build}# avant #{git add .}#,
#{git commit -m "Translating..."}# et #{git push}#.

*{Remarque:}* Vous pouvez utiliser #{make clean}# pour nettoyer votre arbre git avant de faire un push. Cette étape n'est pas obligatoire grâce au fichier .gitignore mais c'est une bonne pratique pour éviter d'envoyer certains fichiers involontairement.
