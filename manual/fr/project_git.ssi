:B~ Dépôts Git 

1~git-repositories Dépôts Git

La liste de tous les dépôts disponibles est à
http://live.debian.net/gitweb/. Les URLs git du projet ont la forme:
#{protocole://live.debian.net/git/dépôt}#. Ainsi, afin de cloner live-manual
en lecture seule, lancer:

code{

 $ git clone git://live.debian.net/git/live-manual.git

}code

Ou,

code{

 $ git clone https://live.debian.net/git/live-manual.git

}code

Ou,

code{

 $ git clone http://live.debian.net/git/live-manual.git

}code

Les adresses pour cloner avec autorisation d'écriture ont la forme:
#{git@live.debian.net:/dépôt}#.

So, again, to clone live-manual over ssh you must type:

code{

 $ git clone git@live.debian.net:live-manual.git

}code

L'arbre git est composé de plusieurs branches différentes. Les branches
*{debian}* et *{debian-next}* sont particulièrement remarquables car elles
contiennent le travail réel qui sera finalement inclus dans chaque nouvelle
version.

Après de cloner quelques-uns des dépôts existants, vous serez sur la branche
*{debian}*. Ceci est approprié pour jeter un oeil à l'état de la dernière
version du projet, mais avant de commencer le travail, il est essentiel de
passer à la branche *{debian-next}*. Pour ce faire:

code{

 $ git checkout debian-next

}code

La branche *{debian-next}*, qui n'est pas toujours fast-forward, est
l'endroit où toutes les modifications sont envoyées en premier, avant de les
fusionner dans la branche *{debian}*. Pour faire une analogie, c'est comme
un terrain d'essai. Si vous travaillez sur cette branche et avez besoin de
faire un pull, vous devrez faire un #{git pull --rebase}# de sorte que vos
modifications locales sont stockées tandis qu'on fait une mise à jour à
partir du serveur, puis vos changements seront mis sur le dessus de tout
cela.

2~ Gestion de multiples dépôts

Si vous avez l'intention de cloner plusieurs des dépôts Debian Live et
passer à la branche *{debian-next}* tout de suite pour vérifier le dernier
code, écrire un correctif ou contribuer avec une traduction, vous devriez
savoir que le serveur git fournit un fichier #{mrconfig}# pour faciliter la
manipulation de multiples dépôts. Pour l'utiliser, vous devez installer le
paquet /{mr}/ et après, lancer:

code{

 $  mr bootstrap http://live.debian.net/other/mr/mrconfig

}code

This command will automatically clone and checkout to the *{debian-next}*
branch the development repositories of the Debian packages produced by the
project. These include, among others, the live-images repository, which
contains the configurations used for the prebuilt images that the project
publishes for general use. For more information on how to use this
repository, see {Clone a configuration published via
Git}#clone-configuration-via-git
