B~ Style du code

1~coding-style Style du code

Ce chapitre documente le style du code utilisé en live-boot et autres.

2~ Compatibilité

_* Ne pas utiliser la syntaxe ou la sémantique qui sont uniques à le shell
Bash. Par exemple, l'utilisation d'arrays.

_* N'utiliser que le sous-ensemble POSIX - par exemple, utiliser $(foo) au
lieu de `foo`.

_* Vous pouvez vérifier vos scripts avec 'sh -n' et 'checkbashisms'.

2~ Indentation

_* Toujours utiliser des tabulations en lieu des espaces.

2~ Adaptateur

_* Généralement, les lignes sont de 80 caractères au maximum.

_* Utilisez le «style Linux» des sauts de ligne:

Mal:

code{

 if foo; then
         bar
 fi

}code

Bien:

code{

 if foo
 then
         bar
 fi

}code

_* La même chose vaut pour les fonctions:

Mal:

code{

 foo () {
         bar
 }

}code

Bien:

code{

 foo ()
 {
         bar
 }

}code

2~ Variables

_* Les variables sont toujours en lettres majuscules.

_* Les variables utilisées dans #{lb config}# commencent toujours par le
préfixe #{LB_}#.

_* Les variables temporaires internes en live-build devraient commencer avec
le préfixe #{\_LB_}#.

_* Les variables locales commencent avec le préfixe #{\_\_LB_}#.

_* Les variables en relation avec un paramètre de démarrage en live-config
commencent par #{LIVE_}#.

_* Toutes les autres variables en live-config commencent par le préfixe
#{_}#.

_* Utilisez des accolades autour des variables; par exemple écrire
#{${FOO}}# au lieu de #{$FOO}#.

_* Toujours protéger les variables avec guillemets pour respecter les
espaces potentiels: écrire #{"${FOO}"}# en lieu de #{${FOO}}#.

_* Pour des raisons de cohérence, toujours utiliser les guillemets lors de
l'attribution des valeurs aux variables:

Mal:

code{

 FOO=bar

}code

Bien:

code{

 FOO="bar"

}code

_* Si plusieurs variables sont utilisées, utiliser les guillemets pour
l'expression complète:

Mal:

code{

 if [ -f "${FOO}"/foo/"${BAR}"/bar ]
 then
         foobar
 fi

}code

Bien:

code{

 if [ -f "${FOO}/foo/${BAR}/bar" ]
 then
         foobar
 fi

}code

2~ Autres

_* Use "#{|}#" (without the surround quotes) as a separator in calls to sed,
e.g. "#{sed -e 's|foo|bar|'}#" (without "").

_* Ne pas utiliser la commande #{test}# pour des comparaisons ou des tests,
utilisez "#{[}#" "#{]}#" (sans ""); par exemple "#{if [ -x /bin/foo ];
...}#" et non pas "#{if test -x /bin/foo; ...}#".

_* Utiliser #{case}# dans la mesure du possible en lieu de #{test}#, parce
qu'il est plus facile à lire et plus rapide dans l'exécution.
