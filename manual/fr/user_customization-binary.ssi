B~ Personnalisation de l'image binaire

1~customizing-binary Personnalisation de l'image binaire

2~ Chargeur d'amorçage

live-build uses syslinux and some of its derivatives (depending on the image
type) as bootloaders by default. You can easily customize them to several
degrees that range from providing a full theme to changing the boot timeout
or simply adding a personalized splash image. Some of the following examples
of customization make use of different methods, like {includes}#includes or
{hooks}#hooks.

If you want to use a full theme you can specify the #{--syslinux-theme}#
option (see man #{lb_config}#). live-build will then retrieve the theme from
the mirror and install it.

Imagine that you want to build a progress client but want to include the
server's theme because you want to have the help menu. Then you would build
as follows:

code{

 $ lb config --mode progress --syslinux-theme progress-server

}code

You can also create your own theme or modify an already existing one and if
you do not have a mirror, you can add the package to
#{config/packages.chroot}#. In this case it is not necessary to specify any
option.

There is also the possibility of making smaller changes. For instance,
syslinux derivatives are configured by default with a timeout of 0 (zero)
which means that they will pause indefinitely at their splash screen until
you press a key.

Pour modifier le délai de démarrage d'une image iso-hybrid, vous pouvez
éditer un fichier *{isolinux.cfg}* précisant le timeout dans les unités de
secondes et l'ajouter à #{config/includes.binary/isolinux/}#

Un *{isolinux.cfg}* modifié pour démarrer après cinq secondes ressemblerait
à ceci:

code{

 include menu.cfg
 default vesamenu.c32
 prompt 0
 timeout 5

}code


Une autre façon d'atteindre le même objectif pourrait être écrire un hook et
l'ajouter à #{config/hooks/}# N'oubliez pas d'ajouter le suffixe #{.binary}#
pour l'exécuter dans l’étape binaire. Un exemple proposé:

code{

 #!/bin/sh

 sed -i 's/timeout 0/timeout 5/' binary/isolinux/isolinux.cfg

}code

Pour plus d'informations s'il vous plaît voir man syslinux(1).

Likewise, if you want to use a personalized /{splash.png}/ image you can add
a picture of 640x480 pixels to #{config/includes.binary/isolinux/}#

2~ Métadonnées ISO

En créant une image binaire ISO9660, vous pouvez utiliser les options
suivantes pour ajouter différentes métadonnées textuelles pour votre
image. Cela peut vous aider à facilement identifier la version ou la
configuration d'une image sans la démarrer.

_* #{LB_ISO_APPLICATION/--iso-application NAME}#: Cela devrait décrire
l'application qui sera sur l'image. La longueur maximale de ce champ est de
128 caractères.

_* #{LB_ISO_PREPARER/--iso-preparer NAME}#: Cela devrait décrire le
préparateur de l'image, généralement avec certains détails de contact. Le
défaut de cette option est la version de live-build que vous utilisez, ce
qui peut faciliter le débogage plus tard. La longueur maximale de ce champ
est de 128 caractères.

_* #{LB_ISO_PUBLISHER/--iso-publisher NAME}#: Ce doit décrire l'éditeur de
l'image, généralement avec certains détails de contact. La longueur maximale
de ce champ est de 128 caractères.

_* #{LB_ISO_VOLUME/--iso-volume NAME}#: Cela devrait spécifier l'ID de
volume de l'image. Il est utilisé comme une étiquette visible par
l'utilisateur sur certaines plateformes comme Windows et Apple Mac OS. La
longueur maximale de ce champ est de 128 caractères.
