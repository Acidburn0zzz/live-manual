:B~ Personnalisation des contenus

1~customizing-contents Personnalisation des contenus

Ce chapitre aborde affiner la personnalisation du contenu du système live
delà du simple choix des paquets à inclure. Les includes vous permettent
d'ajouter ou de remplacer des fichiers arbitraires à votre image Debian
Live, les hooks vous permettent d'exécuter des commandes arbitraires à
différentes étapes de la construction et au démarrage, et la
préconfiguration (preseeding) vous permet de configurer les paquets quand
ils sont installés en fournissant des réponses aux questions debconf .

2~ Includes

Bien qu'idéalement un système Debian Live comprendrait les fichiers
entièrement fournis par les paquets Debian non modifiés, on convient parfois
de fournir ou de modifier certains contenus par le biais de fichiers. Avec
les includes, il est possible d'ajouter (ou remplacer) des fichiers
arbitraires à votre image live de Debian. live-build prévoit trois
mécanismes de leur utilisation:

_* Chroot local includes: Ils vous permettent d'ajouter ou remplacer des
fichiers sur le système de fichiers chroot/Live. S'il vous plaît voir
{Live/chroot local includes}#live-chroot-local-includes pour plus
d'informations.

_* Binary local includes: Ils vous permettent d'ajouter ou de remplacer des
fichiers dans l'image binaire. S'il vous plaît voir {Binary local
includes}#binary-local-includes pour plus d'informations.

_* Binary includes: Ils vous permettent d'ajouter ou remplacer des fichiers
spécifiques de Debian dans l'image binaire, comme les modèles et les
répertoires d'outils. S'il vous plaît voir {Binary includes}#binary-includes
pour plus d'informations.

S'il vous plaît voir {Termes}#terms pour plus d'informations sur la
distinction entre les images "Live" et "binaire".

3~live-chroot-local-includes Live/chroot local includes

Chroot local includes peuvent être utilisés pour ajouter ou remplacer des
fichiers dans le système de fichiers chroot/Live afin qu'ils puissent être
utilisés dans le système Live. Une utilisation typique est de peupler le
répertoire du squelette de l'utilisateur (#{/etc/skel}#) utilisé par le
système live pour créer le répertoire home de l'utilisateur Live. Une autre
est de fournir des fichiers de configuration qui peuvent être simplement
ajoutés ou remplacés à l'image sans traitement, voir {Live/chroot local
hooks}#live-chroot-local-hooks si le traitement est nécessaire.

To include files, simply add them to your #{config/includes.chroot}#
directory. This directory corresponds to the root directory (#{/}#) of the
live system. For example, to add a file #{/var/www/index.html}# in the live
system, use:

code{

 $ mkdir -p config/includes.chroot/var/www
 $ cp /path/to/my/index.html config/includes.chroot/var/www

}code

Votre configuration aura alors le schéma suivant:

code{

 -- config
    [...]
     |-- includes.chroot
     |   `-- var
     |       `-- www
     |           `-- index.html
    [...]
     `-- templates

}code

Chroot local includes sont installés après l'installation de paquets de
sorte que les fichiers installés par les paquets sont écrasés.

3~binary-local-includes Binary local includes

To include material such as documentation or videos on the media filesystem
so that it is accessible immediately upon insertion of the media without
booting the Live system, you can use binary local includes. This works in a
similar fashion to chroot local includes. For example, suppose the files
#{~/video_demo.*}# are demo videos of the live system described by and
linked to by an HTML index page. Simply copy the material to
#{config/includes.binary/}# as follows:

code{

 $ cp ~/video_demo.* config/includes.binary/

}code

Ces fichiers apparaissent maintenant dans le répertoire racine du support
live.

3~binary-includes Binary includes

live-build a certains fichiers standard (comme la documentation) qui sera
inclus dans la configuration par défaut sur tous les supports live. Ceci
peut être désactivé avec:

code{

 $ lb config --includes none

}code

Sinon, le matériel sera installé par live-build dans #{/includes/}# par
défaut sur le système de fichiers du support, ou bien vous pouvez spécifier
un autre chemin avec

2~ Hooks

Les hooks permettent à les commandes être exécutées dans les étapes chroot
et binaire de la construction afin de personnaliser l'image. 

3~live-chroot-local-hooks Live/chroot local hooks

Pour exécuter des commandes à l'étape chroot, créer un script hook contenant
les commandes dans le répertoire #{config/chroot_local-hooks}#. Le hook
s'exécutera dans le chroot après le reste de votre configuration chroot a
été appliquée, donc n'oubliez pas de vous assurer que votre configuration
inclut tous les paquets et les fichiers que votre hook a besoin pour
fonctionner. Voir les exemples de scripts chroot hook pour diverses tâches
courantes de personnalisation chroot fournis dans
#{/usr/share/live/build/examples/hooks}# que vous pouvez copier ou symlink
pour les utiliser dans votre propre configuration.

3~boot-time-hooks Hooks au moment du démarrage

To execute commands at boot time, you can supply live-config hooks as
explained in the "Customization" section of its man page. Examine
live-config's own hooks provided in #{/lib/live/config/}#, noting the
sequence numbers. Then provide your own hook prefixed with an appropriate
sequence number, either as a chroot local include in
#{config/includes.chroot/lib/live/config/}#, or as a custom package as
discussed in {Installing modified or third-party
packages}#installing-modified-or-third-party-packages.

3~ Binary local hooks

Pour exécuter des commandes à l'étape binaire, créer un script hook
contenant les commandes dans #{config/binary_local-hooks}#. Le hook sera
exécuté après toutes les autres commandes binaires sont exécutées, mais
avant binary_checksums, les dernièrs commandes binaires.  Les commandes de
votre hook ne s'exécutent pas dans le chroot, afin de prendre soin de ne pas
modifier les fichiers en dehors de l'arbre de construction, ou vous pourriez
endommager votre système de construction! Voir les exemples de scripts hook
binaires pour diverses tâches courantes de personnalisation binaires fournis
dans #{/usr/share/live/build/examples/hooks}# que vous pouvez copier ou
symlink pour les utiliser dans votre propre configuration.

2~ Préconfigurer questions de debconf

Les fichiers dans le répertoire #{config/chroot_local-preseed}# sont
considérés comme des fichiers de préconfiguration debconf et sont installés
par live-build en utilisant #{debconf-set-selections}#.

Pour plus d'informations sur debconf, s'il vous plaît voir debconf(7) dans
le paquet #{debconf}#.
