:B~ Installation

1~ Installation

2~ Requirements

Building Debian Live images has very few system requirements:

_* Super user (root) access

_* An up-to-date version of live-helper

_* A POSIX-compliant shell, such as /{bash}/ or /{dash}/.

_* /{debootstrap}/ or /{cdebootstrap}/

_* Linux 2.6.x

Note that using Debian or a Debian-derived distribution is not required - live-helper will run on almost any operating system with the above requirements.

2~ Installing live-helper

You can install live-helper in a number of different ways:

_* From the Debian repository

_* From source

_* From snapshots

_* From backports.org

If you are using lenny or sid the recommended way is to install live-helper via the Debian repository.

3~ From the Debian repository

Simply install live-helper like any other package:

code{

# apt-get install live-helper

}code

or

code{

# aptitude install live-helper

}code

3~ From source

live-helper is developed using the Git version control system. On Debian systems, this is provided by the /{git-core}/ package. To check out the latest code, execute:

code{

$ git clone git://live.debian.net/git/live-helper.git

}code

You can build and install your own Debian package by executing:

code{

$ cd live-helper
$ dpkg-buildpackage -rfakeroot -b -uc -us
$ cd ..

# dpkg -i live-helper*.deb

}code

You can also use a local version of live-helper without installation:

code{

# live-helper/helpers/lh_local

}code

Subsequent calls to #{lh_}# prefixed helpers in that shell environment will then use the version located in the directory you executed #{lh_local}# from.

You can also install live-helper directly to your system by executing:

code{

# make install

}code

3~ From 'snapshots'

If you do not wish to build or install live-helper from source, you can use snapshots. These are built automatically from the latest version in Git and are available on http://live.debian.net/debian/.

2~ live-initramfs

N.B. You do not need to install live-initramfs on your system to create customised Debian Live systems. However, doing so will do no harm.

3~ Using a customised live-initramfs

To modify the code you can follow the process below. Please ensure you are familiar with the terms mentioned in terms.
% FIXME: <xref linkend="terms"/>

_* Checkout the live-initramfs source

code{

$ git clone git://live.debian.net/git/live-initramfs.git

}code

_* Make changes to your local copy

And beware that if you want to add your pre-init script in live-bottom, you should name it without dashes '-', e.g: call it "81new_feature" and not "81new-feature".

_* Build a live-initramfs .deb

You must build either on your target distribution or in a chroot containing your target platform: this means if your target is lenny then you should build against lenny. You can use a personal builder such as /{pbuilder}/ to automate building packages in chroot. To build directly on the target platform, use #{dpkg-buildpackage}# (provided by the /{dpkg-dev}/ package):

code{

$ cd live-initramfs
$ dpkg-buildpackage -rfakeroot -b -uc -us

}code

_* Use the generated live-initramfs .deb

As live-initramfs is installed by the build system, installing the package in the host system is not sufficient: you should treat the generated .deb like another custom package. Please see custom-packages for more information. You should pay particular attention to custom-packages-apt.
% FIXME: <xref linkend="custom-packages"/> <xref linkend="custom-packages-apt"/>

3~ Using live-initramfs snapshots

You can let live-helper automatically use the latest snapshot of live-initramfs by configuring a third-party repository in your live-system configuration. Assuming you have already created a configuration tree with #{lh config}#:

_* Create a sources.list entry for the chroot stage:

code{

echo "deb http://live.debian.net/ sid-snapshots main contrib non-free" > config/chroot_sources/debian-live_sid-snapshots.chroot

}code

_* Create a sources.list entry for the binary stage:

code{

cp config/chroot_sources/debian-live_sid-snapshots.chroot config/chroot_sources/debian-live_sid-snapshots.binary

}code

_* Fetch the archive signing key:

code{

$ wget http://live.debian.net/debian/project/openpgp/archive-key.asc -O config/chroot_sources/debian-live_sid-snapshots.chroot.gpg
$ cp config/chroot_sources/debian-live_sid-snapshots.chroot.gpg config/chroot_sources/debian-live_sid-snapshots.binary.gpg

}code
