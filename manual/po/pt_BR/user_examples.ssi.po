# Portuguese translations for live-manual package
# Copyright (C) 2010 Free Software Foundation, Inc.
# This file is distributed under the same license as the live-manual package.
# Automatically generated, 2010.
#
msgid ""
msgstr ""
"Project-Id-Version: live-manual 2.0.0\n"
"POT-Creation-Date: 2012-04-08 14:58+0300\n"
"PO-Revision-Date: 2010-11-04 16:34-0400\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#. type: Plain text
#: en/live-manual.ssm:61 en/user_examples.ssi:2
msgid ":B~ Examples"
msgstr ""

#. type: Plain text
#: en/about_manual.ssi:90 en/about_manual.ssi:98 en/about_manual.ssi:106
#: en/about_manual.ssi:114 en/about_manual.ssi:122 en/about_manual.ssi:130
#: en/about_manual.ssi:142 en/about_manual.ssi:155 en/about_manual.ssi:168
#: en/about_manual.ssi:179 en/about_manual.ssi:187 en/about_manual.ssi:195
#: en/about_manual.ssi:203 en/project_bugs.ssi:60
#: en/project_coding-style.ssi:30 en/project_coding-style.ssi:40
#: en/project_coding-style.ssi:53 en/project_coding-style.ssi:63
#: en/project_coding-style.ssi:94 en/project_coding-style.ssi:102
#: en/project_coding-style.ssi:112 en/project_coding-style.ssi:123
#: en/project_procedures.ssi:12 en/project_procedures.ssi:53
#: en/project_procedures.ssi:65 en/style_guide.ssi:124 en/style_guide.ssi:134
#: en/style_guide.ssi:144 en/style_guide.ssi:154 en/style_guide.ssi:164
#: en/style_guide.ssi:177 en/user_basics.ssi:32 en/user_basics.ssi:42
#: en/user_basics.ssi:58 en/user_basics.ssi:73 en/user_basics.ssi:108
#: en/user_basics.ssi:116 en/user_basics.ssi:128 en/user_basics.ssi:140
#: en/user_basics.ssi:152 en/user_basics.ssi:160 en/user_basics.ssi:168
#: en/user_basics.ssi:184 en/user_basics.ssi:194 en/user_basics.ssi:202
#: en/user_basics.ssi:218 en/user_basics.ssi:226 en/user_basics.ssi:236
#: en/user_basics.ssi:254 en/user_basics.ssi:282 en/user_basics.ssi:298
#: en/user_basics.ssi:306 en/user_basics.ssi:326 en/user_basics.ssi:351
#: en/user_customization-binary.ssi:14 en/user_customization-binary.ssi:28
#: en/user_customization-binary.ssi:39 en/user_customization-contents.ssi:26
#: en/user_customization-contents.ssi:35 en/user_customization-contents.ssi:54
#: en/user_customization-contents.ssi:66
#: en/user_customization-installer.ssi:32
#: en/user_customization-installer.ssi:44
#: en/user_customization-packages.ssi:14 en/user_customization-packages.ssi:22
#: en/user_customization-packages.ssi:40 en/user_customization-packages.ssi:54
#: en/user_customization-packages.ssi:67 en/user_customization-packages.ssi:81
#: en/user_customization-packages.ssi:101
#: en/user_customization-packages.ssi:127
#: en/user_customization-packages.ssi:140
#: en/user_customization-packages.ssi:150
#: en/user_customization-packages.ssi:160
#: en/user_customization-packages.ssi:170
#: en/user_customization-packages.ssi:184
#: en/user_customization-packages.ssi:201
#: en/user_customization-packages.ssi:211
#: en/user_customization-packages.ssi:276
#: en/user_customization-packages.ssi:288
#: en/user_customization-packages.ssi:298
#: en/user_customization-packages.ssi:316
#: en/user_customization-packages.ssi:333
#: en/user_customization-packages.ssi:341 en/user_customization-runtime.ssi:14
#: en/user_customization-runtime.ssi:27 en/user_customization-runtime.ssi:47
#: en/user_customization-runtime.ssi:57 en/user_customization-runtime.ssi:66
#: en/user_customization-runtime.ssi:74 en/user_customization-runtime.ssi:83
#: en/user_customization-runtime.ssi:122 en/user_customization-runtime.ssi:132
#: en/user_customization-runtime.ssi:140 en/user_customization-runtime.ssi:155
#: en/user_examples.ssi:14 en/user_examples.ssi:30 en/user_examples.ssi:40
#: en/user_examples.ssi:54 en/user_examples.ssi:67 en/user_examples.ssi:83
#: en/user_examples.ssi:93 en/user_examples.ssi:107 en/user_examples.ssi:117
#: en/user_examples.ssi:127 en/user_examples.ssi:141 en/user_examples.ssi:149
#: en/user_examples.ssi:157 en/user_examples.ssi:165 en/user_examples.ssi:181
#: en/user_examples.ssi:193 en/user_examples.ssi:209 en/user_examples.ssi:223
#: en/user_examples.ssi:232 en/user_examples.ssi:250 en/user_examples.ssi:258
#: en/user_examples.ssi:267 en/user_examples.ssi:277
#: en/user_installation.ssi:38 en/user_installation.ssi:46
#: en/user_installation.ssi:56 en/user_installation.ssi:64
#: en/user_installation.ssi:74 en/user_installation.ssi:82
#: en/user_installation.ssi:90 en/user_installation.ssi:114
#: en/user_installation.ssi:129 en/user_installation.ssi:146
#: en/user_managing_a_configuration.ssi:24
#: en/user_managing_a_configuration.ssi:35
#: en/user_managing_a_configuration.ssi:47
#: en/user_managing_a_configuration.ssi:56 en/user_overview.ssi:36
#: en/user_overview.ssi:49 en/user_overview.ssi:57
msgid "code{"
msgstr "code{"

#. type: Plain text
#: en/about_manual.ssi:94 en/about_manual.ssi:102 en/about_manual.ssi:110
#: en/about_manual.ssi:118 en/about_manual.ssi:126 en/about_manual.ssi:134
#: en/about_manual.ssi:151 en/about_manual.ssi:164 en/about_manual.ssi:173
#: en/about_manual.ssi:183 en/about_manual.ssi:191 en/about_manual.ssi:199
#: en/about_manual.ssi:207 en/project_bugs.ssi:64
#: en/project_coding-style.ssi:36 en/project_coding-style.ssi:47
#: en/project_coding-style.ssi:59 en/project_coding-style.ssi:70
#: en/project_coding-style.ssi:98 en/project_coding-style.ssi:106
#: en/project_coding-style.ssi:119 en/project_coding-style.ssi:130
#: en/project_procedures.ssi:16 en/project_procedures.ssi:61
#: en/project_procedures.ssi:138 en/style_guide.ssi:128 en/style_guide.ssi:138
#: en/style_guide.ssi:148 en/style_guide.ssi:158 en/style_guide.ssi:173
#: en/style_guide.ssi:182 en/user_basics.ssi:36 en/user_basics.ssi:46
#: en/user_basics.ssi:64 en/user_basics.ssi:77 en/user_basics.ssi:112
#: en/user_basics.ssi:120 en/user_basics.ssi:134 en/user_basics.ssi:144
#: en/user_basics.ssi:156 en/user_basics.ssi:164 en/user_basics.ssi:172
#: en/user_basics.ssi:188 en/user_basics.ssi:198 en/user_basics.ssi:206
#: en/user_basics.ssi:222 en/user_basics.ssi:230 en/user_basics.ssi:240
#: en/user_basics.ssi:274 en/user_basics.ssi:286 en/user_basics.ssi:302
#: en/user_basics.ssi:310 en/user_basics.ssi:337 en/user_basics.ssi:376
#: en/user_customization-binary.ssi:18 en/user_customization-binary.ssi:35
#: en/user_customization-binary.ssi:45 en/user_customization-contents.ssi:31
#: en/user_customization-contents.ssi:46 en/user_customization-contents.ssi:58
#: en/user_customization-contents.ssi:70
#: en/user_customization-installer.ssi:38
#: en/user_customization-installer.ssi:49
#: en/user_customization-packages.ssi:18 en/user_customization-packages.ssi:26
#: en/user_customization-packages.ssi:46 en/user_customization-packages.ssi:59
#: en/user_customization-packages.ssi:71 en/user_customization-packages.ssi:85
#: en/user_customization-packages.ssi:105
#: en/user_customization-packages.ssi:132
#: en/user_customization-packages.ssi:146
#: en/user_customization-packages.ssi:156
#: en/user_customization-packages.ssi:166
#: en/user_customization-packages.ssi:176
#: en/user_customization-packages.ssi:189
#: en/user_customization-packages.ssi:207
#: en/user_customization-packages.ssi:216
#: en/user_customization-packages.ssi:280
#: en/user_customization-packages.ssi:292
#: en/user_customization-packages.ssi:302
#: en/user_customization-packages.ssi:329
#: en/user_customization-packages.ssi:337
#: en/user_customization-packages.ssi:346 en/user_customization-runtime.ssi:21
#: en/user_customization-runtime.ssi:31 en/user_customization-runtime.ssi:51
#: en/user_customization-runtime.ssi:62 en/user_customization-runtime.ssi:70
#: en/user_customization-runtime.ssi:79 en/user_customization-runtime.ssi:88
#: en/user_customization-runtime.ssi:126 en/user_customization-runtime.ssi:136
#: en/user_customization-runtime.ssi:145 en/user_customization-runtime.ssi:162
#: en/user_examples.ssi:20 en/user_examples.ssi:34 en/user_examples.ssi:44
#: en/user_examples.ssi:61 en/user_examples.ssi:71 en/user_examples.ssi:89
#: en/user_examples.ssi:103 en/user_examples.ssi:111 en/user_examples.ssi:121
#: en/user_examples.ssi:133 en/user_examples.ssi:145 en/user_examples.ssi:153
#: en/user_examples.ssi:161 en/user_examples.ssi:169 en/user_examples.ssi:189
#: en/user_examples.ssi:205 en/user_examples.ssi:213 en/user_examples.ssi:228
#: en/user_examples.ssi:236 en/user_examples.ssi:254 en/user_examples.ssi:263
#: en/user_examples.ssi:273 en/user_examples.ssi:291
#: en/user_installation.ssi:42 en/user_installation.ssi:50
#: en/user_installation.ssi:60 en/user_installation.ssi:70
#: en/user_installation.ssi:78 en/user_installation.ssi:86
#: en/user_installation.ssi:94 en/user_installation.ssi:119
#: en/user_installation.ssi:136 en/user_installation.ssi:149
#: en/user_managing_a_configuration.ssi:31
#: en/user_managing_a_configuration.ssi:43
#: en/user_managing_a_configuration.ssi:52
#: en/user_managing_a_configuration.ssi:60 en/user_overview.ssi:43
#: en/user_overview.ssi:53 en/user_overview.ssi:61
msgid "}code"
msgstr "}code"

#. type: Plain text
#: en/user_basics.ssi:44 en/user_basics.ssi:170 en/user_basics.ssi:238
#: en/user_examples.ssi:119 en/user_examples.ssi:211
#, no-wrap
msgid " # lb build\n"
msgstr ""

#. type: Plain text
#: en/user_customization-binary.ssi:41 en/user_examples.ssi:95
#, no-wrap
msgid " #!/bin/sh\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:4
msgid "1~examples Examples"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:6
msgid ""
"This chapter covers example builds for specific use cases with Debian Live. "
"If you are new to building your own Debian Live images, we recommend you "
"first look at the three tutorials in sequence, as each one teaches new "
"techniques that will help you use and understand the remaining examples."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:8
msgid "2~using-the-examples Using the examples"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:10
msgid ""
"To use these examples you need a system to build them on that meets the "
"requirements listed in {Requirements}#requirements and has live-build "
"installed as described in {Installing live-build}#installing-live-build."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:12
msgid ""
"Note that, for the sake of brevity, in these examples we do not specify a "
"local mirror to use for the build. You can speed up downloads considerably "
"if you use a local mirror. You may specify the options when you use #{lb "
"config}#, as described in {Distribution mirrors used at build time}"
"#distribution-mirrors-build-time, or for more convenience, set the default "
"for your build system in #{/etc/live/build.conf}#. Simply create this file "
"and in it, set the corresponding #{LB_MIRROR_*}# variables to your preferred "
"mirror. All other mirrors used in the build will be defaulted from these "
"values. For example:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:18
#, no-wrap
msgid ""
" LB_MIRROR_BOOTSTRAP=\"http://mirror/debian\"\n"
" LB_MIRROR_CHROOT_SECURITY=\"http://mirror/debian-security\"\n"
" LB_MIRROR_CHROOT_BACKPORTS=\"http://mirror/debian-updates\"\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:22
msgid "2~tutorial-1 Tutorial 1: A standard image"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:24
#, no-wrap
msgid "*{Use case:}* Create a simple first image, learning the basics of live-build.\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:26
msgid ""
"In this tutorial, we will build a default ISO hybrid Debian Live image "
"containing only base packages (no Xorg) and some Debian Live support "
"packages, as a first exercise in using live-build."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:28
msgid "You can't get much simpler than this:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:32
#, no-wrap
msgid " $ mkdir tutorial1 ; cd tutorial1 ; lb config\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:36
msgid ""
"Examine the contents of the #{config/}# directory if you wish. You will see "
"stored here a skeletal configuration, ready to customize or, in this case, "
"use immediately to build a default image."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:38
msgid ""
"Now, as superuser, build the image, saving a log as you build with #{tee}#."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:42 en/user_examples.ssi:69 en/user_examples.ssi:234
#, no-wrap
msgid " # lb build 2>&1 | tee binary.log\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:46
msgid ""
"Assuming all goes well, after a while, the current directory will contain #"
"{binary-hybrid.iso}#. This ISO hybrid image can be booted directly in a "
"virtual machine as described in {Testing an ISO image with Qemu}#testing-iso-"
"with-qemu and {Testing an ISO image with virtualbox-ose}#testing-iso-with-"
"virtualbox, or else imaged onto optical media or a USB flash device as "
"described in {Burning an ISO image to a physical medium}#burning-iso-image "
"and {Copying an ISO hybrid image to a USB stick}#copying-iso-hybrid-to-usb, "
"respectively."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:48
msgid "2~tutorial-2 Tutorial 2: A web browser utility"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:50
#, no-wrap
msgid "*{Use case:}* Create a web browser utility image, learning how to apply customizations.\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:52
msgid ""
"In this tutorial, we will create an image suitable for use as a web browser "
"utility, serving as an introduction to customizing Debian Live images."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:59
#, no-wrap
msgid ""
" $ mkdir tutorial2\n"
" $ cd tutorial2\n"
" $ lb config -p lxde\n"
" $ echo iceweasel >> config/package-lists/my.list.chroot\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:63
msgid ""
"Our choice of LXDE for this example reflects our desire to provide a minimal "
"desktop environment, since the focus of the image is the single use we have "
"in mind, the web browser. We could go even further and provide a default "
"configuration for the web browser in #{config/includes.chroot/etc/iceweasel/"
"profile/}#, or additional support packages for viewing various kinds of web "
"content, but we leave this as an exercise for the reader."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:65
msgid ""
"Build the image, again as superuser, keeping a log as in {Tutorial 1}"
"#tutorial-1:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:73
msgid "Again, verify the image is OK and test, as in {Tutorial 1}#tutorial-1."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:75
msgid "2~tutorial-3 Tutorial 3: A personalized image"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:77
#, no-wrap
msgid "*{Use case:}* Create a project to build a personalized image, containing your favourite software to take with you on a USB stick wherever you go, and evolving in successive revisions as your needs and preferences change.\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:79
msgid ""
"Since we will be changing our personalized image over a number of revisions, "
"and we want to track those changes, trying things experimentally and "
"possibly reverting them if things don't work out, we will keep our "
"configuration in the popular #{git}# version control system. We will also "
"use the best practice of autoconfiguration via #{auto}# scripts as described "
"in {Managing a configuration}#managing-a-configuration."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:81
msgid "3~ First revision"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:87
#, no-wrap
msgid ""
" $ mkdir -p tutorial3/auto\n"
" $ cp /usr/share/live/build/examples/auto/* tutorial3/auto/\n"
" $ cd tutorial3\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:91
msgid "Edit #{auto/config}# to read as follows:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:101
#, no-wrap
msgid ""
" lb config noauto \\\n"
"     --architectures i386 \\\n"
"     --linux-flavours 686-pae \\\n"
"     --package-lists lxde \\\n"
"     \"${@}\"\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:105
msgid "Now populate your local package list:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:109
#, no-wrap
msgid " $ echo \"iceweasel xchat\" >> config/package-lists/my.list.chroot\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:113
msgid ""
"First, #{--architectures i386}# ensures that on our #{amd64}# build system, "
"we build a 32-bit version suitable for use on most machines. Second, we use #"
"{--linux-flavours 686-pae}# because we don't anticipate using this image on "
"much older systems. Third, we've chosen the #{lxde}# package list to give us "
"a minimal desktop. And finally, we have added two initial favourite "
"packages: #{iceweasel}# and #{xchat}#."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:115
msgid "Now, build the image:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:123
msgid ""
"Note that unlike in the first two tutorials, we no longer have to type #"
"{2>&1 | tee binary.log}# as that is now included in #{auto/build}#."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:125
msgid ""
"Once you've tested the image (as in {Tutorial 1}#tutorial-1) and are "
"satisfied it works, it's time to initialize our #{git}# repository, adding "
"only the auto scripts we just created, and then make the first commit:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:131
#, no-wrap
msgid ""
" $ git init\n"
" $ git add auto\n"
" $ git commit -a -m \"Initial import.\"\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:135
msgid "3~ Second revision"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:137
msgid ""
"In this revision, we're going to clean up from the first build, add the /"
"{vlc}/ package to our configuration, rebuild, test and commit."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:139
msgid ""
"The #{lb clean}# command will clean up all generated files from the previous "
"build except for the cache, which saves having to re-download packages. This "
"ensures that the subsequent #{lb build}# will re-run all stages to "
"regenerate the files from our new configuration."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:143
#, no-wrap
msgid " # lb clean\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:147
msgid ""
"Now append the /{vlc}/ package to our local package list in #{config/package-"
"lists/my.list.chroot}#:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:151
#, no-wrap
msgid " $ echo vlc >> config/package-lists/my.list.chroot\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:155
msgid "Build again:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:159
msgid "# lb build"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:163
msgid "Test, and when you're satisfied, commit the next revision:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:167
#, no-wrap
msgid " $ git commit -a -m \"Adding vlc media player.\"\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:171
msgid ""
"Of course, more complicated changes to the configuration are possible, "
"perhaps adding files in subdirectories of #{config/}#. When you commit new "
"revisions, just take care not to hand edit or commit the top-level files in #"
"{config}# containing #{LB_*}# variables, as these are build products, too, "
"and are always cleaned up by #{lb clean}# and re-created with #{lb config}# "
"via their respective #{auto}# scripts."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:173
msgid ""
"We've come to the end of our tutorial series. While many more kinds of "
"customization are possible, even just using the few features explored in "
"these simple examples, an almost infinite variety of different images can be "
"created. The remaining examples in this section cover several other use "
"cases drawn from the collected experiences of users of Debian Live."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:175
msgid "2~ A VNC Kiosk Client"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:177
#, no-wrap
msgid "*{Use case:}* Create an image with live-build to boot directly to a VNC server.\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:179
msgid ""
"Make a build directory and create a skeletal configuration in it built "
"around the standard-x11 list, including /{gdm3}/, /{metacity}/ and /"
"{xvnc4viewer}/, disabling recommends to make a minimal system:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:187
#, no-wrap
msgid ""
" $ mkdir vnc_kiosk_client\n"
" $ cd vnc_kiosk_client\n"
" $ lb config -a i386 -k 686-pae -p standard-x11 \\\n"
"     --apt-recommends false\n"
" $ echo \"gdm3 metacity xvnc4viewer\" >> config/package-lists/my.list.chroot\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:191
msgid ""
"Create the directory #{/etc/skel}# and put a custom #{.xsession}# in it for "
"the default user that will launch /{metacity}/ and start /{xvncviewer}/, "
"connecting to port #{5901}# on a server at #{192.168.1.2}#:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:197
#, no-wrap
msgid ""
" $ mkdir -p config/includes.chroot/etc/skel\n"
" $ cat > config/includes.chroot/etc/skel/.xsession << END\n"
" #!/bin/sh\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:200
#, no-wrap
msgid ""
" /usr/bin/metacity &\n"
" /usr/bin/xvncviewer 192.168.1.2:1\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:203
#, no-wrap
msgid ""
" exit\n"
" END\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:207
msgid "Build the image:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:215
msgid "Enjoy."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:217
msgid "2~ A base image for a 128M USB key"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:219
#, no-wrap
msgid "*{Use case:}* Create a standard image with some components removed in order to fit on a 128M USB key with space left over to use as you see fit.\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:221
msgid ""
"When optimizing an image to fit a certain media size, you need to understand "
"the tradeoffs you are making between size and functionality. In this "
"example, we trim only so much as to make room for additional material within "
"a 128M media size, but without doing anything to destroy integrity of the "
"packages contained within, such as the purging of locale data via the /"
"{localepurge}/ package, or other such \"intrusive\" optimizations. Of "
"particular note, you should not use #{--bootstrap-flavour minimal}# unless "
"you really know what you're doing, as omitting priority *{important}* "
"packages will most likely produce a broken live system."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:226
#, no-wrap
msgid ""
" $ lb config -k 486 -p minimal --apt-indices false \\\n"
"     --memtest none --apt-recommends false --includes none\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:230
msgid "Now, build the image in the usual way:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:238
msgid ""
"On the author's system at time of writing, the above configuration produced "
"a 78Mbyte image. This compares favourably with the 166Mbyte image produced "
"by the default configuration in {Tutorial 1}#tutorial-1."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:240
msgid ""
"The biggest space-saver here, compared to building a standard image on an #"
"{i386}# architecture system, is to select only the #{486}# kernel flavour "
"instead of the default #{-k \"486 686-pae\"}#. Leaving off APT's indices "
"with #{--apt-indices false}# also saves a fair amount of space, the tradeoff "
"being that you need to #{apt-get update}# before using apt in the live "
"system. Choosing the #{minimal}# package list leaves out the large #{locales}"
"# package and associated utilities. Dropping recommended packages with #{--"
"apt-recommends false}# saves some additional space, at the expense of "
"omitting some packages you might otherwise expect to be there, such as /"
"{firmware-linux-free}/ which may be needed to support certain hardware. The "
"remaining options shave off additional small amounts of space. It's up to "
"you to decide if the functionality that is sacrificed with each optimization "
"is worth the loss in functionality."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:242
msgid "2~ A localized KDE desktop and installer"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:244
#, no-wrap
msgid "*{Use case:}* Create a KDE desktop image, localized for Brazilian Portuguese and including an installer.\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:246
msgid ""
"We want to make an iso-hybrid image for i386 architecture using our "
"preferred desktop, in this case KDE, containing all of the same packages "
"that would be installed by the standard Debian installer for KDE."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:248
msgid ""
"Our initial problem is the discovery of the names of the appropriate "
"language tasks. Currently, live-build cannot help with this. While we might "
"get lucky and find this by trial-and-error, there is a tool, #{grep-dctrl}#, "
"which can be used to dig it out of the task descriptions in tasksel-data, so "
"to prepare, make sure you have both of those things:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:252
#, no-wrap
msgid " # apt-get install dctrl-tools tasksel-data\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:256
msgid "Now we can search for the appropriate tasks, first with:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:261
#, no-wrap
msgid ""
" $ grep-dctrl -FTest-lang pt_BR /usr/share/tasksel/descs/debian-tasks.desc -sTask\n"
" Task: brazilian-portuguese\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:265
msgid ""
"By this command, we discover the task is called, plainly enough, brazilian-"
"portuguese. Now to find the related tasks:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:271
#, no-wrap
msgid ""
" $ grep-dctrl -FEnhances brazilian-portuguese /usr/share/tasksel/descs/debian-tasks.desc -sTask\n"
" Task: brazilian-portuguese-desktop\n"
" Task: brazilian-portuguese-kde-desktop\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:275
msgid ""
"At boot time we will generate the pt_BR.UTF-8 locale and select the pt-"
"latin1 keyboard layout. We will also need to preseed our desktop choice, "
"\"kde\" so that tasksel will install the correct desktop task, as it differs "
"from the default (see {Desktop and languages tasks}#desktop-and-language-"
"tasks). Now let's put the pieces together:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:289
#, no-wrap
msgid ""
" $ mkdir live-pt_BR-kde\n"
" $ cd live-pt_BR-kde\n"
" $ lb config \\\n"
"     -a i386 \\\n"
"     -k 486 \\\n"
"     --bootappend-live \"locales=pt_BR.UTF-8 keyboard-layouts=pt-latin1\" \\\n"
"     --debian-installer live\n"
" $ echo kde-desktop brazilian-portuguese brazilian-portuguese-desktop \\\n"
"     brazilian-portuguese-kde-desktop >> config/task-lists/my.list.chroot\n"
" $ echo debian-installer-launcher >> config/package-lists/my.list.chroot\n"
" $ echo tasksel tasksel/desktop multiselect kde >> config/preseed/my.preseed.chroot\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:292
msgid ""
"Note that we have included the debian-installer-launcher package to launch "
"the installer from the live desktop, and have also specified the 486 flavour "
"kernel, as it is currently necessary to make the installer and live system "
"kernels match for the launcher to work properly."
msgstr ""
