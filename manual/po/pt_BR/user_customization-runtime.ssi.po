# Brazilian Portuguese translations for live-manual
# Copyright (C) 2012 Willer Gomes Junior <willer@ogomes.com>
# This file is distributed under the same license as the live-manual package.
#
msgid ""
msgstr ""
"Project-Id-Version: live-manual 4.0~a2-1\n"
"POT-Creation-Date: 2013-03-11 05:50+0100\n"
"PO-Revision-Date: 2012-07-28 11:38-0400\n"
"Last-Translator: Willer Gomes Junior <willer@ogomes.com>\n"
"Language-Team: none\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#. type: Plain text
#: en/about_manual.ssi:94 en/about_manual.ssi:102 en/about_manual.ssi:110
#: en/about_manual.ssi:118 en/about_manual.ssi:126
#: en/appendix_style-guide.ssi:122 en/appendix_style-guide.ssi:132
#: en/appendix_style-guide.ssi:142 en/appendix_style-guide.ssi:152
#: en/appendix_style-guide.ssi:162 en/appendix_style-guide.ssi:175
#: en/examples.ssi:14 en/examples.ssi:30 en/examples.ssi:40 en/examples.ssi:54
#: en/examples.ssi:66 en/examples.ssi:82 en/examples.ssi:92
#: en/examples.ssi:105 en/examples.ssi:113 en/examples.ssi:123
#: en/examples.ssi:133 en/examples.ssi:148 en/examples.ssi:156
#: en/examples.ssi:164 en/examples.ssi:172 en/examples.ssi:188
#: en/examples.ssi:202 en/examples.ssi:210 en/examples.ssi:218
#: en/examples.ssi:234 en/examples.ssi:248 en/examples.ssi:256
#: en/examples.ssi:264 en/examples.ssi:284 en/examples.ssi:292
#: en/examples.ssi:301 en/examples.ssi:311 en/project_bugs.ssi:60
#: en/project_coding-style.ssi:30 en/project_coding-style.ssi:40
#: en/project_coding-style.ssi:53 en/project_coding-style.ssi:63
#: en/project_coding-style.ssi:94 en/project_coding-style.ssi:102
#: en/project_coding-style.ssi:112 en/project_coding-style.ssi:123
#: en/project_contributing.ssi:34 en/project_contributing.ssi:45
#: en/project_contributing.ssi:58 en/project_contributing.ssi:67
#: en/project_contributing.ssi:78 en/project_contributing.ssi:86
#: en/project_git.ssi:8 en/project_git.ssi:16 en/project_git.ssi:24
#: en/project_git.ssi:34 en/project_git.ssi:44 en/project_git.ssi:56
#: en/project_procedures.ssi:41 en/project_procedures.ssi:53
#: en/user_basics.ssi:48 en/user_basics.ssi:56 en/user_basics.ssi:66
#: en/user_basics.ssi:82 en/user_basics.ssi:97 en/user_basics.ssi:107
#: en/user_basics.ssi:115 en/user_basics.ssi:153 en/user_basics.ssi:161
#: en/user_basics.ssi:173 en/user_basics.ssi:185 en/user_basics.ssi:193
#: en/user_basics.ssi:205 en/user_basics.ssi:213 en/user_basics.ssi:221
#: en/user_basics.ssi:233 en/user_basics.ssi:245 en/user_basics.ssi:255
#: en/user_basics.ssi:265 en/user_basics.ssi:283 en/user_basics.ssi:311
#: en/user_basics.ssi:327 en/user_basics.ssi:335 en/user_basics.ssi:355
#: en/user_customization-binary.ssi:18 en/user_customization-binary.ssi:29
#: en/user_customization-contents.ssi:24 en/user_customization-contents.ssi:33
#: en/user_customization-contents.ssi:51
#: en/user_customization-installer.ssi:32
#: en/user_customization-installer.ssi:44
#: en/user_customization-packages.ssi:14 en/user_customization-packages.ssi:22
#: en/user_customization-packages.ssi:40 en/user_customization-packages.ssi:54
#: en/user_customization-packages.ssi:68 en/user_customization-packages.ssi:84
#: en/user_customization-packages.ssi:104
#: en/user_customization-packages.ssi:115
#: en/user_customization-packages.ssi:123
#: en/user_customization-packages.ssi:147
#: en/user_customization-packages.ssi:160
#: en/user_customization-packages.ssi:170
#: en/user_customization-packages.ssi:180
#: en/user_customization-packages.ssi:198
#: en/user_customization-packages.ssi:214
#: en/user_customization-packages.ssi:293
#: en/user_customization-packages.ssi:305
#: en/user_customization-packages.ssi:315
#: en/user_customization-packages.ssi:329
#: en/user_customization-packages.ssi:345
#: en/user_customization-packages.ssi:362 en/user_customization-runtime.ssi:14
#: en/user_customization-runtime.ssi:26 en/user_customization-runtime.ssi:44
#: en/user_customization-runtime.ssi:56 en/user_customization-runtime.ssi:75
#: en/user_customization-runtime.ssi:83 en/user_customization-runtime.ssi:92
#: en/user_customization-runtime.ssi:121 en/user_customization-runtime.ssi:131
#: en/user_customization-runtime.ssi:139 en/user_customization-runtime.ssi:148
#: en/user_customization-runtime.ssi:157 en/user_customization-runtime.ssi:172
#: en/user_installation.ssi:38 en/user_installation.ssi:48
#: en/user_installation.ssi:56 en/user_installation.ssi:66
#: en/user_installation.ssi:74 en/user_installation.ssi:82
#: en/user_installation.ssi:106 en/user_installation.ssi:121
#: en/user_installation.ssi:134 en/user_installation.ssi:145
#: en/user_managing_a_configuration.ssi:22
#: en/user_managing_a_configuration.ssi:31
#: en/user_managing_a_configuration.ssi:54
#: en/user_managing_a_configuration.ssi:66
#: en/user_managing_a_configuration.ssi:75 en/user_overview.ssi:36
#: en/user_overview.ssi:49 en/user_overview.ssi:57
msgid "code{"
msgstr "code{"

#. type: Plain text
#: en/about_manual.ssi:98 en/about_manual.ssi:106 en/about_manual.ssi:114
#: en/about_manual.ssi:122 en/about_manual.ssi:130
#: en/appendix_style-guide.ssi:126 en/appendix_style-guide.ssi:136
#: en/appendix_style-guide.ssi:146 en/appendix_style-guide.ssi:156
#: en/appendix_style-guide.ssi:171 en/appendix_style-guide.ssi:180
#: en/examples.ssi:20 en/examples.ssi:34 en/examples.ssi:44 en/examples.ssi:60
#: en/examples.ssi:70 en/examples.ssi:88 en/examples.ssi:101
#: en/examples.ssi:109 en/examples.ssi:117 en/examples.ssi:127
#: en/examples.ssi:140 en/examples.ssi:152 en/examples.ssi:160
#: en/examples.ssi:168 en/examples.ssi:176 en/examples.ssi:196
#: en/examples.ssi:206 en/examples.ssi:214 en/examples.ssi:230
#: en/examples.ssi:238 en/examples.ssi:252 en/examples.ssi:260
#: en/examples.ssi:268 en/examples.ssi:288 en/examples.ssi:297
#: en/examples.ssi:307 en/examples.ssi:324 en/project_bugs.ssi:64
#: en/project_coding-style.ssi:36 en/project_coding-style.ssi:47
#: en/project_coding-style.ssi:59 en/project_coding-style.ssi:70
#: en/project_coding-style.ssi:98 en/project_coding-style.ssi:106
#: en/project_coding-style.ssi:119 en/project_coding-style.ssi:130
#: en/project_contributing.ssi:41 en/project_contributing.ssi:54
#: en/project_contributing.ssi:63 en/project_contributing.ssi:72
#: en/project_contributing.ssi:82 en/project_contributing.ssi:89
#: en/project_git.ssi:12 en/project_git.ssi:20 en/project_git.ssi:28
#: en/project_git.ssi:38 en/project_git.ssi:48 en/project_git.ssi:60
#: en/project_procedures.ssi:49 en/project_procedures.ssi:94
#: en/user_basics.ssi:52 en/user_basics.ssi:60 en/user_basics.ssi:70
#: en/user_basics.ssi:88 en/user_basics.ssi:101 en/user_basics.ssi:111
#: en/user_basics.ssi:119 en/user_basics.ssi:157 en/user_basics.ssi:165
#: en/user_basics.ssi:179 en/user_basics.ssi:189 en/user_basics.ssi:197
#: en/user_basics.ssi:209 en/user_basics.ssi:217 en/user_basics.ssi:225
#: en/user_basics.ssi:237 en/user_basics.ssi:249 en/user_basics.ssi:259
#: en/user_basics.ssi:269 en/user_basics.ssi:303 en/user_basics.ssi:315
#: en/user_basics.ssi:331 en/user_basics.ssi:339 en/user_basics.ssi:366
#: en/user_customization-binary.ssi:25 en/user_customization-binary.ssi:35
#: en/user_customization-contents.ssi:29 en/user_customization-contents.ssi:43
#: en/user_customization-contents.ssi:55
#: en/user_customization-installer.ssi:38
#: en/user_customization-installer.ssi:49
#: en/user_customization-packages.ssi:18 en/user_customization-packages.ssi:26
#: en/user_customization-packages.ssi:46 en/user_customization-packages.ssi:60
#: en/user_customization-packages.ssi:72 en/user_customization-packages.ssi:88
#: en/user_customization-packages.ssi:109
#: en/user_customization-packages.ssi:119
#: en/user_customization-packages.ssi:127
#: en/user_customization-packages.ssi:152
#: en/user_customization-packages.ssi:166
#: en/user_customization-packages.ssi:176
#: en/user_customization-packages.ssi:186
#: en/user_customization-packages.ssi:204
#: en/user_customization-packages.ssi:219
#: en/user_customization-packages.ssi:297
#: en/user_customization-packages.ssi:309
#: en/user_customization-packages.ssi:319
#: en/user_customization-packages.ssi:333
#: en/user_customization-packages.ssi:358
#: en/user_customization-packages.ssi:367 en/user_customization-runtime.ssi:18
#: en/user_customization-runtime.ssi:30 en/user_customization-runtime.ssi:48
#: en/user_customization-runtime.ssi:69 en/user_customization-runtime.ssi:79
#: en/user_customization-runtime.ssi:88 en/user_customization-runtime.ssi:97
#: en/user_customization-runtime.ssi:125 en/user_customization-runtime.ssi:135
#: en/user_customization-runtime.ssi:144 en/user_customization-runtime.ssi:153
#: en/user_customization-runtime.ssi:162 en/user_customization-runtime.ssi:180
#: en/user_installation.ssi:42 en/user_installation.ssi:52
#: en/user_installation.ssi:62 en/user_installation.ssi:70
#: en/user_installation.ssi:78 en/user_installation.ssi:86
#: en/user_installation.ssi:111 en/user_installation.ssi:128
#: en/user_installation.ssi:139 en/user_installation.ssi:148
#: en/user_managing_a_configuration.ssi:27
#: en/user_managing_a_configuration.ssi:42
#: en/user_managing_a_configuration.ssi:60
#: en/user_managing_a_configuration.ssi:71
#: en/user_managing_a_configuration.ssi:79 en/user_overview.ssi:43
#: en/user_overview.ssi:53 en/user_overview.ssi:61
msgid "}code"
msgstr "}code"

#. type: Plain text
#: en/user_customization-runtime.ssi:2
msgid ":B~ Customizing run time behaviours"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:4
msgid "1~customizing-run-time-behaviours Customizing run time behaviours"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:6
msgid ""
"All configuration that is done during run time is done by live-config. Here "
"are some of the most common options of live-config that users are interested "
"in. A full list of all possibilities can be found in the man page of live-"
"config."
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:8
msgid "2~ Customizing the live user"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:10
msgid ""
"One important consideration is that the live user is created by live-boot at "
"boot time, not by live-build at build time. This not only influences where "
"materials relating to the live user are introduced in your build, as "
"discussed in {Live/chroot local includes}#live-chroot-local-includes, but "
"also any groups and permissions associated with the live user."
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:12
msgid ""
"You can specify additional groups that the live user will belong to by using "
"any of the possibilities to configure live-config. For example, to add the "
"live user to the #{fuse}# group, you can either add the following file in #"
"{config/includes.chroot/etc/live/config/user-setup.conf}#:"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:16
#, no-wrap
msgid " LIVE_USER_DEFAULT_GROUPS=\"audio cdrom dip floppy video plugdev netdev powerdev scanner bluetooth fuse\"\n"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:20
msgid ""
"or use #{live-config.user-default-groups=audio,cdrom,dip,floppy,video,"
"plugdev,netdev,powerdev,scanner,bluetooth,fuse}# as a boot parameter."
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:22
msgid ""
"It is also possible to change the default username \"user\" and the default "
"password \"live\". If you want to do that for any reason, you can easily "
"achieve it as follows:"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:24
msgid ""
"To change the default username you can simply specify it in your config:"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:28
#, no-wrap
msgid " $ lb config --bootappend-live \"boot=live config username=live-user\"\n"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:32
msgid ""
"One possible way of changing the default password is by means of a hook as "
"described in {Boot-time hooks}#boot-time-hooks. In order to do that you can "
"use the \"passwd\" hook from #{/usr/share/doc/live-config/examples/hooks}#, "
"prefix it accordingly (e.g. 2000-passwd) and add it to #{config/includes."
"chroot/lib/live/config/}#"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:34
msgid "2~customizing-locale-and-language Customizing locale and language"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:36
msgid "When the live system boots, language is involved in two steps:"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:38
msgid "_* the locale generation"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:40
msgid "_* setting the keyboard configuration"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:42
msgid ""
"The default locale when building a Live system is #{locales=en_US.UTF-8}#. "
"To define the locale that should be generated, use the #{locales}# parameter "
"in the #{--bootappend-live}# option of #{lb config}#, e.g."
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:46
#, no-wrap
msgid " $ lb config --bootappend-live \"boot=live config locales=de_CH.UTF-8\"\n"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:50
msgid "Multiple locales may be specified as a comma-delimited list."
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:52
msgid ""
"This parameter, as well as the keyboard configuration parameters indicated "
"below, can also be used at the kernel command line. You can specify a locale "
"by #{language_country}# (in which case the default encoding is used) or the "
"full #{language_country.encoding}# word. A list of supported locales and the "
"encoding for each can be found in #{/usr/share/i18n/SUPPORTED}#."
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:54
msgid ""
"Both the console and X keyboard configuration are performed by #{live-config}"
"# using the #{console-setup}# package. To configure them, use the #{keyboard-"
"layouts}#, #{keyboard-variants}#, #{keyboard-options}# and #{keyboard-model}"
"# boot parameters via the #{--bootappend-live}# option. Valid options for "
"these can be found in #{/usr/share/X11/xkb/rules/base.lst}#. To find layouts "
"and variants for a given language, try searching for the English name of the "
"language and/or the country where the language is spoken, e.g:"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:67
#, no-wrap
msgid ""
"$ egrep -i '(^!|german.*switzerland)' /usr/share/X11/xkb/rules/base.lst\n"
" ! model\n"
" ! layout\n"
"   ch              German (Switzerland)\n"
" ! variant\n"
"   legacy          ch: German (Switzerland, legacy)\n"
"   de_nodeadkeys   ch: German (Switzerland, eliminate dead keys)\n"
"   de_sundeadkeys  ch: German (Switzerland, Sun dead keys)\n"
"   de_mac          ch: German (Switzerland, Macintosh)\n"
" ! option\n"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:71
msgid ""
"Note that each variant lists the layout to which it applies in the "
"description."
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:73
msgid ""
"Often, only the layout needs to be configured. For example, to get the "
"locale files for German and Swiss German keyboard layout in X use:"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:77
#, no-wrap
msgid " $ lb config --bootappend-live \"boot=live config locales=de_CH.UTF-8 keyboard-layouts=ch\"\n"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:81
msgid ""
"However, for very specific use cases, you may wish to include other "
"parameters. For example, to set up a French system with a French-Dvorak "
"layout (called Bepo) on a TypeMatrix EZ-Reach 2030 USB keyboard, use:"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:86
#, no-wrap
msgid ""
" $ lb config --bootappend-live \\\n"
"     \"boot=live config locales=fr_FR.UTF-8 keyboard-layouts=fr keyboard-variants=bepo keyboard-model=tm2030usb\"\n"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:90
msgid ""
"Multiple values may be specified as comma-delimited lists for each of the #"
"{keyboard-*}# options, with the exception of #{keyboard-model}#, which "
"accepts only one value. Please see the #{keyboard(5)}# man page for details "
"and examples of #{XKBMODEL}#, #{XKBLAYOUT}#, #{XKBVARIANT}# and #{XKBOPTIONS}"
"# variables. If multiple #{keyboard-variants}# values are given, they will "
"be matched one-to-one with #{keyboard-layouts}# values (see #{setxkbmap(1)}# "
"#{-variant}# option). Empty values are allowed; e.g. to define two layouts, "
"the default being US QWERTY and the other being US Dvorak, use:"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:95
#, no-wrap
msgid ""
" $ lb config --bootappend-live \\\n"
"     \"boot=live config keyboard-layouts=us,us keyboard-variants=,dvorak\"\n"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:99
msgid "2~persistence Persistence"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:101
msgid ""
"A live cd paradigm is a pre-installed system which runs from read-only "
"media, like a cdrom, where writes and modifications do not survive reboots "
"of the host hardware which runs it."
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:103
msgid ""
"A live system is a generalization of this paradigm and thus supports other "
"media in addition to CDs; but still, in its default behaviour, it should be "
"considered read-only and all the run-time evolutions of the system are lost "
"at shutdown."
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:105
msgid ""
"'Persistence' is a common name for different kinds of solutions for saving "
"across reboots some, or all, of this run-time evolution of the system. To "
"understand how it works it would be handy to know that even if the system is "
"booted and run from read-only media, modifications to the files and "
"directories are written on writable media, typically a ram disk (tmpfs) and "
"ram disks' data do not survive reboots."
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:107
msgid ""
"The data stored on this ramdisk should be saved on a writable persistent "
"medium like local storage media, a network share or even a session of a "
"multisession (re)writable CD/DVD. All these media are supported in live "
"systems in different ways, and all but the last one require a special boot "
"parameter to be specified at boot time: #{persistence}#."
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:109
msgid ""
"If the boot parameter #{persistence}# is set (and #{nopersistence}# is not "
"set), local storage media (e.g. hard disks, USB drives) will be probed for "
"persistence volumes during boot. It is possible to restrict which types of "
"persistence volumes to use by specifying certain boot parameters described "
"in the live-boot(7) man page. A persistence volume is any of the following:"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:111
msgid "_* a partition, identified by its GPT name."
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:113
msgid "_* a filesystem, identified by its filesystem label."
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:115
msgid ""
"_* an image file located on the root of any readable filesystem (even an "
"NTFS partition of a foreign OS), identified by its filename."
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:117
msgid ""
"The volume label for overlays must be #{persistence}# but it will be ignored "
"unless it contains in its root a file named #{persistence.conf}# which is "
"used to fully customize the volume's persistence, this is to say, specifying "
"the directories that you want to save in your persistence volume after a "
"reboot. See {The persistence.conf file}#persistence-conf for more details."
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:119
msgid ""
"Here are some examples of how to prepare a volume to be used for "
"persistence. It can be, for instance, an ext4 partition on a hard disk or on "
"a usb key created with, e.g.:"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:123
#, no-wrap
msgid " # mkfs.ext4 -L persistence /dev/sdb1\n"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:127
msgid "See also {Using the space left on a USB stick}#using-usb-extra-space."
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:129
msgid ""
"If you already have a partition on your device, you could just change the "
"label with one of the following:"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:133
#, no-wrap
msgid " # tune2fs -L persistence /dev/sdb1 # for ext2,3,4 filesystems\n"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:137
msgid ""
"Here's an example of how to create an ext4-based image file to be used for "
"persistence:"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:142
#, no-wrap
msgid ""
" $ dd if=/dev/null of=persistence bs=1 count=0 seek=1G # for a 1GB sized image file\n"
" $ /sbin/mkfs.ext4 -F persistence\n"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:146
msgid ""
"Once the image file is created, as an example, to make #{/usr}# persistent "
"but only saving the changes you make to that directory and not all the "
"contents of #{/usr}#, you can use the \"union\" option. If the image file is "
"located in your home directory, copy it to the root of your hard drive's "
"filesystem and mount it in #{/mnt}# as follows:"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:151
#, no-wrap
msgid ""
" # cp persistence /\n"
" # mount -t ext4 /persistence /mnt\n"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:155
msgid ""
"Then, create the #{persistence.conf}# file adding content and unmount the "
"image file."
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:160
#, no-wrap
msgid ""
" # echo \"/usr union\" >> /mnt/persistence.conf\n"
" # umount /mnt\n"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:164
msgid ""
"Now, reboot into your live medium with the boot parameter \"persistence\"."
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:166
msgid "3~persistence-conf The persistence.conf file"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:168
msgid ""
"A volume with the label #{persistence}# must be configured by means of the #"
"{persistence.conf}# file to make arbitrary directories persistent. That "
"file, located on the volume's filesystem root, controls which directories it "
"makes persistent, and in which way."
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:170
msgid ""
"How custom overlay mounts are configured is described in full detail in the "
"persistence.conf(5) man page, but a simple example should be sufficient for "
"most uses. Let's say we want to make our home directory and APT cache "
"persistent in an ext4 filesystem on the /dev/sdb1 partition:"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:178
#, no-wrap
msgid ""
" # mkfs.ext4 -L persistence /dev/sdb1\n"
" # mount -t ext4 /dev/sdb1 /mnt\n"
" # echo \"/home\" >> /mnt/persistence.conf\n"
" # echo \"/var/cache/apt\" >> /mnt/persistence.conf\n"
" # umount /mnt\n"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:182
msgid ""
"Then we reboot. During the first boot the contents of #{/home}# and #{/var/"
"cache/apt}# will be copied into the persistence volume, and from then on all "
"changes to these directories will live in the persistence volume. Please "
"note that any paths listed in the #{persistence.conf}# file cannot contain "
"white spaces or the special #{.}# and #{..}# path components. Also, neither #"
"{/lib}#, #{/lib/live}# (or any of their sub-directories) nor #{/}# can be "
"made persistent using custom mounts. As a workaround for this limitation you "
"can add #{/ union}# to your #{persistence.conf}# file to achieve full "
"persistence."
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:184
msgid ""
"Several different custom overlay volumes (with their own #{persistence.conf}"
"# files) can be used at the same time, but if several volumes make the same "
"directory persistent, only one of them will be used. If any two mounts are "
"\"nested\" (i.e. one is a sub-directory of the other) the parent will be "
"mounted before the child so no mount will be hidden by the other. Nested "
"custom mounts are problematic if they are listed in the same #{persistence."
"conf}# file. See the persistence.conf(5) man page for how to handle that "
"case if you really need it (hint: you usually don't)."
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:186
msgid "3~ Using more than one persistence store"
msgstr ""

#. type: Plain text
#: en/user_customization-runtime.ssi:187
msgid ""
"If a user would need multiple persistence store of the same type for "
"different locations or testing, such as #{persistence-private}# and #"
"{persistence-work}#, the boot parameter #{persistence-label}# used in "
"conjunction with the boot parameter #{persistence}# will allow for multiple "
"but unique persistence media. An example would be if a user wanted to use a "
"persistence partition labeled #{persistence-subText}# they would use the "
"boot parameters of: #{persistence}# #{persistence-label=subText}#."
msgstr ""
