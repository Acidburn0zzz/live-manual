# Japanese translations for live-manual package
# Copyright (C) 2013 Free Software Foundation, Inc.
# This file is distributed under the same license as the live-manual package.
# Automatically generated, 2013.
#
msgid ""
msgstr ""
"Project-Id-Version: live-manual VERSION\n"
"POT-Creation-Date: 2013-10-08 21:24+0200\n"
"PO-Revision-Date: 2013-09-20 22:12+0200\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Plain text
#: en/about_manual.ssi:94 en/about_manual.ssi:102 en/about_manual.ssi:110
#: en/about_manual.ssi:118 en/about_manual.ssi:126
#: en/appendix_style-guide.ssi:124 en/appendix_style-guide.ssi:134
#: en/appendix_style-guide.ssi:144 en/appendix_style-guide.ssi:154
#: en/appendix_style-guide.ssi:164 en/appendix_style-guide.ssi:177
#: en/examples.ssi:14 en/examples.ssi:30 en/examples.ssi:40 en/examples.ssi:54
#: en/examples.ssi:66 en/examples.ssi:82 en/examples.ssi:92
#: en/examples.ssi:105 en/examples.ssi:113 en/examples.ssi:123
#: en/examples.ssi:133 en/examples.ssi:148 en/examples.ssi:156
#: en/examples.ssi:164 en/examples.ssi:172 en/examples.ssi:188
#: en/examples.ssi:202 en/examples.ssi:210 en/examples.ssi:218
#: en/examples.ssi:234 en/examples.ssi:248 en/examples.ssi:256
#: en/examples.ssi:264 en/examples.ssi:284 en/examples.ssi:292
#: en/examples.ssi:301 en/examples.ssi:311 en/project_bugs.ssi:60
#: en/project_coding-style.ssi:30 en/project_coding-style.ssi:40
#: en/project_coding-style.ssi:53 en/project_coding-style.ssi:63
#: en/project_coding-style.ssi:94 en/project_coding-style.ssi:102
#: en/project_coding-style.ssi:112 en/project_coding-style.ssi:123
#: en/project_contributing.ssi:34 en/project_contributing.ssi:45
#: en/project_contributing.ssi:59 en/project_contributing.ssi:68
#: en/project_contributing.ssi:79 en/project_contributing.ssi:87
#: en/project_git.ssi:8 en/project_git.ssi:16 en/project_git.ssi:24
#: en/project_git.ssi:34 en/project_git.ssi:44 en/project_git.ssi:56
#: en/project_procedures.ssi:39 en/project_procedures.ssi:51
#: en/user_basics.ssi:48 en/user_basics.ssi:56 en/user_basics.ssi:66
#: en/user_basics.ssi:82 en/user_basics.ssi:97 en/user_basics.ssi:109
#: en/user_basics.ssi:117 en/user_basics.ssi:155 en/user_basics.ssi:163
#: en/user_basics.ssi:175 en/user_basics.ssi:187 en/user_basics.ssi:195
#: en/user_basics.ssi:207 en/user_basics.ssi:215 en/user_basics.ssi:223
#: en/user_basics.ssi:235 en/user_basics.ssi:247 en/user_basics.ssi:257
#: en/user_basics.ssi:267 en/user_basics.ssi:285 en/user_basics.ssi:316
#: en/user_basics.ssi:332 en/user_basics.ssi:340 en/user_basics.ssi:360
#: en/user_customization-binary.ssi:16 en/user_customization-contents.ssi:24
#: en/user_customization-contents.ssi:33 en/user_customization-contents.ssi:51
#: en/user_customization-installer.ssi:32
#: en/user_customization-installer.ssi:44
#: en/user_customization-packages.ssi:14 en/user_customization-packages.ssi:22
#: en/user_customization-packages.ssi:40 en/user_customization-packages.ssi:54
#: en/user_customization-packages.ssi:68 en/user_customization-packages.ssi:96
#: en/user_customization-packages.ssi:107
#: en/user_customization-packages.ssi:115
#: en/user_customization-packages.ssi:139
#: en/user_customization-packages.ssi:152
#: en/user_customization-packages.ssi:162
#: en/user_customization-packages.ssi:172
#: en/user_customization-packages.ssi:190
#: en/user_customization-packages.ssi:206
#: en/user_customization-packages.ssi:285
#: en/user_customization-packages.ssi:297
#: en/user_customization-packages.ssi:307
#: en/user_customization-packages.ssi:321
#: en/user_customization-packages.ssi:337
#: en/user_customization-packages.ssi:354 en/user_customization-runtime.ssi:14
#: en/user_customization-runtime.ssi:26 en/user_customization-runtime.ssi:44
#: en/user_customization-runtime.ssi:56 en/user_customization-runtime.ssi:75
#: en/user_customization-runtime.ssi:83 en/user_customization-runtime.ssi:92
#: en/user_customization-runtime.ssi:121 en/user_customization-runtime.ssi:131
#: en/user_customization-runtime.ssi:139 en/user_customization-runtime.ssi:148
#: en/user_customization-runtime.ssi:157 en/user_customization-runtime.ssi:172
#: en/user_installation.ssi:38 en/user_installation.ssi:48
#: en/user_installation.ssi:56 en/user_installation.ssi:66
#: en/user_installation.ssi:74 en/user_installation.ssi:82
#: en/user_installation.ssi:106 en/user_installation.ssi:121
#: en/user_installation.ssi:134 en/user_managing_a_configuration.ssi:22
#: en/user_managing_a_configuration.ssi:31
#: en/user_managing_a_configuration.ssi:54
#: en/user_managing_a_configuration.ssi:66
#: en/user_managing_a_configuration.ssi:75 en/user_overview.ssi:36
#: en/user_overview.ssi:49 en/user_overview.ssi:57
msgid "code{"
msgstr "code{"

#. type: Plain text
#: en/about_manual.ssi:98 en/about_manual.ssi:106 en/about_manual.ssi:114
#: en/about_manual.ssi:122 en/about_manual.ssi:130
#: en/appendix_style-guide.ssi:128 en/appendix_style-guide.ssi:138
#: en/appendix_style-guide.ssi:148 en/appendix_style-guide.ssi:158
#: en/appendix_style-guide.ssi:173 en/appendix_style-guide.ssi:182
#: en/examples.ssi:20 en/examples.ssi:34 en/examples.ssi:44 en/examples.ssi:60
#: en/examples.ssi:70 en/examples.ssi:88 en/examples.ssi:101
#: en/examples.ssi:109 en/examples.ssi:117 en/examples.ssi:127
#: en/examples.ssi:140 en/examples.ssi:152 en/examples.ssi:160
#: en/examples.ssi:168 en/examples.ssi:176 en/examples.ssi:196
#: en/examples.ssi:206 en/examples.ssi:214 en/examples.ssi:230
#: en/examples.ssi:238 en/examples.ssi:252 en/examples.ssi:260
#: en/examples.ssi:268 en/examples.ssi:288 en/examples.ssi:297
#: en/examples.ssi:307 en/examples.ssi:324 en/project_bugs.ssi:64
#: en/project_coding-style.ssi:36 en/project_coding-style.ssi:47
#: en/project_coding-style.ssi:59 en/project_coding-style.ssi:70
#: en/project_coding-style.ssi:98 en/project_coding-style.ssi:106
#: en/project_coding-style.ssi:119 en/project_coding-style.ssi:130
#: en/project_contributing.ssi:41 en/project_contributing.ssi:55
#: en/project_contributing.ssi:64 en/project_contributing.ssi:73
#: en/project_contributing.ssi:83 en/project_contributing.ssi:90
#: en/project_git.ssi:12 en/project_git.ssi:20 en/project_git.ssi:28
#: en/project_git.ssi:38 en/project_git.ssi:48 en/project_git.ssi:60
#: en/project_procedures.ssi:47 en/project_procedures.ssi:92
#: en/user_basics.ssi:52 en/user_basics.ssi:60 en/user_basics.ssi:70
#: en/user_basics.ssi:88 en/user_basics.ssi:103 en/user_basics.ssi:113
#: en/user_basics.ssi:121 en/user_basics.ssi:159 en/user_basics.ssi:167
#: en/user_basics.ssi:181 en/user_basics.ssi:191 en/user_basics.ssi:199
#: en/user_basics.ssi:211 en/user_basics.ssi:219 en/user_basics.ssi:227
#: en/user_basics.ssi:239 en/user_basics.ssi:251 en/user_basics.ssi:261
#: en/user_basics.ssi:271 en/user_basics.ssi:308 en/user_basics.ssi:320
#: en/user_basics.ssi:336 en/user_basics.ssi:344 en/user_basics.ssi:371
#: en/user_customization-binary.ssi:23 en/user_customization-contents.ssi:29
#: en/user_customization-contents.ssi:43 en/user_customization-contents.ssi:55
#: en/user_customization-installer.ssi:38
#: en/user_customization-installer.ssi:49
#: en/user_customization-packages.ssi:18 en/user_customization-packages.ssi:26
#: en/user_customization-packages.ssi:46 en/user_customization-packages.ssi:60
#: en/user_customization-packages.ssi:72
#: en/user_customization-packages.ssi:101
#: en/user_customization-packages.ssi:111
#: en/user_customization-packages.ssi:119
#: en/user_customization-packages.ssi:144
#: en/user_customization-packages.ssi:158
#: en/user_customization-packages.ssi:168
#: en/user_customization-packages.ssi:178
#: en/user_customization-packages.ssi:196
#: en/user_customization-packages.ssi:211
#: en/user_customization-packages.ssi:289
#: en/user_customization-packages.ssi:301
#: en/user_customization-packages.ssi:311
#: en/user_customization-packages.ssi:325
#: en/user_customization-packages.ssi:350
#: en/user_customization-packages.ssi:359 en/user_customization-runtime.ssi:18
#: en/user_customization-runtime.ssi:30 en/user_customization-runtime.ssi:48
#: en/user_customization-runtime.ssi:69 en/user_customization-runtime.ssi:79
#: en/user_customization-runtime.ssi:88 en/user_customization-runtime.ssi:97
#: en/user_customization-runtime.ssi:125 en/user_customization-runtime.ssi:135
#: en/user_customization-runtime.ssi:144 en/user_customization-runtime.ssi:153
#: en/user_customization-runtime.ssi:162 en/user_customization-runtime.ssi:180
#: en/user_installation.ssi:42 en/user_installation.ssi:52
#: en/user_installation.ssi:62 en/user_installation.ssi:70
#: en/user_installation.ssi:78 en/user_installation.ssi:86
#: en/user_installation.ssi:111 en/user_installation.ssi:128
#: en/user_installation.ssi:139 en/user_managing_a_configuration.ssi:27
#: en/user_managing_a_configuration.ssi:42
#: en/user_managing_a_configuration.ssi:60
#: en/user_managing_a_configuration.ssi:71
#: en/user_managing_a_configuration.ssi:79 en/user_overview.ssi:43
#: en/user_overview.ssi:53 en/user_overview.ssi:61
msgid "}code"
msgstr "}code"

#. type: Plain text
#: en/examples.ssi:107 en/user_basics.ssi:58
#, no-wrap
msgid " $ lb config\n"
msgstr ""

#. type: Plain text
#: en/examples.ssi:125 en/examples.ssi:236 en/user_basics.ssi:68
#: en/user_basics.ssi:225 en/user_basics.ssi:269
#, fuzzy, no-wrap
msgid " # lb build\n"
msgstr " $ make build\n"

#. type: Plain text
#: en/examples.ssi:150 en/user_basics.ssi:249
#, no-wrap
msgid " # lb clean\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:2
msgid ":B~ The basics"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:4
msgid "1~the-basics The basics"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:6
msgid ""
"This chapter contains a brief overview of the build process and instructions "
"for using the three most commonly used image types. The most versatile image "
"type, #{iso-hybrid}#, may be used on a virtual machine, optical medium or "
"USB portable storage device. In certain special cases, as explained later, "
"the #{hdd}# type may be more suitable. The chapter finishes with "
"instructions for building and using a #{netboot}# type image, which is a bit "
"more involved due to the setup required on the server. This is an slightly "
"advanced topic for anyone who is not familiar already with netbooting, but "
"it is included here because once the setup is done, it is a very convenient "
"way to test and deploy images for booting on the local network without the "
"hassle of dealing with image media."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:8
msgid ""
"Throughout the chapter, we will often refer to the default filenames "
"produced by live-build. If you are {downloading a prebuilt image}"
"#downloading-prebuilt-images instead, the actual filenames may vary."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:10
msgid "2~what-is-live What is a live system?"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:12
msgid ""
"A live system usually means an operating system booted on a computer from a "
"removable medium, such as a CD-ROM or USB stick, or from a network, ready to "
"use without any installation on the usual drive(s), with auto-configuration "
"done at run time (see {Terms}#terms)."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:14
msgid ""
"With live systems, it's an operating system, built for one of the supported "
"architectures (currently amd64 and i386). It is made from the following "
"parts:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:16
msgid "_* *{Linux kernel image}*, usually named #{vmlinuz*}#"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:18
msgid ""
"_* *{Initial RAM disk image (initrd)}*: a RAM disk set up for the Linux "
"boot, containing modules possibly needed to mount the System image and some "
"scripts to do it."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:20
msgid ""
"_* *{System image}*: The operating system's filesystem image. Usually, a "
"SquashFS compressed filesystem is used to minimize the live system image "
"size. Note that it is read-only. So, during boot the live system will use a "
"RAM disk and 'union' mechanism to enable writing files within the running "
"system. However, all modifications will be lost upon shutdown unless "
"optional persistence is used (see {Persistence}#persistence)."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:22
msgid ""
"_* *{Bootloader}*: A small piece of code crafted to boot from the chosen "
"medium, possibly presenting a prompt or menu to allow selection of options/"
"configuration. It loads the Linux kernel and its initrd to run with an "
"associated system filesystem. Different solutions can be used, depending on "
"the target medium and format of the filesystem containing the previously "
"mentioned components: isolinux to boot from a CD or DVD in ISO9660 format, "
"syslinux for HDD or USB drive booting from a VFAT partition, extlinux for "
"ext2/3/4 and btrfs partitions, pxelinux for PXE netboot, GRUB for ext2/3/4 "
"partitions, etc."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:24
msgid ""
"You can use live-build to build the system image from your specifications, "
"set up a Linux kernel, its initrd, and a bootloader to run them, all in one "
"medium-dependant format (ISO9660 image, disk image, etc.)."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:26
msgid "2~downloading-prebuilt-images Downloading prebuilt images"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:28
msgid ""
"While the focus of this manual is developing and building your own live "
"images, you may simply wish to try one of our prebuilt images, either as an "
"introduction to their use or instead of building your own. These images are "
"built using our {live-images git repository}#clone-configuration-via-git and "
"official stable releases are published at http://www.debian.org/CD/live/. In "
"addition, older and upcoming releases, and unofficial images containing non-"
"free firmware and drivers are available at http://live-systems.org/cdimage/"
"release/."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:30
msgid "2~using-web-builder Using the web live image builder"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:32
msgid ""
"As a service to the community, we run a web-based live image builder service "
"at http://live-build.debian.net/. This site is maintained on a best effort "
"basis. That is, although we strive to keep it up-to-date and operational at "
"all times, and do issue notices for significant operational outages, we "
"cannot guarantee 100% availability or fast image building, and the service "
"may occasionally have issues that take some time to resolve. If you have "
"problems or questions about the service, please {contact us}#contact, "
"providing us with the link to your build."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:34
msgid "3~ Web builder usage and caveats"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:36
msgid ""
"The web interface currently makes no provision to prevent the use of invalid "
"combinations of options, and in particular, where changing an option would "
"normally (i.e. using live-build directly) change defaults of other options "
"listed in the web form, the web builder does not change these defaults. Most "
"notably, if you change #{--architectures}# from the default #{i386}# to "
"#{amd64}#, you must change the corresponding option #{--linux-flavours}# "
"from the default #{486}# to #{amd64}#. See the #{lb_config}# man page for "
"the version of live-build installed on the web builder for more details. The "
"version number of live-build is listed at the bottom of the web builder page."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:38
msgid ""
"The time estimate given by the web builder is a crude estimate only and may "
"not reflect how long your build actually takes. Nor is the estimate updated "
"once it is displayed. Please be patient. Do not refresh the page you land on "
"after submitting the build, as this will resubmit a new build with the same "
"parameters. You should {contact us}#contact if you don't receive "
"notification of your build only once you are certain you've waited long "
"enough and verified the notification e-mail did not get caught by your own e-"
"mail spam filter."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:40
msgid ""
"The web builder is limited in the kinds of images it can build. This keeps "
"it simple and efficient to use and maintain. If you would like to make "
"customizations that are not provided for by the web interface, the rest of "
"this manual explains how to build your own images using live-build."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:42
msgid "2~building-iso-hybrid First steps: building an ISO hybrid image"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:44
msgid ""
"Regardless of the image type, you will need to perform the same basic steps "
"to build an image each time. As a first example, create a build directory, "
"change to that directory and then execute the following sequence of live-"
"build commands to create a basic ISO hybrid image containing a default live "
"system without X.org. It is suitable for burning to CD or DVD media, and "
"also to copy onto a USB stick."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:46
msgid ""
"The name of the working directory is absolutely up to you, but if you take a "
"look at the examples used throughout live-manual, it is a good idea to use a "
"name that helps you identify the image you are working with in each "
"directory, especially if you are working or experimenting with different "
"image types. In this case you are going to build a default system so let's "
"call it, for example, live-default."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:50
#, no-wrap
msgid " $ mkdir live-default && cd live-default\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:54
msgid ""
"Then, run the #{lb config}# command. This will create a \"config/\" "
"hierarchy in the current directory for use by other commands:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:62
msgid ""
"No parameters are passed to #{lb config}#, so defaults for all of its "
"various options will be used. See {The lb config command}#lb-config for more "
"details."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:64
msgid ""
"Now that the \"config/\" hierarchy exists, build the image with the #{lb "
"build}# command:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:72
msgid ""
"This process can take a while, depending on the speed of your computer and "
"your network connection. When it is complete, there should be a #{binary."
"hybrid.iso}# image file, ready to use, in the current directory."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:74
msgid "2~using-iso-hybrid Using an ISO hybrid live image"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:76
msgid ""
"After either building or downloading an ISO hybrid image, which can be "
"obtained at http://www.debian.org/CD/live/, the usual next step is to "
"prepare your medium for booting, either CD-R(W) or DVD-R(W) optical media or "
"a USB stick."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:78
msgid "3~burning-iso-image Burning an ISO image to a physical medium"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:80
msgid ""
"Burning an ISO image is easy. Just install /{xorriso}/ and use it from the "
"command-line to burn the image. For instance:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:84
#, no-wrap
msgid " # apt-get install xorriso\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:86
#, no-wrap
msgid " $ xorriso -as cdrecord -v dev=/dev/sr0 blank=as_needed binary.hybrid.iso\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:90
msgid "3~copying-iso-hybrid-to-usb Copying an ISO hybrid image to a USB stick"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:92
msgid ""
"ISO images prepared with #{xorriso}#, can be simply copied to a USB stick "
"with the #{cp}# program or an equivalent. Plug in a USB stick with a size "
"large enough for your image file and determine which device it is, which we "
"hereafter refer to as #{${USBSTICK}}#. This is the device file of your key, "
"such as #{/dev/sdb}#, not a partition, such as #{/dev/sdb1}#! You can find "
"the right device name by looking in #{dmesg}#'s output after plugging in the "
"stick, or better yet, #{ls -l /dev/disk/by-id}#."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:95
msgid ""
"Once you are certain you have the correct device name, use the #{cp}# "
"command to copy the image to the stick.  *{This will definitely overwrite "
"any previous contents on your stick!}*"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:99
#, no-wrap
msgid " $ cp binary.hybrid.iso ${USBSTICK}\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:101
#, no-wrap
msgid " $ sync\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:105
msgid "3~using-usb-extra-space Using the space left on a USB stick"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:107
msgid ""
"To use the remaining free space after copying #{binary.hybrid.iso}# to a USB "
"stick, use a partitioning tool such as /{gparted}/ or /{parted}/ to create a "
"new partition on the stick. The first partition will be used by the live "
"system."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:111
#, no-wrap
msgid " # gparted ${USBSTICK}\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:115
msgid ""
"After the partition is created, where #{${PARTITION}}# is the name of the "
"partition, such as #{/dev/sdb2}#, you have to create a filesystem on it. One "
"possible choice would be ext4."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:119
#, no-wrap
msgid " # mkfs.ext4 ${PARTITION}\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:123
#, no-wrap
msgid "*{Note:}* If you want to use the extra space with Windows, apparently that OS cannot normally access any partitions but the first. Some solutions to this problem have been discussed on our {mailing list}#contact, but it seems there are no easy answers.\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:125
#, no-wrap
msgid "*{Remember: Every time you install a new binary.hybrid.iso on the stick, all data on the stick will be lost because the partition table is overwritten by the contents of the image, so back up your extra partition first to restore again after updating the live image.}*\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:127
msgid "3~booting-live-medium Booting the live medium"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:129
msgid ""
"The first time you boot your live medium, whether CD, DVD, USB key, or PXE "
"boot, some setup in your computer's BIOS may be needed first. Since BIOSes "
"vary greatly in features and key bindings, we cannot get into the topic in "
"depth here. Some BIOSes provide a key to bring up a menu of boot devices at "
"boot time, which is the easiest way if it is available on your system. "
"Otherwise, you need to enter the BIOS configuration menu and change the boot "
"order to place the boot device for the live system before your normal boot "
"device."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:131
msgid ""
"Once you've booted the medium, you are presented with a boot menu. If you "
"just press enter here, the system will boot using the default entry, #{Live}"
"# and default options. For more information about boot options, see the "
"\"help\" entry in the menu and also the live-boot and live-config man pages "
"found within the live system."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:133
msgid ""
"Assuming you've selected #{Live}# and booted a default desktop live image, "
"after the boot messages scroll by, you should be automatically logged into "
"the #{user}# account and see a desktop, ready to use. If you have booted a "
"console-only image, such as #{standard}# or #{rescue}# flavour {prebuilt "
"images}#downloading-prebuilt-images, you should be automatically logged in "
"on the console to the #{user}# account and see a shell prompt, ready to use."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:135
msgid "2~using-virtual-machine Using a virtual machine for testing"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:137
msgid ""
"It can be a great time-saver for the development of live images to run them "
"in a virtual machine (VM). This is not without its caveats:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:139
msgid ""
"_* Running a VM requires enough RAM for both the guest OS and the host and a "
"CPU with hardware support for virtualization is recommended."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:141
msgid ""
"_* There are some inherent limitations to running on a VM, e.g. poor video "
"performance, limited choice of emulated hardware."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:143
msgid ""
"_* When developing for specific hardware, there is no substitute for running "
"on the hardware itself."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:145
msgid ""
"_* Occasionally there are bugs that relate only to running in a VM. When in "
"doubt, test your image directly on the hardware."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:147
msgid ""
"Provided you can work within these constraints, survey the available VM "
"software and choose one that is suitable for your needs."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:149
msgid "3~testing-iso-with-qemu Testing an ISO image with QEMU"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:151
msgid ""
"The most versatile VM in Debian is QEMU. If your processor has hardware "
"support for virtualization, use the /{qemu-kvm}/ package; the /{qemu-kvm}/ "
"package description briefly lists the requirements."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:153
msgid ""
"First, install /{qemu-kvm}/ if your processor supports it. If not, install /"
"{qemu}/, in which case the program name is #{qemu}# instead of #{kvm}# in "
"the following examples. The /{qemu-utils}/ package is also valuable for "
"creating virtual disk images with #{qemu-img}#."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:157
#, no-wrap
msgid " # apt-get install qemu-kvm qemu-utils\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:161
msgid "Booting an ISO image is simple:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:165
#, no-wrap
msgid " $ kvm -cdrom binary.hybrid.iso\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:169
msgid "See the man pages for more details."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:171
msgid "3~testing-iso-with-virtualbox Testing an ISO image with virtualbox"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:173
msgid "In order to test the ISO with /{virtualbox}/:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:177
#, no-wrap
msgid " # apt-get install virtualbox virtualbox-qt virtualbox-dkms\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:179
#, no-wrap
msgid " $ virtualbox\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:183
msgid ""
"Create a new virtual machine, change the storage settings to use #{binary."
"hybrid.iso}# as the CD/DVD device, and start the machine."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:185
#, no-wrap
msgid "*{Note:}* For live systems containing X.org that you want to test with /{virtualbox}/, you may wish to include the VirtualBox X.org driver package, /{virtualbox-guest-dkms}/ and /{virtualbox-guest-x11}/, in your live-build configuration. Otherwise, the resolution is limited to 800x600.\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:189
#, no-wrap
msgid " $ echo \"virtualbox-guest-dkms virtualbox-guest-x11\" >> config/package-lists/my.list.chroot\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:193
msgid ""
"In order to make the dkms package work, also the kernel headers for the "
"kernel flavour used in your image need to be installed. Instead of manually "
"listing the correct /{linux-headers}/ package in above created package list, "
"the selection of the right package can be done automatically by live-build."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:197
#, no-wrap
msgid "  $ lb config --linux-packages \"linux-image linux-headers\"\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:201
msgid "2~using-hdd-image Building and using an HDD image"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:203
msgid ""
"Building an HDD image is similar to an ISO hybrid one in all respects except "
"you specify #{-b hdd}# and the resulting filename is #{binary.img}# which "
"cannot be burnt to optical media. It is suitable for booting from USB "
"sticks, USB hard drives, and various other portable storage devices. "
"Normally, an ISO hybrid image can be used for this purpose instead, but if "
"you have a BIOS which does not handle hybrid images properly, you need an "
"HDD image."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:205
#, no-wrap
msgid "*{Note:}* if you created an ISO hybrid image with the previous example, you will need to clean up your working directory with the #{lb clean}# command (see {The lb clean command}#lb-clean):\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:209
#, no-wrap
msgid " # lb clean --binary\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:213
msgid ""
"Run the #{lb config}# command as before, except this time specifying the HDD "
"image type:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:217
#, no-wrap
msgid " $ lb config -b hdd\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:221 en/user_basics.ssi:265
msgid "Now build the image with the #{lb build}# command:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:229
msgid ""
"When the build finishes, a #{binary.img}# file should be present in the "
"current directory."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:231
msgid ""
"The generated binary image contains a VFAT partition and the syslinux "
"bootloader, ready to be directly written on a USB device. Once again, using "
"an HDD image is just like using an ISO hybrid one on USB. Follow the "
"instructions in {Using an ISO hybrid live image}#using-iso-hybrid, except "
"use the filename #{binary.img}# instead of #{binary.hybrid.iso}#."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:233
msgid ""
"Likewise, to test an HDD image with Qemu, install /{qemu}/ as described "
"above in {Testing an ISO image with QEMU}#testing-iso-with-qemu. Then run "
"#{kvm}# or #{qemu}#, depending on which version your host system needs, "
"specifying #{binary.img}# as the first hard drive."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:237
#, no-wrap
msgid " $ kvm -hda binary.img\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:241
msgid "2~building-netboot-image Building a netboot image"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:243
msgid ""
"The following sequence of commands will create a basic netboot image "
"containing a default live system without X.org. It is suitable for booting "
"over the network."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:245
#, no-wrap
msgid "*{Note:}* if you performed any previous examples, you will need to clean up your working directory with the #{lb clean}# command:\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:253
msgid ""
"In this specific case, a #{lb clean --binary}# would not be enough to clean "
"up the necessary stages. The cause for this is that in netboot setups, a "
"different initramfs configuration needs to be used which live-build performs "
"automatically when building netboot images. Since the initramfs creation "
"belongs to the chroot stage, switching to netboot in an existing build "
"directory means to rebuild the chroot stage too. Therefore, #{lb clean}# "
"(which will remove the chroot stage, too) needs to be used."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:255
msgid ""
"Run the #{lb config}# command as follows to configure your image for "
"netbooting:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:259
#, no-wrap
msgid " $ lb config -b netboot --net-root-path \"/srv/debian-live\" --net-root-server \"192.168.0.2\"\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:263
msgid ""
"In contrast with the ISO and HDD images, netbooting does not, itself, serve "
"the filesystem image to the client, so the files must be served via NFS. "
"Different network filesystems can be chosen through lb config. The #{--net-"
"root-path}# and #{--net-root-server}# options specify the location and "
"server, respectively, of the NFS server where the filesytem image will be "
"located at boot time. Make sure these are set to suitable values for your "
"network and server."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:273
msgid ""
"In a network boot, the client runs a small piece of software which usually "
"resides on the EPROM of the Ethernet card. This program sends a DHCP request "
"to get an IP address and information about what to do next. Typically, the "
"next step is getting a higher level bootloader via the TFTP protocol. That "
"could be pxelinux, GRUB, or even boot directly to an operating system like "
"Linux."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:275
msgid ""
"For example, if you unpack the generated #{binary.netboot.tar}# archive in "
"the #{/srv/debian-live}# directory, you'll find the filesystem image in "
"#{live/filesystem.squashfs}# and the kernel, initrd and pxelinux bootloader "
"in #{tftpboot/}#."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:277
msgid ""
"We must now configure three services on the server to enable netbooting: the "
"DHCP server, the TFTP server and the NFS server."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:279
msgid "3~ DHCP server"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:281
msgid ""
"We must configure our network's DHCP server to be sure to give an IP address "
"to the netbooting client system, and to advertise the location of the PXE "
"bootloader."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:283
msgid ""
"Here is an example for inspiration, written for the ISC DHCP server #{isc-"
"dhcp-server}# in the #{/etc/dhcp/dhcpd.conf}# configuration file:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:287
#, no-wrap
msgid " # /etc/dhcp/dhcpd.conf - configuration file for isc-dhcp-server\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:289
#, no-wrap
msgid " ddns-update-style none;\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:292
#, no-wrap
msgid ""
" option domain-name \"example.org\";\n"
" option domain-name-servers ns1.example.org, ns2.example.org;\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:295
#, no-wrap
msgid ""
" default-lease-time 600;\n"
" max-lease-time 7200;\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:297
#, no-wrap
msgid " log-facility local7;\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:306
#, no-wrap
msgid ""
" subnet 192.168.0.0 netmask 255.255.255.0 {\n"
"   range 192.168.0.1 192.168.0.254;\n"
"   filename \"pxelinux.0\";\n"
"   next-server 192.168.0.2;\n"
"   option subnet-mask 255.255.255.0;\n"
"   option broadcast-address 192.168.0.255;\n"
"   option routers 192.168.0.1;\n"
"}\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:310
msgid "3~ TFTP server"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:312
msgid "This serves the kernel and initial ramdisk to the system at run time."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:314
msgid ""
"You should install the /{tftpd-hpa}/ package. It can serve all files "
"contained inside a root directory, usually #{/srv/tftp}#. To let it serve "
"files inside #{/srv/debian-live/tftpboot}#, run as root the following "
"command:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:318
#, no-wrap
msgid " # dpkg-reconfigure -plow tftpd-hpa\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:322
msgid "and fill in the new tftp server directory when being asked about it."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:324
msgid "3~ NFS server"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:326
msgid ""
"Once the guest computer has downloaded and booted a Linux kernel and loaded "
"its initrd, it will try to mount the Live filesystem image through a NFS "
"server."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:328
msgid "You need to install the /{nfs-kernel-server}/ package."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:330
msgid ""
"Then, make the filesystem image available through NFS by adding a line like "
"the following to #{/etc/exports}#:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:334
#, no-wrap
msgid " /srv/debian-live *(ro,async,no_root_squash,no_subtree_check)\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:338
msgid ""
"and tell the NFS server about this new export with the following command:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:342
#, no-wrap
msgid " # exportfs -rv\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:346
msgid ""
"Setting up these three services can be a little tricky. You might need some "
"patience to get all of them working together. For more information, see the "
"syslinux wiki at http://www.syslinux.org/wiki/index.php/PXELINUX or the "
"Debian Installer Manual's TFTP Net Booting section at http://d-i.alioth."
"debian.org/manual/en.i386/ch04s05.html. They might help, as their processes "
"are very similar."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:348
msgid "3~ Netboot testing HowTo"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:350
msgid ""
"Netboot image creation is made easy with live-build, but testing the images "
"on physical machines can be really time consuming."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:352
msgid "To make our life easier, we can use virtualization."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:354
msgid "3~ Qemu"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:356
msgid "_* Install /{qemu}/, /{bridge-utils}/, /{sudo}/."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:358
msgid "Edit #{/etc/qemu-ifup}#:"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:369
#, no-wrap
msgid ""
" #!/bin/sh\n"
" sudo -p \"Password for $0:\" /sbin/ifconfig $1 172.20.0.1\n"
" echo \"Executing /etc/qemu-ifup\"\n"
" echo \"Bringing up $1 for bridged mode...\"\n"
" sudo /sbin/ifconfig $1 0.0.0.0 promisc up\n"
" echo \"Adding $1 to br0...\"\n"
" sudo /usr/sbin/brctl addif br0 $1\n"
" sleep 2\n"
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:373
msgid "Get, or build a #{grub-floppy-netboot}#."
msgstr ""

#. type: Plain text
#: en/user_basics.ssi:374
msgid ""
"Launch #{qemu}# with \"#{-net nic,vlan=0 -net tap,vlan=0,ifname=tun0}#\""
msgstr ""
