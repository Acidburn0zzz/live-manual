# German translations for live-manual package
# Copyright (C) 2006-2010 Debian Live Project <debian-live@lists.debian.org>
# This file is distributed under the same license as the live-manual package.
#
msgid ""
msgstr ""
"Project-Id-Version: live-manual 2.0~a2\n"
"POT-Creation-Date: 2010-06-18 17:51+0300\n"
"PO-Revision-Date: 2010-06-18 17:51+0300\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#. type: Content of: <chapter><section><section><para>
#: en/about_manual.xml:141 en/about_manual.xml:145 en/about_manual.xml:149
#: en/about_manual.xml:158 en/about_manual.xml:164 en/about_manual.xml:170
#: en/about_manual.xml:176 en/about_manual.xml:182 en/basics.xml:43
#: en/basics.xml:48 en/basics.xml:55 en/basics.xml:58 en/basics.xml:70
#: en/basics.xml:79 en/basics.xml:83 en/basics.xml:87 en/basics.xml:93
#: en/basics.xml:103 en/basics.xml:116 en/basics.xml:120 en/basics.xml:124
#: en/basics.xml:137 en/basics.xml:141 en/basics.xml:146 en/basics.xml:158
#: en/basics.xml:168 en/basics.xml:180 en/basics.xml:184 en/basics.xml:203
#: en/basics.xml:218 en/customization_packages.xml:23
#: en/customization_packages.xml:27 en/customization_packages.xml:32
#: en/customization_packages.xml:36 en/customization_packages.xml:46
#: en/customization_packages.xml:100 en/customization_packages.xml:104
#: en/customization_packages.xml:114 en/customization_packages.xml:130
#: en/customization_packages.xml:138 en/customization_packages.xml:142
#: en/customization_packages.xml:146 en/customization_packages.xml:150
#: en/faq.xml:34 en/faq.xml:126 en/faq.xml:129 en/faq.xml:136 en/faq.xml:139
#: en/faq.xml:161 en/faq.xml:186 en/faq.xml:208 en/howtos.xml:17
#: en/howtos.xml:23 en/howtos.xml:29 en/overview.xml:59 en/overview.xml:64
#: en/overview.xml:68
msgid "<placeholder type=\"screen\" id=\"0\"/>"
msgstr ""

#. type: Content of: <chapter><title>
#: en/basics.xml:4
msgid "The basics"
msgstr ""

#. type: Content of: <chapter><para>
#: en/basics.xml:5
msgid ""
"This chapter contains a brief overview of the build process as well as "
"containing instructions on how to boot the various binary image types."
msgstr ""

#. type: Content of: <chapter><section><title>
#: en/basics.xml:7
msgid "What is a live system?"
msgstr ""

#. type: Content of: <chapter><section><para>
#: en/basics.xml:8
msgid ""
"A live system usually means an OS booted on a computer from a removable "
"medium (such as CD-ROM, USB stick, or network), ready to use without any "
"installation on the usual drive(s), with an auto-configuration done at "
"runtime (see <xref linkend=\"terms\"/>)."
msgstr ""

#. type: Content of: <chapter><section><para>
#: en/basics.xml:9
msgid ""
"With Debian Live, it's a Debian GNU/Linux OS, built for one of the supported "
"architectures (currently amd64, i386, powerpc and sparc). It is made from "
"following parts:"
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><term>
#: en/basics.xml:12
msgid "Linux kernel"
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><listitem><para>
#: en/basics.xml:14
msgid "The Linux image, usually named <filename>vmlinuz*</filename>."
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><term>
#: en/basics.xml:18
msgid "Initial RAM disk image (initrd)"
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><listitem><para>
#: en/basics.xml:20
msgid ""
"RAM disk setup for the Linux boot, containing modules possibly needed to "
"mount the filesystem's image and some scripts to do it."
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><term>
#: en/basics.xml:24
msgid "System image"
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><listitem><para>
#: en/basics.xml:26
msgid ""
"The OS filesystem image. Debian Live uses SquashFS, a compressed filesystem, "
"to minimize its image size. Note that it's read-only. So, during boot the "
"Debian Live system will use a RAM disk and 'union' mechanism to enable "
"writing files within the running system. However, all modifications will be "
"lost upon shutdown unless optional persistence partition(s) are used. (See "
"<xref linkend=\"persistence\"/>.)"
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><term>
#: en/basics.xml:30
msgid "Bootloader"
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><listitem><para>
#: en/basics.xml:32
msgid ""
"A small piece of code, crafted to boot up from the chosen media, possibly "
"presenting a prompt or menu to allow selection of options/configuration. It "
"then loads the Linux kernel and its initrd to run with an associated "
"filesystem image. Different solutions can be used depending on the target "
"media and format of the filesystem containing the previous components: "
"Isolinux to boot from a CD or DVD in ISO9660 format, syslinux for HDD or USB "
"drive booting from a VFAT partition, GRUB for ext2/3 partition, pxelinux for "
"PXE netboot, etc."
msgstr ""

#. type: Content of: <chapter><section><para>
#: en/basics.xml:36
msgid ""
"The Debian Live tools will build the system image from your specifications, "
"setup a Linux kernel and its initrd, a bootloader to run them, all in one "
"media-dependant format(ISO9660 image, disk image, etc.)"
msgstr ""

#. type: Content of: <chapter><section><title>
#: en/basics.xml:39
msgid "First steps: building an ISO image"
msgstr ""

#. type: Content of: <chapter><section><para>
#: en/basics.xml:40
msgid ""
"The following sequence of helper commands, provided by <filename>live-"
"helper</filename>, will create a basic ISO image containing just the Debian "
"standard system without X.org. It is suitable for burning to CD or DVD media."
msgstr ""

#. type: Content of: <chapter><section><para>
#: en/basics.xml:41
msgid ""
"First, we run the <filename>lh config</filename> helper command which will "
"create a <filename>\"config/\"</filename> hierarchy in the current directory "
"for use by other helper commands:"
msgstr ""

#. type: Content of: <chapter><section><para><screen>
#: en/basics.xml:43
#, no-wrap
msgid "$ lh config"
msgstr ""

#. type: Content of: <chapter><section><para>
#: en/basics.xml:45
msgid ""
"By passing no parameters to <filename>lh config</filename> we indicated that "
"we wish to use the defaults. This will create an image of type binary (see "
"<xref linkend=\"lh-config\"/>)."
msgstr ""

#. type: Content of: <chapter><section><para>
#: en/basics.xml:46
msgid ""
"Now that we have a <filename>\"config/\"</filename> hierarchy, we may build "
"the image with the <filename>lh build</filename> helper command:"
msgstr ""

#. type: Content of: <chapter><sect1><itemizedlist><listitem><para><screen>
#: en/basics.xml:48 en/basics.xml:87 en/basics.xml:146 en/use-cases.xml:29
#, no-wrap
msgid "# lh build"
msgstr ""

#. type: Content of: <chapter><section><para>
#: en/basics.xml:50
msgid ""
"This process can take a while, depending on the speed of your network "
"connection (see <xref linkend=\"lh-build\"/>)."
msgstr ""

#. type: Content of: <chapter><section><section><title>
#: en/basics.xml:52
msgid "Testing an ISO image with Qemu"
msgstr ""

#. type: Content of: <chapter><section><section><para>
#: en/basics.xml:53
msgid "Testing an ISO is simple:"
msgstr ""

#. type: Content of: <chapter><section><section><para><screen>
#: en/basics.xml:55
#, no-wrap
msgid "# apt-get install qemu $ qemu -cdrom binary.iso"
msgstr ""

#. type: Content of: <chapter><section><section><title>
#: en/basics.xml:58
msgid "Testing an ISO image with virtualbox-ose"
msgstr ""

#. type: Content of: <chapter><section><section><para>
#: en/basics.xml:58
msgid "In order to test the ISO with virtualbox-ose:"
msgstr ""

#. type: Content of: <chapter><section><section><para><screen>
#: en/basics.xml:58
#, no-wrap
msgid "# apt-get install virtualbox-ose"
msgstr ""

#. type: Content of: <chapter><section><section><itemizedlist><listitem><para>
#: en/basics.xml:58
msgid ""
"the modules package for a stock kernel eg virtualbox-ose-"
"modules-2.6.26-1-486 or"
msgstr ""

#. type: Content of: <chapter><section><section><itemizedlist><listitem><para>
#: en/basics.xml:58
msgid ""
"the modules package compiled for your kernel using module-assistant from the "
"package virtualbox-ose-source"
msgstr ""

#. type: Content of: <chapter><section><section><para>
#: en/basics.xml:58
msgid "Run Virtualbox:"
msgstr ""

#. type: Content of: <chapter><section><section><para>
#: en/basics.xml:58
msgid "{{{Applications -&gt; System Tools -&gt; VirtualBox OSE }}}"
msgstr ""

#. type: Content of: <chapter><section><section><para>
#: en/basics.xml:58
msgid "Create a virtual machine from your Live ISO"
msgstr ""

#. type: Content of: <chapter><section><section><para>
#: en/basics.xml:58
msgid ""
"To create a virtual machine \"mylive\" from A CDROM ISO \"binary.iso\" in "
"VirtualBox:"
msgstr ""

#. type: Content of: <chapter><section><section><para>
#: en/basics.xml:58
msgid "{{{Machine -&gt; New }}}"
msgstr ""

#. type: Content of: <chapter><section><section><para>
#: en/basics.xml:58
msgid "In the Wizard: FIXME"
msgstr ""

#. type: Content of: <chapter><section><section><title>
#: en/basics.xml:60
msgid "Testing an ISO image with VMware Workstation"
msgstr ""

#. type: Content of: <chapter><section><section><para>
#: en/basics.xml:61
msgid "In order to test the ISO with VMware Workstation:"
msgstr ""

#. type: Content of: <chapter><section><section><para>
#: en/basics.xml:62 en/basics.xml:109
msgid "Run VMware Workstation:"
msgstr ""

#. type: Content of: <chapter><section><section><para>
#: en/basics.xml:63
msgid "Click on Edit virtual machine settings in the VM summary page."
msgstr ""

#. type: Content of: <chapter><section><section><para>
#: en/basics.xml:64
msgid ""
"Then, click on the CD-ROM device and select Use ISO image. Remeber to "
"connect the CD-ROM device at power on and remeber to adjust the boot order "
"in the bios."
msgstr ""

#. type: Content of: <chapter><section><section><title>
#: en/basics.xml:67
msgid "Burning an ISO image to a physical medium"
msgstr ""

#. type: Content of: <chapter><section><section><para>
#: en/basics.xml:68
msgid "Burning an ISO image is easy:"
msgstr ""

#. type: Content of: <chapter><section><section><para><screen>
#: en/basics.xml:70
#, no-wrap
msgid "# apt-get install wodim $ wodim binary.iso"
msgstr ""

#. type: Content of: <chapter><section><title>
#: en/basics.xml:75
msgid "Building an USB/HDD image"
msgstr ""

#. type: Content of: <chapter><section><para>
#: en/basics.xml:76
msgid ""
"The following sequence of helper commands will create a basic USB/HDD image "
"containing just the Debian standard system without X.org. It is suitable for "
"booting from USB sticks, USB hard drives, and various other portable storage "
"devices."
msgstr ""

#. type: Content of: <chapter><section><para>
#: en/basics.xml:77
msgid ""
"Note if you created an iso image with the previous example, you will need to "
"clean up your working directory with the <filename>lh clean</filename> "
"helper command (see <xref linkend=\"lh-clean\"/>):"
msgstr ""

#. type: Content of: <chapter><section><para><screen>
#: en/basics.xml:79 en/basics.xml:137
#, no-wrap
msgid "$ lh clean --binary"
msgstr ""

#. type: Content of: <chapter><section><para>
#: en/basics.xml:81
msgid ""
"Run the <filename>lh config</filename> helper command with the parameters to "
"configure the <filename>\"config/\"</filename> hierarchy to create a USB/HDD "
"image type:"
msgstr ""

#. type: Content of: <chapter><section><para><screen>
#: en/basics.xml:83
#, no-wrap
msgid "$ lh config -b usb-hdd"
msgstr ""

#. type: Content of: <chapter><section><para>
#: en/basics.xml:85 en/basics.xml:144
msgid ""
"Now build the image with the <filename>lh build</filename> helper command:"
msgstr ""

#. type: Content of: <chapter><section><section><title>
#: en/basics.xml:90
msgid "Copying USB/HDD image to a USB stick"
msgstr ""

#. type: Content of: <chapter><section><section><para>
#: en/basics.xml:91
msgid ""
"The generated binary image contains a <acronym>VFAT</acronym> partition and "
"the <command>syslinux</command> bootloader, ready to be directly written on "
"an USB stick. Plug in an USB stick with a size larger than that of "
"<filename>binary.img</filename> and type:"
msgstr ""

#. type: Content of: <chapter><section><section><para><screen>
#: en/basics.xml:93
#, no-wrap
msgid "$ dd if=binary.img of=${USBSTICK}"
msgstr ""

#. type: Content of: <chapter><section><section><para>
#: en/basics.xml:95
msgid ""
"where <replaceable>${USBSTICK}</replaceable> is the device file of your key, "
"like <filename>/dev/sdb</filename> (not a partition like <filename>/dev/"
"sdb1</filename>!); you can find the right device name by looking in "
"<command>dmesg</command>'s output after plugging in the stick, for example."
msgstr ""

#. type: Content of: <chapter><section><section><title>
#: en/basics.xml:101
msgid "Testing a USB/HDD image with Qemu"
msgstr ""

#. type: Content of: <chapter><section><section><para><screen>
#: en/basics.xml:103
#, no-wrap
msgid "# apt-get install qemu $ qemu -hda binary.img"
msgstr ""

#. type: Content of: <chapter><section><section><title>
#: en/basics.xml:107
msgid "Testing an USB/HDD image with VMware Workstation"
msgstr ""

#. type: Content of: <chapter><section><section><para>
#: en/basics.xml:108
msgid "In order to test the USB/HDD image with VMware Workstation:"
msgstr ""

#. type: Content of: <chapter><section><section><para>
#: en/basics.xml:110
msgid ""
"Write the image to an usb stick. In VMware, click on Edit virtual machine "
"settings in VM summary page. Then, add a new physical harddisk device and "
"enter the device node of your usb stick."
msgstr ""

#. type: Content of: <chapter><section><section><title>
#: en/basics.xml:113
msgid "Using the space left on a USB stick"
msgstr ""

#. type: Content of: <chapter><section><section><para>
#: en/basics.xml:114
msgid ""
"If you want to use the remaining free space after you have installed the "
"<filename>binary.img</filename>, you can use a partitioning tool such as "
"gparted or parted to create a new partition on the stick. The first "
"partition will be used by the Debian Live system."
msgstr ""

#. type: Content of: <chapter><section><section><para><screen>
#: en/basics.xml:116
#, no-wrap
msgid "# gparted ${USBSTICK}"
msgstr ""

#. type: Content of: <chapter><section><section><para>
#: en/basics.xml:118
msgid ""
"After the creation of the partition you have to create a filsystem on it. "
"One possible choice would be ext2 (ext3 isn't recommended because the "
"journaling causes too many writes to the stick)."
msgstr ""

#. type: Content of: <chapter><section><section><para><screen>
#: en/basics.xml:120
#, no-wrap
msgid "# mkfs.ext2 ${USBSTICK}"
msgstr ""

#. type: Content of: <chapter><section><section><para>
#: en/basics.xml:122
msgid "If you want to use this data partition with Windows, use FAT32."
msgstr ""

#. type: Content of: <chapter><section><section><para><screen>
#: en/basics.xml:124
#, no-wrap
msgid "# mkfs.vfat -F 32"
msgstr ""

#. type: Content of: <chapter><section><section><para>
#: en/basics.xml:129
msgid ""
"FIXME: Describe installing Debian Live to a partition (e.g. /dev/sdc1) AND "
"using a bootloader to boot this."
msgstr ""

#. type: Content of: <chapter><section><title>
#: en/basics.xml:133
msgid "Building a netboot image"
msgstr ""

#. type: Content of: <chapter><section><para>
#: en/basics.xml:134
msgid ""
"The following sequence of helper commands will create a basic netboot image "
"containing the Debian standard system without X.org. It is suitable for "
"booting over the network."
msgstr ""

#. type: Content of: <chapter><section><para>
#: en/basics.xml:135
msgid ""
"Note if you performed any previous examples, you will need to clean up your "
"working directory with the <filename>lh clean</filename> helper command:"
msgstr ""

#. type: Content of: <chapter><section><para>
#: en/basics.xml:139
msgid ""
"Run the <filename>lh config</filename> helper command with the parameters to "
"configure the <filename>\"config/\"</filename> hierarchy to create our "
"netboot image:"
msgstr ""

#. type: Content of: <chapter><section><para><screen>
#: en/basics.xml:141
#, no-wrap
msgid "$ lh config -b net --net-root-path \"/srv/debian-live\" --net-root-server \"192.168.0.1\""
msgstr ""

#. type: Content of: <chapter><section><para>
#: en/basics.xml:143
msgid ""
"In contrast with the ISO and USB hdd images, netbooting does not support "
"serving a filesystem image with the client so the files must be served via "
"NFS. The <replaceable>net-root-path</replaceable> and <replaceable>net-root-"
"server</replaceable> options specify the location and server, respectively, "
"of the NFS server where the filesytem image will be located at boot-time."
msgstr ""

#. type: Content of: <chapter><section><para>
#: en/basics.xml:148
msgid ""
"In a network boot the client runs a small piece of software, which usually "
"resides on the <acronym>EEPROM</acronym> of the Ethernet card. This program "
"sends a <abbrev>DHCP</abbrev> request to get an <abbrev>IP</abbrev> address "
"and information about what to do next. Typically the next step is getting a "
"higher level boot loader via the <abbrev>TFTP</abbrev> protocol. That could "
"be <application>Grub</application>, <application>PXELINUX</application>, or "
"even boot directly to an operating system like <application>Linux</"
"application>."
msgstr ""

#. type: Content of: <chapter><section><para>
#: en/basics.xml:149
msgid ""
"For example, if you unpack the generated <filename>binary-net.tar.gz</"
"filename> archive in the <filename>/srv/debian-live</filename> directory, "
"you'll find the filesystem image in <filename>live/filesystem.squashfs</"
"filename> and the kernel, initrd and PXE Linux bootloader in "
"<filename>tftpboot/debian-live/i386</filename>."
msgstr ""

#. type: Content of: <chapter><section><para>
#: en/basics.xml:150
msgid "We must now configure three services on the server to enable netboot:"
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><term>
#: en/basics.xml:153
msgid "DHCP server"
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><listitem><para>
#: en/basics.xml:155
msgid ""
"We must configure our network's DHCP server to be sure to give an "
"<abbrev>IP</abbrev> address to the computer netbooting, and to advertise the "
"location of the PXE bootloader."
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><listitem><para>
#: en/basics.xml:156
msgid ""
"Here is an example for inspiration, written for the ISC DHCP server (package "
"<literal>dhcp3-server</literal>) in the <filename>/etc/dhcp3/dhcpd.conf</"
"filename> configuration file:"
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><listitem><para><screen>
#: en/basics.xml:158
#, no-wrap
msgid "# Options DHCP spécifiques à Pxelinux: option space pxelinux; option pxelinux.magic code 208 = string; option pxelinux.configfile code 209 = text; option pxelinux.pathprefix code 210 = text; option pxelinux.reboottime code 211 = unsigned integer 32; subnet 192.168.1.0 netmask 255.255.255.0 { # 192.168.1.0/24 # IP addresses available for guests range 192.168.1.100 192.168.1.149; # allow booting from the net allow bootp; # for net booting, server where the first file to be loaded (by TFTP # protocol) (\"filename\" following definition) lies : so the TFTP # server's name. next-server myserver; # net boot configuration for guests with a PXE client : if substring (option vendor-class-identifier, 0, 9) = \"PXEClient\" { # Note : all files for PXE are relatives to the TFTP server's root # path, as usually defined in /etc/inetd.conf. # PXE boot loader (first program to be loaded, by TFTP) filename \"pxelinux.0\"; # describe some specific pxelinux's options through DHCP options : site-option-space \"pxelinux\"; option pxelinux.magic f1:00:74:7e; if exists dhcp-parameter-request-list { # Always send the PXELINUX options (specified in hexadecimal) option dhcp-parameter-request-list = concat(option dhcp-parameter-request-list,d0,d1,d2,d3); } # For a PXE boot menu, different versions are available : simple # text, text with curses, graphic (VESA) #option pxelinux.configfile \"pxelinux/config_simple\"; #option pxelinux.configfile \"pxelinux/config_curses\"; option pxelinux.configfile \"pxelinux/config_vesa\"; # automatically reboot after 10 minutes of no activity option pxelinux.reboottime 600; } }"
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><term>
#: en/basics.xml:163
msgid "TFTPd server"
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><listitem><para>
#: en/basics.xml:165
msgid "This serves the kernel and initial ramdisk to the system at run-time."
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><listitem><para>
#: en/basics.xml:166
msgid ""
"You should install the <command>tftpd-hpa</command> package. It can serve "
"all files contained inside a root directory, usually <filename>/var/lib/"
"tftpboot/</filename>, as defined with its <option>-s</option> option. To let "
"it serve files inside <filename>/srv/debian-live/tftpboot</filename>, modify "
"its start definition in <filename>/etc/inetd.conf</filename> with:"
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><listitem><para><screen>
#: en/basics.xml:168
#, no-wrap
msgid "tftp dgram udp wait root /usr/sbin/in.tftpd /usr/sbin/in.tftpd -s /srv/debian-live/tftpboot -r blksize -v -v"
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><listitem><para>
#: en/basics.xml:170
msgid ""
"and reload the super server with <command>/etc/init.d/openbsd-inetd reload</"
"command>."
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><term>
#: en/basics.xml:174
msgid "NFS server"
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><listitem><para>
#: en/basics.xml:176
msgid ""
"Once the guest computer has downloaded and booted a Linux kernel and loaded "
"its initrd, it will try to mount the Live filesystem image through a NFS "
"server."
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><listitem><para>
#: en/basics.xml:177
msgid ""
"You should install the <command>nfs-kernel-server</command> package -- "
"<command>nfs-user-server</command> does not function correctly with netboot."
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><listitem><para>
#: en/basics.xml:178
msgid ""
"Then, make the filesystem image available through NFS by adding a line like "
"the following to <filename>/etc/exports</filename>:"
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><listitem><para><screen>
#: en/basics.xml:180
#, no-wrap
msgid "/srv/debian-live *(ro,async,subtree_check,no_root_squash)"
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><listitem><para>
#: en/basics.xml:182
msgid ""
"and tell the NFS server about this new export with the following command:"
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><listitem><para><screen>
#: en/basics.xml:184
#, no-wrap
msgid "# exportfs -rv"
msgstr ""

#. type: Content of: <chapter><section><para>
#: en/basics.xml:189
msgid ""
"Setting up these three services can be a little tricky. You might need some "
"patience to get all of them working together. The Debian Installer Manual's "
"<ulink url=\"http://d-i.alioth.debian.org/manual/en.i386/ch04s05.html\">TFTP "
"Net Booting</ulink> section might help as that process is very similar."
msgstr ""

#. type: Content of: <chapter><section><title>
#: en/basics.xml:192
msgid "Netboot testing HowTo"
msgstr ""

#. type: Content of: <chapter><section><para>
#: en/basics.xml:193
msgid ""
"Netboot image creation is made easy with live-helper magic, but testing the "
"images on physical machines can be really time consuming."
msgstr ""

#. type: Content of: <chapter><section><para>
#: en/basics.xml:194
msgid ""
"To make our life easier, we can use virtualization. There are two solutions:"
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><term>
#: en/basics.xml:197
msgid "VMWare Player"
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><listitem><para>
#: en/basics.xml:199
msgid "Install VMWare Player (\"free as in beer\" edition)"
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><listitem><para>
#: en/basics.xml:200
msgid ""
"Create a PXETester directory, and create a text file called pxe.vwx inside"
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><listitem><para>
#: en/basics.xml:201
msgid "Paste this text inside:"
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><listitem><para><screen>
#: en/basics.xml:203
#, no-wrap
msgid "#!/usr/bin/vmware config.version = \"8\" virtualHW.version = \"4\" memsize = \"512\" MemAllowAutoScaleDown = \"FALSE\" ide0:0.present = \"FALSE\" ide1:0.present = \"FALSE\" floppy0.present = \"FALSE\" sound.present = \"FALSE\" tools.remindInstall = \"FALSE\" ethernet0.present = \"TRUE\" ethernet0.addressType = \"generated\" displayName = \"Test Boot PXE\" guestOS = \"other\" ethernet0.generatedAddress = \"00:0c:29:8d:71:3b\" uuid.location = \"56 4d 83 72 5c c4 de 3f-ae 9e 07 91 1d 8d 71 3b\" uuid.bios = \"56 4d 83 72 5c c4 de 3f-ae 9e 07 91 1d 8d 71 3b\" ethernet0.generatedAddressOffset = \"0\""
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><listitem><para>
#: en/basics.xml:205
msgid ""
"You can play with this configuration file (i.e. change memory limit to 256)"
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><listitem><para>
#: en/basics.xml:206
msgid "Double click on this file (or run VMWare player and selecet this file)."
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><listitem><para>
#: en/basics.xml:207
msgid "When running just press space if that strange question comes up..."
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><term>
#: en/basics.xml:213
msgid "Qemu"
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><listitem><para>
#: en/basics.xml:215
msgid "Install qemu, bridge-utils, sudo."
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><listitem><para>
#: en/basics.xml:216
msgid "Edit <filename>/etc/qemu-ifup</filename>:"
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><listitem><para><screen>
#: en/basics.xml:218
#, no-wrap
msgid "#!/bin/sh sudo -p \"Password for $0:\" /sbin/ifconfig $1 172.20.0.1 echo \"Executing /etc/qemu-ifup\" echo \"Bringing up $1 for bridged mode...\" sudo /sbin/ifconfig $1 0.0.0.0 promisc up echo \"Adding $1 to br0...\" sudo /usr/sbin/brctl addif br0 $1 sleep 2"
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><listitem><para>
#: en/basics.xml:220
msgid "Get, or build a grub-floppy-netboot (in the svn)."
msgstr ""

#. type: Content of: <chapter><section><variablelist><varlistentry><listitem><para>
#: en/basics.xml:221
msgid "Launch qemu with \"-net nic,vlan=0 -net tap,vlan=0,ifname=tun0\""
msgstr ""
