# Romanian translations for live-manual package
# Copyright (C) 2010 Free Software Foundation, Inc.
# This file is distributed under the same license as the live-manual package.
# Automatically generated, 2010.
#
msgid ""
msgstr ""
"Project-Id-Version: live-manual 2.0.0\n"
"POT-Creation-Date: 2010-12-16 21:32-0400\n"
"PO-Revision-Date: 2010-11-04 16:34-0400\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ro\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=n==1 ? 0 : (n==0 || (n%100 > 0 && n%100 < "
"20)) ? 1 : 2;\n"

#. type: Plain text
#: en/live-manual.ssm:61 en/user_examples.ssi:2
msgid ":B~ Examples"
msgstr ""

#. type: Plain text
#: en/about_manual.ssi:84 en/about_manual.ssi:92 en/about_manual.ssi:100
#: en/about_manual.ssi:108 en/about_manual.ssi:120 en/about_manual.ssi:133
#: en/about_manual.ssi:146 en/about_manual.ssi:154 en/about_manual.ssi:162
#: en/about_manual.ssi:170 en/project_bugs.ssi:58
#: en/project_coding-style.ssi:28 en/project_coding-style.ssi:38
#: en/project_coding-style.ssi:51 en/project_coding-style.ssi:61
#: en/project_coding-style.ssi:92 en/project_coding-style.ssi:100
#: en/project_coding-style.ssi:110 en/project_coding-style.ssi:121
#: en/project_procedures.ssi:12 en/project_procedures.ssi:46
#: en/project_procedures.ssi:58 en/user_basics.ssi:30 en/user_basics.ssi:40
#: en/user_basics.ssi:52 en/user_basics.ssi:64 en/user_basics.ssi:76
#: en/user_basics.ssi:86 en/user_basics.ssi:100 en/user_basics.ssi:108
#: en/user_basics.ssi:116 en/user_basics.ssi:126 en/user_basics.ssi:140
#: en/user_basics.ssi:152 en/user_basics.ssi:160 en/user_basics.ssi:168
#: en/user_basics.ssi:182 en/user_basics.ssi:190 en/user_basics.ssi:200
#: en/user_basics.ssi:220 en/user_basics.ssi:253 en/user_basics.ssi:269
#: en/user_basics.ssi:277 en/user_basics.ssi:297 en/user_basics.ssi:322
#: en/user_customization-contents.ssi:26 en/user_customization-contents.ssi:35
#: en/user_customization-contents.ssi:54 en/user_customization-contents.ssi:66
#: en/user_customization-installer.ssi:32
#: en/user_customization-installer.ssi:42
#: en/user_customization-packages.ssi:14 en/user_customization-packages.ssi:22
#: en/user_customization-packages.ssi:40 en/user_customization-packages.ssi:53
#: en/user_customization-packages.ssi:66 en/user_customization-packages.ssi:80
#: en/user_customization-packages.ssi:94
#: en/user_customization-packages.ssi:112
#: en/user_customization-packages.ssi:142
#: en/user_customization-packages.ssi:155
#: en/user_customization-packages.ssi:165
#: en/user_customization-packages.ssi:175
#: en/user_customization-packages.ssi:185
#: en/user_customization-packages.ssi:199
#: en/user_customization-packages.ssi:215
#: en/user_customization-packages.ssi:227
#: en/user_customization-packages.ssi:291
#: en/user_customization-packages.ssi:303
#: en/user_customization-packages.ssi:313
#: en/user_customization-packages.ssi:331 en/user_customization-runtime.ssi:14
#: en/user_customization-runtime.ssi:32 en/user_customization-runtime.ssi:42
#: en/user_customization-runtime.ssi:50 en/user_customization-runtime.ssi:58
#: en/user_customization-runtime.ssi:66 en/user_customization-runtime.ssi:86
#: en/user_customization-runtime.ssi:94 en/user_customization-runtime.ssi:103
#: en/user_examples.ssi:14 en/user_examples.ssi:30 en/user_examples.ssi:40
#: en/user_examples.ssi:54 en/user_examples.ssi:64 en/user_examples.ssi:80
#: en/user_examples.ssi:90 en/user_examples.ssi:107 en/user_examples.ssi:117
#: en/user_examples.ssi:131 en/user_examples.ssi:139 en/user_examples.ssi:154
#: en/user_examples.ssi:162 en/user_examples.ssi:188 en/user_examples.ssi:209
#: en/user_examples.ssi:217 en/user_examples.ssi:235 en/user_examples.ssi:243
#: en/user_examples.ssi:256 en/user_examples.ssi:271
#: en/user_installation.ssi:38 en/user_installation.ssi:46
#: en/user_installation.ssi:56 en/user_installation.ssi:64
#: en/user_installation.ssi:74 en/user_installation.ssi:82
#: en/user_installation.ssi:90 en/user_installation.ssi:114
#: en/user_installation.ssi:129 en/user_installation.ssi:146
#: en/user_managing_a_configuration.ssi:24
#: en/user_managing_a_configuration.ssi:35
#: en/user_managing_a_configuration.ssi:47
#: en/user_managing_a_configuration.ssi:56 en/user_overview.ssi:36
#: en/user_overview.ssi:80 en/user_overview.ssi:88
msgid "code{"
msgstr "code{"

#. type: Plain text
#: en/about_manual.ssi:88 en/about_manual.ssi:96 en/about_manual.ssi:104
#: en/about_manual.ssi:112 en/about_manual.ssi:129 en/about_manual.ssi:142
#: en/about_manual.ssi:150 en/about_manual.ssi:158 en/about_manual.ssi:166
#: en/about_manual.ssi:174 en/project_bugs.ssi:62
#: en/project_coding-style.ssi:34 en/project_coding-style.ssi:45
#: en/project_coding-style.ssi:57 en/project_coding-style.ssi:68
#: en/project_coding-style.ssi:96 en/project_coding-style.ssi:104
#: en/project_coding-style.ssi:117 en/project_coding-style.ssi:128
#: en/project_procedures.ssi:16 en/project_procedures.ssi:54
#: en/project_procedures.ssi:131 en/user_basics.ssi:34 en/user_basics.ssi:44
#: en/user_basics.ssi:58 en/user_basics.ssi:70 en/user_basics.ssi:80
#: en/user_basics.ssi:92 en/user_basics.ssi:104 en/user_basics.ssi:112
#: en/user_basics.ssi:120 en/user_basics.ssi:130 en/user_basics.ssi:146
#: en/user_basics.ssi:156 en/user_basics.ssi:164 en/user_basics.ssi:172
#: en/user_basics.ssi:186 en/user_basics.ssi:194 en/user_basics.ssi:204
#: en/user_basics.ssi:245 en/user_basics.ssi:257 en/user_basics.ssi:273
#: en/user_basics.ssi:281 en/user_basics.ssi:308 en/user_basics.ssi:347
#: en/user_customization-contents.ssi:31 en/user_customization-contents.ssi:46
#: en/user_customization-contents.ssi:58 en/user_customization-contents.ssi:70
#: en/user_customization-installer.ssi:36
#: en/user_customization-installer.ssi:46
#: en/user_customization-packages.ssi:18 en/user_customization-packages.ssi:26
#: en/user_customization-packages.ssi:45 en/user_customization-packages.ssi:58
#: en/user_customization-packages.ssi:70 en/user_customization-packages.ssi:84
#: en/user_customization-packages.ssi:98
#: en/user_customization-packages.ssi:116
#: en/user_customization-packages.ssi:147
#: en/user_customization-packages.ssi:161
#: en/user_customization-packages.ssi:171
#: en/user_customization-packages.ssi:181
#: en/user_customization-packages.ssi:191
#: en/user_customization-packages.ssi:203
#: en/user_customization-packages.ssi:219
#: en/user_customization-packages.ssi:231
#: en/user_customization-packages.ssi:295
#: en/user_customization-packages.ssi:307
#: en/user_customization-packages.ssi:317
#: en/user_customization-packages.ssi:344 en/user_customization-runtime.ssi:18
#: en/user_customization-runtime.ssi:36 en/user_customization-runtime.ssi:46
#: en/user_customization-runtime.ssi:54 en/user_customization-runtime.ssi:62
#: en/user_customization-runtime.ssi:70 en/user_customization-runtime.ssi:90
#: en/user_customization-runtime.ssi:99 en/user_customization-runtime.ssi:108
#: en/user_examples.ssi:20 en/user_examples.ssi:34 en/user_examples.ssi:44
#: en/user_examples.ssi:58 en/user_examples.ssi:68 en/user_examples.ssi:86
#: en/user_examples.ssi:101 en/user_examples.ssi:111 en/user_examples.ssi:123
#: en/user_examples.ssi:135 en/user_examples.ssi:150 en/user_examples.ssi:158
#: en/user_examples.ssi:166 en/user_examples.ssi:197 en/user_examples.ssi:213
#: en/user_examples.ssi:221 en/user_examples.ssi:239 en/user_examples.ssi:252
#: en/user_examples.ssi:267 en/user_examples.ssi:285
#: en/user_installation.ssi:42 en/user_installation.ssi:50
#: en/user_installation.ssi:60 en/user_installation.ssi:70
#: en/user_installation.ssi:78 en/user_installation.ssi:86
#: en/user_installation.ssi:94 en/user_installation.ssi:119
#: en/user_installation.ssi:136 en/user_installation.ssi:150
#: en/user_managing_a_configuration.ssi:31
#: en/user_managing_a_configuration.ssi:43
#: en/user_managing_a_configuration.ssi:52
#: en/user_managing_a_configuration.ssi:60 en/user_overview.ssi:74
#: en/user_overview.ssi:84 en/user_overview.ssi:92
msgid "}code"
msgstr "}code"

#. type: Plain text
#: en/user_basics.ssi:42 en/user_basics.ssi:118 en/user_basics.ssi:202
#: en/user_examples.ssi:109 en/user_examples.ssi:156
msgid "# lb build"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:4
msgid "1~examples Examples"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:6
msgid ""
"This chapter covers example builds for specific use cases with Debian Live. "
"If you are new to building your own Debian Live images, we recommend you "
"first look at the three tutorials in sequence, as each one teaches new "
"techniques that will help you use and understand the remaining examples."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:8
msgid "2~using-the-examples Using the examples"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:10
msgid ""
"To use these examples you need a system to build them on that meets the "
"requirements listed in {Requirements}#requirements and has live-build "
"installed as described in {Installing live-build}#installing-live-build."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:12
msgid ""
"Note that, for the sake of brevity, in these examples we do not specify a "
"local mirror to use for the build. You can speed up downloads considerably "
"if you use a local mirror. You may specify the options when you use #{lb "
"config}#, as described in {Distribution mirrors used at build time}"
"#distribution-mirrors-build-time, or for more convenience, set the default "
"for your build system in #{/etc/live/build.conf}#. Simply create this file "
"and in it, set the corresponding #{LB_MIRROR_*}# variables to your preferred "
"mirror. For example:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:18
msgid ""
"LB_MIRROR_BOOTSTRAP=\"http://mirror/debian\" LB_MIRROR_CHROOT=\"http://"
"mirror/debian\" LB_MIRROR_CHROOT_SECURITY=\"http://mirror/debian-security\""
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:22
msgid "2~tutorial-1 Tutorial 1: A standard image"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:24
#, no-wrap
msgid "*{Use case:}* Create a simple first image, learning the basics of live-build.\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:26
msgid ""
"In this tutorial, we will build a default ISO hybrid Debian Live image "
"containing only base packages (no Xorg) and some Debian Live support "
"packages, as a first exercise in using live-build."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:28
msgid "You can't get much simpler than this:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:32
msgid "$ mkdir tutorial1 ; cd tutorial1 ; lb config"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:36
msgid ""
"Examine the contents of the #{config/}# directory if you wish. You will see "
"stored here a skeletal configuration, ready to customize or, in this case, "
"use immediately to build a default image."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:38
msgid ""
"Now, as superuser, build the image, saving a log as you build with #{tee}#."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:42 en/user_examples.ssi:66 en/user_examples.ssi:219
msgid "# lb build 2>&1 | tee binary.log"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:46
msgid ""
"Assuming all goes well, after a while, the current directory will contain #"
"{binary-hybrid.iso}#. This ISO hybrid image can be booted directly in a "
"virtual machine as described in {Testing an ISO image with Qemu}#testing-iso-"
"with-qemu and {Testing an ISO image with virtualbox-ose}#testing-iso-with-"
"virtualbox, or else imaged onto optical media or a USB flash device as "
"described in {Burning an ISO image to a physical medium}#burning-iso-image "
"and {Copying USB/HDD image to a USB stick}#copying-usb-hdd-image, "
"respectively."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:48
msgid "2~tutorial-2 Tutorial 2: A web browser utility"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:50
#, no-wrap
msgid "*{Use case:}* Create a web browser utility image, learning how to apply customizations.\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:52
msgid ""
"In this tutorial, we will create an image suitable for use as a web browser "
"utility, serving as an introduction to customizing Debian Live images."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:56
msgid "mkdir tutorial2 ; cd tutorial2 ; lb config -p lxde --packages iceweasel"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:60
msgid ""
"Our choice of LXDE for this example reflects our desire to provide a minimal "
"desktop environment, since the focus of the image is the single use we have "
"in mind, the web browser. We could go even further and provide a default "
"configuration for the web browser in #{config/chroot_local-includes/etc/"
"iceweasel/profile/}#, or additional support packages for viewing various "
"kinds of web content, but we leave this as an exercise for the reader."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:62
msgid ""
"Build the image, again as superuser, keeping a log as in {Tutorial 1}"
"#tutorial-1:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:70
msgid "Again, verify the image is OK and test, as in {Tutorial 1}#tutorial-1."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:72
msgid "2~tutorial-3 Tutorial 3: A personalized image"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:74
#, no-wrap
msgid "*{Use case:}* Create a project to build a personalized image, containing your favourite software to take with you on a USB stick wherever you go, and evolving in successive revisions as your needs and preferences change.\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:76
msgid ""
"Since we will be changing our personalized image over a number of revisions, "
"and we want to track those changes, trying things experimentally and "
"possibly reverting them if things don't work out, we will keep our "
"configuration in the popular #{git}# version control system. We will also "
"use the best practice of autoconfiguration via #{auto}# scripts as described "
"in {Managing a configuration}#managing-a-configuration."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:78
msgid "3~ First revision"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:84
msgid ""
"$ mkdir -p tutorial3/auto $ cp /usr/share/live/build/examples/auto/* "
"tutorial3/auto/ $ cd tutorial3"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:88
msgid "Edit #{auto/config}# to read as follows:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:92 en/user_examples.ssi:141 en/user_examples.ssi:190
msgid "#!/bin/sh"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:99
#, no-wrap
msgid ""
"lb config noauto \\\n"
"    --architecture i386 \\\n"
"    --linux-flavours 686 \\\n"
"    --packages-lists lxde \\\n"
"    --packages \"iceweasel xchat\" \\\n"
"    \"${@}\"\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:103
msgid ""
"First, #{--architecture i386}# ensures that on our #{amd64}# build system, "
"we build a 32-bit version suitable for use on most machines. Second, we use #"
"{--linux-flavours 686}# because we don't anticipate using this image on much "
"older systems. Third, we've chosen the #{lxde}# package list to give us a "
"minimal desktop. And finally, we have added two initial favourite packages: #"
"{iceweasel}# and #{xchat}#."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:105
msgid "Now, build the image:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:113
msgid ""
"Note that unlike in the first two tutorials, we no longer have to type #"
"{2>&1 | tee binary.log}# as that is now included in #{auto/build}#."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:115
msgid ""
"Once you've tested the image (as in {Tutorial 1}#tutorial-1) and are "
"satisfied it works, it's time to initialize our #{git}# repository, adding "
"only the auto scripts we just created, and then make the first commit:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:121
msgid "$ git init $ git add auto $ git commit -a -m \"Initial import.\""
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:125
msgid "3~ Second revision"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:127
msgid ""
"In this revision, we're going to clean up from the first build, add the #"
"{vlc}# package to our configuration, rebuild, test and commit."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:129
msgid ""
"The #{lb clean}# command will clean up all generated files from the previous "
"build except for the cache, which saves having to re-download packages. This "
"ensures that the subsequent #{lb build}# will re-run all stages to "
"regenerate the files from our new configuration."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:133
msgid "# lb clean"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:137
msgid "Now edit #{auto/config}# to add the #{vlc}# package:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:148
#, no-wrap
msgid ""
"lb config noauto \\\n"
"    --architecture i386 \\\n"
"    --linux-flavours 686 \\\n"
"    --packages-lists lxde \\\n"
"    --packages \"iceweasel xchat vlc\" \\\n"
"    \"${@}\"\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:152
msgid "Build again:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:160
msgid "Test, and when you're satisfied, commit the next revision:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:164
msgid "$ git commit -a -m \"Adding vlc media player.\""
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:168
msgid ""
"Of course, more complicated changes to the configuration are possible, "
"perhaps adding files in subdirectories of #{config/}#. When you commit new "
"revisions, just take care not to hand edit or commit the top-level files in #"
"{config}# containing #{LB_*}# variables, as these are build products, too, "
"and are always cleaned up by #{lb clean}# and re-created with #{lb config}# "
"via their respective #{auto}# scripts."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:170
msgid ""
"We've come to the end of our tutorial series. While many more kinds of "
"customization are possible, even just using the few features explored in "
"these simple examples, an almost infinite variety of different images can be "
"created. The remaining examples in this section cover several other use "
"cases drawn from the collected experiences of users of Debian Live."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:172
msgid "2~ A VNC Kiosk Client"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:174
#, no-wrap
msgid "*{Use case:}* Create an image with live-build to boot directly to a VNC server.\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:176
msgid "_* Make a build directory: #{$ mkdir vncBuild}#"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:178
msgid "_* Move to the build directory: #{$ cd vncBuild}#"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:180
msgid ""
"Example to config the build directory to include gdm metacity "
"xtightvncviewer: #{$ lb config --packages \"gdm3 metacity xtightvncviewer\"}#"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:182
msgid ""
"Create a folder /etc/skel folder for a custom .xsession for the default "
"user: #{$ mkdir -p config/chroot_local-includes/etc/skel}#"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:184
msgid ""
"Create the .xsession for the default user: #{$ touch config/chroot_local-"
"includes/etc/skel/.xsession}#"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:186
msgid ""
"Edit the .xsession file to launch metacity and start xvncviewer with "
"something similar to the below:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:193
msgid "/usr/bin/metacity & /usr/bin/vncviewer xxx.xxx.xxx.xxx:PORT"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:195
msgid "exit"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:199
msgid "_* Build the image: #{# lb build}#"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:201
msgid "_* Enjoy."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:203
msgid "2~ A base image for a 128M USB key"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:205
#, no-wrap
msgid "*{Use case:}* Create a standard image with some components removed in order to fit on a 128M USB key with space left over to use as you see fit.\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:207
msgid ""
"When optimizing an image to fit a certain media size, you need to understand "
"the tradeoffs you are making between size and functionality. In this "
"example, we trim only so much as to make room for additional material within "
"a 128M media size, but without doing anything to destroy integrity of the "
"packages contained within, such as the purging of locale data via the #"
"{localepurge}# package, or other such \"intrusive\" optimizations. Of "
"particular note, you should not use #{--bootstrap-flavour minimal}# unless "
"you really know what you're doing, as omitting priority #{important}# "
"packages will most likely produce a broken live system."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:211
msgid ""
"$ lb config -k 486 -p minimal --binary-indices false --memtest none --apt-"
"recommends false --includes none"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:215
msgid "Now, build the image in the usual way:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:223
msgid ""
"On the author's system at time of writing, the above configuration produced "
"a 78Mbyte image. This compares favourably with the 166Mbyte image produced "
"by the default configuration in {Tutorial 1}#tutorial-1."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:225
msgid ""
"The biggest space-saver here, compared to building a standard image on an #"
"{i386}# architecture system, is to select only the #{486}# kernel flavour "
"instead of the default #{-k \"486 686\"}#. Leaving off APT's indices with #"
"{--binary-indices false}# also saves a fair amount of space, the tradeoff "
"being that you need to #{apt-get update}# before using apt in the live "
"system. Choosing the #{minimal}# package list leaves out the large #{locales}"
"# package and associated utilities. Dropping recommended packages with #{--"
"apt-recommends false}# saves some additional space, at the expense of "
"omitting some packages you might otherwise expect to be there, such as #"
"{firmware-linux-free}# which may be needed to support certain hardware. The "
"remaining options shave off additional small amounts of space. It's up to "
"you to decide if the functionality that is sacrificed with each optimization "
"is worth the loss in functionality."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:227
msgid "2~ A localized KDE desktop and installer"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:229
#, no-wrap
msgid "*{Use case:}* Create a KDE desktop image, localized for Brazilian Portuguese and including an installer.\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:231
msgid ""
"We want to make an iso-hybrid image for i386 architecture using our "
"preferred desktop, in this case KDE, containing all of the same packages "
"that would be installed by the standard Debian installer for KDE."
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:233
msgid ""
"Our initial problem is the discovery of the names of the appropriate tasks. "
"Currently, live-build cannot help with this. While we might get lucky and "
"find this by trial-and-error, there is a tool, #{grep-dctrl}#, which can be "
"used to dig it out of the task descriptions in tasksel-data, so to prepare, "
"make sure you have both of those things:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:237
msgid "# apt-get install dctrl-tools tasksel-data"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:241
msgid "Now we can search for the appropriate tasks, first with:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:250
#, no-wrap
msgid ""
"$ grep-dctrl -FTest-lang pt_BR /usr/share/tasksel/debian-tasks.desc -sTask,Description\n"
"Task: brazilian-portuguese\n"
"Description: Brazilian Portuguese environment\n"
" This task installs programs, data files, and\n"
" documentation that make it easier for Brazilian Portuguese speakers\n"
" to use Debian.\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:254
msgid ""
"By this command, we discover the task is called, plainly enough, brazilian-"
"portuguese. Now to find the related tasks:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:261
#, no-wrap
msgid ""
"$ grep-dctrl -FEnhances brazilian-portuguese /usr/share/tasksel/debian-tasks.desc -sTask,Description\n"
"Task: brazilian-portuguese-desktop\n"
"Description: Brazilian Portuguese desktop\n"
" This task localises the desktop in Brasilian Portuguese.\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:265
#, no-wrap
msgid ""
"Task: brazilian-portuguese-kde-desktop\n"
"Description: Brazilian Portuguese KDE desktop\n"
" This task localises the KDE desktop in Brazilian Portuguese.\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:269
msgid ""
"We will use the experimental #{--language}# option, as live-build happens to "
"include #{syslinux}# templates for pt_BR (see {Desktop and language tasks}"
"#desktop-and-language-tasks for details). And at boot time we will generate "
"the pt_BR.UTF-8 locale and select the pt-latin1 keyboard layout. Now let's "
"put the pieces together:"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:283
#, no-wrap
msgid ""
"$ mkdir live-pt_BR-kde\n"
"$ cd live-pt_BR-kde\n"
"$ lb config \\\n"
"     -a i386 \\\n"
"     -k 486 \\\n"
"     -p kde-desktop \\\n"
"     --language pt_BR \\\n"
"     --tasks \"brazilian-portuguese brazilian-portuguese-desktop brazilian-portuguese-kde-desktop\" \\\n"
"     --bootappend-live \"locales=pt_BR.UTF-8 keyboard-layouts=pt-latin1\" \\\n"
"     --debian-installer live \\\n"
"     --packages debian-installer-launcher\n"
msgstr ""

#. type: Plain text
#: en/user_examples.ssi:287
msgid ""
"Note that we have included the #{debian-installer-launcher}# package to "
"launch the installer from the live desktop, and have also specified the 486 "
"flavour kernel, as it is currently necessary to make the installer and live "
"system kernels match for the launcher to work properly."
msgstr ""
