# Romanian translations for live-manual package
# Copyright (C) 2010 Free Software Foundation, Inc.
# This file is distributed under the same license as the live-manual package.
# Automatically generated, 2010.
#
msgid ""
msgstr ""
"Project-Id-Version: live-manual 2.0.0\n"
"POT-Creation-Date: 2011-01-03 16:01+0100\n"
"PO-Revision-Date: 2010-10-22 08:58-0200\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ro\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=n==1 ? 0 : (n==0 || (n%100 > 0 && n%100 < "
"20)) ? 1 : 2;\n"

#. type: Plain text
#: en/about_manual.ssi:84 en/about_manual.ssi:92 en/about_manual.ssi:100
#: en/about_manual.ssi:108 en/about_manual.ssi:120 en/about_manual.ssi:133
#: en/about_manual.ssi:146 en/about_manual.ssi:154 en/about_manual.ssi:162
#: en/about_manual.ssi:170 en/project_bugs.ssi:60
#: en/project_coding-style.ssi:28 en/project_coding-style.ssi:38
#: en/project_coding-style.ssi:51 en/project_coding-style.ssi:61
#: en/project_coding-style.ssi:92 en/project_coding-style.ssi:100
#: en/project_coding-style.ssi:110 en/project_coding-style.ssi:121
#: en/project_procedures.ssi:12 en/project_procedures.ssi:46
#: en/project_procedures.ssi:58 en/user_basics.ssi:30 en/user_basics.ssi:40
#: en/user_basics.ssi:52 en/user_basics.ssi:64 en/user_basics.ssi:76
#: en/user_basics.ssi:86 en/user_basics.ssi:100 en/user_basics.ssi:108
#: en/user_basics.ssi:116 en/user_basics.ssi:126 en/user_basics.ssi:140
#: en/user_basics.ssi:152 en/user_basics.ssi:160 en/user_basics.ssi:168
#: en/user_basics.ssi:182 en/user_basics.ssi:190 en/user_basics.ssi:200
#: en/user_basics.ssi:218 en/user_basics.ssi:246 en/user_basics.ssi:262
#: en/user_basics.ssi:270 en/user_basics.ssi:290 en/user_basics.ssi:315
#: en/user_customization-contents.ssi:26 en/user_customization-contents.ssi:35
#: en/user_customization-contents.ssi:54 en/user_customization-contents.ssi:66
#: en/user_customization-installer.ssi:32
#: en/user_customization-installer.ssi:43
#: en/user_customization-packages.ssi:14 en/user_customization-packages.ssi:22
#: en/user_customization-packages.ssi:40 en/user_customization-packages.ssi:53
#: en/user_customization-packages.ssi:66 en/user_customization-packages.ssi:80
#: en/user_customization-packages.ssi:94
#: en/user_customization-packages.ssi:112
#: en/user_customization-packages.ssi:142
#: en/user_customization-packages.ssi:155
#: en/user_customization-packages.ssi:165
#: en/user_customization-packages.ssi:175
#: en/user_customization-packages.ssi:185
#: en/user_customization-packages.ssi:199
#: en/user_customization-packages.ssi:215
#: en/user_customization-packages.ssi:227
#: en/user_customization-packages.ssi:291
#: en/user_customization-packages.ssi:303
#: en/user_customization-packages.ssi:313
#: en/user_customization-packages.ssi:331
#: en/user_customization-packages.ssi:348 en/user_customization-runtime.ssi:14
#: en/user_customization-runtime.ssi:32 en/user_customization-runtime.ssi:42
#: en/user_customization-runtime.ssi:51 en/user_customization-runtime.ssi:59
#: en/user_customization-runtime.ssi:68 en/user_customization-runtime.ssi:89
#: en/user_customization-runtime.ssi:97 en/user_customization-runtime.ssi:106
#: en/user_examples.ssi:14 en/user_examples.ssi:30 en/user_examples.ssi:40
#: en/user_examples.ssi:54 en/user_examples.ssi:64 en/user_examples.ssi:80
#: en/user_examples.ssi:90 en/user_examples.ssi:107 en/user_examples.ssi:117
#: en/user_examples.ssi:131 en/user_examples.ssi:139 en/user_examples.ssi:154
#: en/user_examples.ssi:162 en/user_examples.ssi:178 en/user_examples.ssi:190
#: en/user_examples.ssi:206 en/user_examples.ssi:220 en/user_examples.ssi:229
#: en/user_examples.ssi:247 en/user_examples.ssi:255 en/user_examples.ssi:268
#: en/user_examples.ssi:283 en/user_installation.ssi:38
#: en/user_installation.ssi:46 en/user_installation.ssi:56
#: en/user_installation.ssi:64 en/user_installation.ssi:74
#: en/user_installation.ssi:82 en/user_installation.ssi:90
#: en/user_installation.ssi:114 en/user_installation.ssi:129
#: en/user_installation.ssi:146 en/user_managing_a_configuration.ssi:24
#: en/user_managing_a_configuration.ssi:35
#: en/user_managing_a_configuration.ssi:47
#: en/user_managing_a_configuration.ssi:56 en/user_overview.ssi:36
#: en/user_overview.ssi:80 en/user_overview.ssi:88
msgid "code{"
msgstr "code{"

#. type: Plain text
#: en/about_manual.ssi:88 en/about_manual.ssi:96 en/about_manual.ssi:104
#: en/about_manual.ssi:112 en/about_manual.ssi:129 en/about_manual.ssi:142
#: en/about_manual.ssi:150 en/about_manual.ssi:158 en/about_manual.ssi:166
#: en/about_manual.ssi:174 en/project_bugs.ssi:64
#: en/project_coding-style.ssi:34 en/project_coding-style.ssi:45
#: en/project_coding-style.ssi:57 en/project_coding-style.ssi:68
#: en/project_coding-style.ssi:96 en/project_coding-style.ssi:104
#: en/project_coding-style.ssi:117 en/project_coding-style.ssi:128
#: en/project_procedures.ssi:16 en/project_procedures.ssi:54
#: en/project_procedures.ssi:131 en/user_basics.ssi:34 en/user_basics.ssi:44
#: en/user_basics.ssi:58 en/user_basics.ssi:70 en/user_basics.ssi:80
#: en/user_basics.ssi:92 en/user_basics.ssi:104 en/user_basics.ssi:112
#: en/user_basics.ssi:120 en/user_basics.ssi:130 en/user_basics.ssi:146
#: en/user_basics.ssi:156 en/user_basics.ssi:164 en/user_basics.ssi:172
#: en/user_basics.ssi:186 en/user_basics.ssi:194 en/user_basics.ssi:204
#: en/user_basics.ssi:238 en/user_basics.ssi:250 en/user_basics.ssi:266
#: en/user_basics.ssi:274 en/user_basics.ssi:301 en/user_basics.ssi:340
#: en/user_customization-contents.ssi:31 en/user_customization-contents.ssi:46
#: en/user_customization-contents.ssi:58 en/user_customization-contents.ssi:70
#: en/user_customization-installer.ssi:37
#: en/user_customization-installer.ssi:48
#: en/user_customization-packages.ssi:18 en/user_customization-packages.ssi:26
#: en/user_customization-packages.ssi:45 en/user_customization-packages.ssi:58
#: en/user_customization-packages.ssi:70 en/user_customization-packages.ssi:84
#: en/user_customization-packages.ssi:98
#: en/user_customization-packages.ssi:116
#: en/user_customization-packages.ssi:147
#: en/user_customization-packages.ssi:161
#: en/user_customization-packages.ssi:171
#: en/user_customization-packages.ssi:181
#: en/user_customization-packages.ssi:191
#: en/user_customization-packages.ssi:203
#: en/user_customization-packages.ssi:219
#: en/user_customization-packages.ssi:231
#: en/user_customization-packages.ssi:295
#: en/user_customization-packages.ssi:307
#: en/user_customization-packages.ssi:317
#: en/user_customization-packages.ssi:344
#: en/user_customization-packages.ssi:354 en/user_customization-runtime.ssi:18
#: en/user_customization-runtime.ssi:36 en/user_customization-runtime.ssi:47
#: en/user_customization-runtime.ssi:55 en/user_customization-runtime.ssi:64
#: en/user_customization-runtime.ssi:73 en/user_customization-runtime.ssi:93
#: en/user_customization-runtime.ssi:102 en/user_customization-runtime.ssi:111
#: en/user_examples.ssi:20 en/user_examples.ssi:34 en/user_examples.ssi:44
#: en/user_examples.ssi:58 en/user_examples.ssi:68 en/user_examples.ssi:86
#: en/user_examples.ssi:101 en/user_examples.ssi:111 en/user_examples.ssi:123
#: en/user_examples.ssi:135 en/user_examples.ssi:150 en/user_examples.ssi:158
#: en/user_examples.ssi:166 en/user_examples.ssi:186 en/user_examples.ssi:202
#: en/user_examples.ssi:210 en/user_examples.ssi:225 en/user_examples.ssi:233
#: en/user_examples.ssi:251 en/user_examples.ssi:264 en/user_examples.ssi:279
#: en/user_examples.ssi:297 en/user_installation.ssi:42
#: en/user_installation.ssi:50 en/user_installation.ssi:60
#: en/user_installation.ssi:70 en/user_installation.ssi:78
#: en/user_installation.ssi:86 en/user_installation.ssi:94
#: en/user_installation.ssi:119 en/user_installation.ssi:136
#: en/user_installation.ssi:150 en/user_managing_a_configuration.ssi:31
#: en/user_managing_a_configuration.ssi:43
#: en/user_managing_a_configuration.ssi:52
#: en/user_managing_a_configuration.ssi:60 en/user_overview.ssi:74
#: en/user_overview.ssi:84 en/user_overview.ssi:92
msgid "}code"
msgstr "}code"

#. type: Plain text
#: en/user_customization-packages.ssi:2
msgid ":B~ Customizing package installation"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:4
msgid "1~customizing-package-installation Customizing package installation"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:6
msgid ""
"Perhaps the most basic customization of a Debian live system is the "
"selection of packages to be included in the image. This chapter guides you "
"through the various build-time options to customize live-build's "
"installation of packages. The broadest choices influencing which packages "
"are available to install in the image are the distribution and archive "
"areas. To ensure decent download speeds, you should choose a nearby "
"distribution mirror. You can also add your own repositories for backports, "
"experimental or custom packages, or include packages directly as files. You "
"can define your own lists of packages to include, use live-build's "
"predefined lists, use #{tasksel}# tasks, or a combination of all three. "
"Finally, a number of options give some control over apt, or if you prefer, "
"aptitude, at build time when packages are installed. You may find these "
"handy if you use a proxy, want to disable installation of recommended "
"packages to save space, or need to control which versions of packages are "
"installed via APT pinning, to name a few possibilities."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:8
msgid "2~ Package sources"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:10
msgid "3~ Distribution, archive areas and mode"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:12
msgid ""
"The distribution you choose has the broadest impact on which packages are "
"available to include in your live image. Specify the codename, which "
"defaults to #{squeeze}# for the Squeeze version of live-build. Any current "
"distribution carried in the Debian archive may be specified by its codename "
"here. (See {Terms}#terms for more details.) The #{--distribution}# option "
"not only influences the source of packages within the archive, but also "
"instructs #{live-build}# to behave as needed to build each supported "
"distribution. For example, to build against the *unstable* release, Sid, "
"specify:"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:16
#, no-wrap
msgid " $ lb config --distribution sid\n"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:20
msgid ""
"Within the distribution archive, archive areas are major divisions of the "
"archive. In Debian, these are #{main}#, #{contrib}# and #{non-free}#. Only #"
"{main}# contains software that is official a part of the Debian "
"distribution, hence that is the default. One or more values may be "
"specified, e.g."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:24
#, no-wrap
msgid " $ lb config --archive-areas \"main contrib\"\n"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:28
msgid ""
"Experimental support is available for some Debian derivatives through a #{--"
"mode}# option. By default, this option is set to #{debian}#, even if you are "
"building on a non-Debian system. If you specify #{--mode ubuntu}# or #{--"
"mode emdebian}#, the distribution names and archive areas for the specified "
"derivative are supported instead of the ones for Debian. The mode also "
"modifies live-build behaviour to suit the derivatives."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:30
#, no-wrap
msgid "*Note:* The projects for whom these modes were added are primarily responsible for supporting users of these options. The Debian live project, in turn, provides development support on a best-effort basis only, based on feedback from the derivative projects as we do not develop or support these derivatives ourselves.\n"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:32
msgid "3~ Distribution mirrors"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:34
msgid ""
"The Debian archive is replicated across a large network of mirrors around "
"the world so that people in each region can choose a nearby mirror for best "
"download speed. Each of the #{--mirror-*}# options governs which "
"distribution mirror is used at various stages of the build. Recall from "
"{Stages of the build}#stages-of-the-build that the *bootstrap* stage is when "
"the chroot is initially populated by debootstrap with a minimal system, and "
"the *chroot* stage is when the chroot used to construct the live system's "
"filesystem is built. Thus, the corresponding mirror switches are used for "
"those stages, and later, in the *binary* stage, the #{--mirror-binary}# and #"
"{--mirror-binary-security}# values are used, superceding any mirrors used in "
"an earlier stage."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:36
msgid ""
"3~distribution-mirrors-build-time Distribution mirrors used at build time"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:38
msgid ""
"To set the distribution mirrors used at build time to point at a local "
"mirror, it is sufficient to set #{--mirror-bootstrap}# and #{--mirror-chroot-"
"security}# as follows."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:43
#, no-wrap
msgid ""
" $ lb config --mirror-bootstrap http://localhost/debian/ \\\n"
"             --mirror-chroot-security http://localhost/debian-security/\n"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:47
msgid ""
"The chroot mirror, specified by #{--mirror-chroot}#, defaults to the #{--"
"mirror-bootstrap}# value."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:49
msgid "3~ Distribution mirrors used at run time"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:51
msgid ""
"The #{--mirror-binary*}# options govern the distribution mirrors placed in "
"the binary image. These may be used to install additional packages while "
"running the live system. The defaults employ #{cdn.debian.net}#, a service "
"that chooses a geographically close mirror based on the user's IP number. "
"This is a suitable choice when you cannot predict which mirror will be best "
"for all of your users. Or you may specify your own values as shown in the "
"example below. An image built from this configuration would only be suitable "
"for users on a network where \"#{mirror}#\" is reachable."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:56
#, no-wrap
msgid ""
" $ lb config --mirror-binary http://mirror/debian/ \\\n"
"             --mirror-binary-security http://mirror/debian-security/\n"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:60
msgid "3~additional-repositories Additional repositories"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:62
msgid ""
"You may add more repositories, broadening your package choices beyond what "
"is available in your target distribution. These may be, for example, for "
"backports, experimental or custom packages. To configure additional "
"repositories, create #{config/chroot_sources/your-repository.chroot}#, and/"
"or #{config/chroot_sources/your-repository.binary}# files. As with the #{--"
"mirror-*}# options, these govern the repositories used in the *chroot* stage "
"when building the image, and in the *binary* stage, i.e. for use when "
"running the live system."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:64
msgid ""
"For example, #{config/chroot_sources/live.chroot}# allows you to install "
"packages from the debian live snapshot repository at live system build time."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:68
#, no-wrap
msgid " deb http://live.debian.net/ sid-snapshots main contrib non-free\n"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:72
msgid ""
"If you add the same line to #{config/chroot_sources/live.binary}#, the "
"repository will be added to your live system's #{/etc/apt/sources.list.d/}# "
"directory."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:74
msgid "If such files exist, they will be picked up automatically."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:76
msgid ""
"You should also put the GPG key used to sign the repository into #{config/"
"chroot_sources/your-repository.{binary,chroot}.gpg}# files."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:78
msgid ""
"Note: some preconfigured package repositories are available for easy "
"selection through the #{--repository}# option, e.g. for enabling live "
"snapshots, a simple command is enough to enable it:"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:82 en/user_installation.ssi:148
#, no-wrap
msgid " $ lb config --repository live.debian.net\n"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:86
msgid "2~choosing-packages-to-install Choosing packages to install"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:88
msgid ""
"There are a number of ways to choose which packages live-build will install "
"in your image, covering a variety of different needs. You can simply name "
"individual packages to install, either with the #{--packages}# option for a "
"few packages, or in a package list of your own for larger numbers. You can "
"also choose larger predefined lists of packages, or use APT tasks. And "
"finally, you may place package files in your #{config/}# tree, which is well "
"suited to testing of new or experimental packages before they are available "
"from a repository."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:90
msgid "3~ Choosing a few packages"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:92
msgid ""
"When the number of packages added is small, simply specify #{--packages}#. "
"For example:"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:96
#, no-wrap
msgid " $ lb config --packages \"package1 package2 package3\"\n"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:100
msgid ""
"The behaviour of live-build when specifying a package that does not exist is "
"determined by your choice of APT utility. See {Choosing apt or aptitude}"
"#choosing-apt-or-aptitude for more details."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:102
msgid ""
"If you need to specify a large number of packages to be installed or you "
"need flexibility regarding which packages to install, use package lists as "
"discussed in the following section, {Package lists}#package-lists."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:104
msgid "3~package-lists Package lists"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:106
msgid ""
"Package lists are a powerful way of expressing which packages should be "
"installed. The list syntax supports included files and conditional sections "
"which makes it easy to build lists from other lists and adapt them for use "
"in multiple configurations. You can use predefined package lists, providing "
"in a modular fashion package selections from each of the major desktop "
"environments and some special purpose lists, as well as standard lists the "
"others are based upon. You can also provide your own package lists, or use a "
"combination of both."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:108
msgid "3~ Predefined package lists"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:110
msgid ""
"The simplest way to use lists is to specify one or more predefined lists "
"with the #{--packages-lists}# option. For example:"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:114
#, no-wrap
msgid " $ lb config --packages-lists \"gnome-core rescue\"\n"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:118
msgid ""
"In addition to these lists, live-build supports four virtual package lists: #"
"{gnome-desktop}#, #{kde-desktop}#, #{lxde-desktop}# and #{xfce-desktop}#, "
"each of which provide a more extensive selection of packages that "
"corresponds with Debian Installer defaults for these desktop environments. "
"See {Desktop and language tasks}#desktop-and-language-tasks for more details."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:120
msgid ""
"Note: The prebuilt GNOME, KDE, LXDE and XFCE images available for download "
"at http://live.debian.net are built using the corresponding virtual #{*-"
"desktop}# lists."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:122
msgid ""
"The default location for the list files on your system is #{/usr/share/live/"
"build/lists/}#. To determine the packages in a given list, read the "
"corresponding file, paying attention to included files and conditionals as "
"described in the following sections."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:124
msgid "3~ Local package lists"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:126
msgid ""
"You may supplement or replace entirely the supplied lists using local "
"package lists stored in #{config/chroot_local-packageslists/}#."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:128
msgid ""
"Package lists that exist in this directory need to have a #{.list}# suffix "
"in order to be processed. Local package lists always override package lists "
"distributed with live-build. This can cause undesired effects, we therefore "
"recommend to use unique names for local package lists."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:130
msgid "3~ Local binary package lists"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:132
msgid ""
"In case you want to include some required .deb packages to live media's #"
"{pool/}# (without installing them onto the live image) you may need to use "
"lists using binary local package lists stored in #{config/binary_local-"
"packageslists/}#. Such media can be used as a customized Debian install "
"image for offline installations."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:134
msgid ""
"Package lists that exist in this directory need to have a #{.list}# suffix "
"in order to be processed."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:136
msgid "3~ Extending a provided package list using includes"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:138
msgid ""
"The package lists that are included with live-build make extensive use of "
"includes. Refer to these in the #{/usr/share/live/build/lists/}# directory, "
"as they serve as good examples of how to write your own lists."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:140
msgid ""
"For example, to make a list that includes the predefined #{gnome}# list plus "
"iceweasel, create #{config/chroot_local-packageslists/mygnome.list}# with "
"the following contents:"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:145
#, no-wrap
msgid ""
" #include <gnome>\n"
" iceweasel\n"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:149
msgid "3~ Using conditionals inside package lists"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:151
msgid ""
"Any of the live-build configuration variables stored in #{config/*}# (minus "
"the #{LB_}# prefix) may be used in conditional statements in package lists. "
"Generally, this means any #{lb config}# option uppercased and with dashes "
"changed to underscores. But in practice, it is only the ones that influence "
"package selection that make sense, such as #{DISTRIBUTION}#, #{ARCHITECTURE}"
"# or #{ARCHIVE_AREAS}#."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:153
msgid ""
"For example, to install #{ia32-libs}# if the #{--architecture amd64}# is "
"specified:"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:159
#, no-wrap
msgid ""
" #if ARCHITECTURE amd64\n"
" ia32-libs\n"
" #endif\n"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:163
msgid ""
"You may test for any one of a number of values, e.g. to install #{memtest86+}"
"# if either #{--architecture i386}# or #{--architecture amd64}# is specified:"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:169
#, no-wrap
msgid ""
" #if ARCHITECTURE i386 amd64\n"
" memtest86+\n"
" #endif\n"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:173
msgid ""
"You may also test against variables that may contain more than one value, e."
"g. to install #{vrms}# if either #{contrib}# or #{non-free}# is specified "
"via #{--archive-areas}#:"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:179
#, no-wrap
msgid ""
" #if ARCHIVE_AREAS contrib non-free\n"
" vrms\n"
" #endif\n"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:183
msgid "A conditional may surround an #{#include}# directive:"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:189
#, no-wrap
msgid ""
" #if ARCHITECTURE amd64\n"
" #include <gnome-full>\n"
" #endif\n"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:193
msgid "The nesting of conditionals is not supported."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:195
msgid "3~ Tasks"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:197
msgid ""
"The Debian Installer offers the user choices of a number of preselected "
"lists of packages, each one focused on a particular kind of system, or task "
"a system may be used for, such as \"Graphical desktop environment\", \"Mail "
"server\" or \"Laptop\". These lists are called \"tasks\" and are supported "
"by APT through the \"Task:\" field. You can specify one or more tasks in "
"live-build via the #{--tasks}# option, as in the example below."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:201
#, no-wrap
msgid " $ lb config --tasks \"mail-server file-server\"\n"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:205
msgid ""
"The primary tasks available in the Debian Installer can be listed with #"
"{tasksel --list-tasks}# in the live system. The contents of any task, "
"including ones not included in this list, may be examined with #{tasksel --"
"task-packages}#."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:207
msgid "3~desktop-and-language-tasks Desktop and language tasks"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:209
msgid ""
"Desktop and language tasks are special cases. In the Debian Installer, if "
"the medium was prepared for a particular desktop environment flavour, the "
"corresponding task will be automatically installed. Thus, there are #{gnome-"
"desktop}#, #{kde-desktop}#, #{lxde-desktop}# and #{xfce-desktop}# tasks, "
"none of which are offered in #{tasksel}#'s menu. Likewise, there are no menu "
"entries for tasks for languages, but the user's language choice during the "
"install influences the selection of corresponding language tasks."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:211
msgid ""
"In live-build, therefore, these special cases are also given special "
"consideration, but with three notable differences at the time of writing."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:213
msgid ""
"First, there is no provision made yet automatically for language tasks, "
"although a subset of those packages are included if you specify #{lb config "
"--language}#. If you need those tasks, which include such things as language-"
"specific fonts and input-method packages, you need to specify them in your "
"configuration. For example:"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:217
#, no-wrap
msgid " $ lb config --tasks \"japanese japanese-desktop japanese-gnome-desktop\"\n"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:221
msgid ""
"Second, live-build supports #{*-desktop}# virtual package lists for each of "
"the desktop flavours mentioned above, which select the #{standard-x11}# "
"predefined package list, the corresponding #{*-desktop}# task and three "
"additional tasks: #{desktop}#, #{standard}# and #{laptop}#. So, for example, "
"if you specify #{--packages-lists gnome-desktop}#, it is equivalent to "
"specifying #{--packages debian-installer-launcher --packages-lists standard-"
"x11 --tasks \"gnome-desktop desktop standard laptop\"}#."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:223
msgid ""
"Third, if any of the tasks for these desktop flavours are selected, either "
"explicitly through #{--tasks}# or implicitly by #{--packages-lists}#, live-"
"build will preseed the corresponding desktop value for Debian Installer (if "
"it is included) to ensure it follows its own rules for installing different "
"desktop flavours."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:225
#, no-wrap
msgid "*{Note:}* There is also an experimental #{--language}# option that has an overlapping purpose with language tasks. For any language for which it is known that there are #{*-l10n}# packages, if #{--language}# is specified, those packages will be installed. Furthermore, if any #{syslinux}# templates matching the language are found, they will be used instead of the default English templates. The package selection done by #{--language}# is a poor approximation of language tasks, as it requires that the list of packages to include per language be maintained internally in live-build, and besides, language tasks are more comprehensive and flexible. However, the #{syslinux}# aspect is still useful. Thus, if you use #{--bootloader syslinux}# and templates for the specified language exist either in #{/usr/share/live/build/templates/syslinux/}# or #{config/templates/syslinux/}#, consider using this option, possibly in combination with tasks to ensure all relevant packages are installed. For example:\n"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:229
#, no-wrap
msgid " $ lb config --language es\n"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:233
msgid ""
"Even so, it is limited in that it only supports a single language and a "
"single bootloader. Therefore, for all of these reasons, the future of this "
"option is under review, possibly to be replaced with something entirely "
"different in the next major release of live-build."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:235
msgid ""
"2~installing-modified-or-third-party-packages Installing modified or third-"
"party packages"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:237
msgid ""
"Whilst it is against the philosophy of Debian Live, it may sometimes be "
"necessary to build a Live system with modified versions of packages that are "
"in the Debian repository. This may be to modify or support additional "
"features, languages and branding, or even to remove elements of existing "
"packages that are undesirable. Similarly, \"third-party\" packages may be "
"used to add bespoke and/or proprietary functionality."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:239
msgid ""
"This section does not cover advice regarding building or maintaining "
"modified packages. Joachim Breitner's 'How to fork privately' method from "
"http://www.joachim-breitner.de/blog/archives/282-How-to-fork-privately.html "
"may be of interest, however. The creation of bespoke packages is covered in "
"the Debian New Maintainers' Guide at http://www.debian.org/doc/maint-guide/ "
"and elsewhere."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:241
msgid "There are two ways of installing modified custom packages:"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:243
msgid "_* #{chroot_local-packages}#"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:245
msgid "_* Using a custom APT repository"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:247
msgid ""
"Using #{chroot_local-packages}# is simpler to achieve and useful for \"one-"
"off\" customizations but has a number of drawbacks, whilst using a custom "
"APT repository is more time-consuming to set up."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:249
msgid "3~ Using #{chroot_local-packages}# to install custom packages"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:251
msgid ""
"To install a custom package, simply copy it to the #{config/chroot_local-"
"packages/}# directory. Packages that are inside this directory will be "
"automatically installed into the live system during build - you do not need "
"to specify them elsewhere."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:253
msgid ""
"Packages *{must}* be named in the prescribed way. One simple way to do this "
"is to use #{dpkg-name}#."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:255
msgid ""
"Using #{chroot_local-packages}# for installation of custom packages has "
"disadvantages:"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:257
msgid "_* It is not possible to use secure APT."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:259
msgid ""
"_* You must install all appropriate packages in the #{config/chroot_local-"
"packages/}# directory."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:261
msgid ""
"_* It does not lend itself to storing Debian Live configurations in revision "
"control."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:263
msgid "3~ Using an APT repository to install custom packages"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:265
msgid ""
"Unlike using #{chroot_local-packages}#, when using a custom APT repository "
"you must ensure that you specify the packages elsewhere. See {Choosing "
"packages to install}#choosing-packages-to-install for details."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:267
msgid ""
"Whilst it may seem unnecessary effort to create an APT repository to install "
"custom packages, the infrastructure can be easily re-used at a later date to "
"offer updates of the modified packages."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:269
msgid "3~ Custom packages and APT"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:271
msgid ""
"live-build uses APT to install all packages into the live system so will "
"therefore inherit behaviours from this program. One relevant example is that "
"(assuming a default configuration) given a package available in two "
"different repositories with different version numbers, APT will elect to "
"install the package with the higher version number."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:273
msgid ""
"Because of this, you may wish to increment the version number in your custom "
"packages' #{debian/changelog}# files to ensure that your modified version is "
"installed over one in the official Debian repositories. This may also be "
"achieved by altering the live system's APT pinning preferences - see {APT "
"pinning}#apt-pinning for more information."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:275
msgid "2~ Configuring APT at build time"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:277
msgid ""
"You can configure APT through a number of options applied only at build "
"time. (APT configuration used in the running live system may be configured "
"in the normal way for live system contents, that is, by including the "
"appropriate configurations through #{config/chroot_local_includes/}#.) For a "
"complete list, look for options starting with #{apt}# in the #{lb_config}# "
"man page."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:279
msgid "3~choosing-apt-or-aptitude Choosing apt or aptitude"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:281
msgid ""
"You can elect to use either #{apt}# or #{aptitude}# when installing packages "
"at build time. Which utility is used is governed by the #{--apt}# argument "
"to #{lb config}#. Choose the method implementing the preferred behaviour for "
"package installation, the notable difference being how missing packages are "
"handled."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:283
msgid ""
"_* #{apt}#: With this method, if a missing package is specified, the package "
"installation will fail. This is the default setting."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:285
msgid ""
"_* #{aptitude}#: With this method, if a missing package is specified, the "
"package installation will succeed."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:287
msgid "3~ Using a proxy with APT"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:289
msgid ""
"One commonly required APT configuration is to deal with building an image "
"behind a proxy. You may specify your APT proxy with the #{--apt-ftp-proxy}# "
"or #{--apt-http-proxy}# options as needed, e.g."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:293
#, no-wrap
msgid " $ lb config --apt-http-proxy http://proxy/\n"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:297
msgid "3~ Tweaking APT to save space"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:299
msgid ""
"You may find yourself needing to save some space on the image media, in "
"which case one or the other or both of the following options may be of "
"interest."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:301
msgid ""
"If you don't want to include APT indices in the image, you can omit those "
"with:"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:305
#, no-wrap
msgid " $ lb config --binary-indices false\n"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:309
msgid ""
"This will not influence the entries in /etc/apt/sources.list, but merely "
"whether /var/lib/apt contains the indices files or not. The tradeoff is that "
"APT needs those indices in order to operate in the live system, so before "
"performing #{apt-cache search}# or #{apt-get install}#, for instance, the "
"user must #{apt-get update}# first to create those indices."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:311
msgid ""
"If you find the installation of recommended packages bloats your image too "
"much, you may disable that default option of APT with:"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:315
#, no-wrap
msgid " $ lb config --apt-recommends false\n"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:319
msgid ""
"The tradeoff here is that if you don't install recommended packages for a "
"given package, that is, \"packages that would be found together with this "
"one in all but unusual installations\" (Debian Policy Manual, section 7.2), "
"some packages that you actually need may be omitted. Therefore, we suggest "
"you review the difference turning off recommends makes to your packages list "
"(see the #{binary.packages}# file generated by #{lb build}#) and re-include "
"in your list any missing packages that you still want installed. "
"Alternatively, if you find you only want a small number of recommended "
"packages left out, leave recommends enabled and set a negative APT pin "
"priority on selected packages to prevent them from being installed, as "
"explained in {APT pinning}#apt-pinning."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:321
msgid "3~ Passing options to apt or aptitude"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:323
msgid ""
"If there is not an #{lb config}# option to alter APT's behaviour in the way "
"you need, use #{--apt-options}# or #{--aptitude-options}# to pass any "
"options through to your configured APT tool. See the man pages for #{apt}# "
"and #{aptitude}# for details."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:325
msgid "3~apt-pinning APT pinning"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:327
msgid ""
"For background, please first read the #{apt_preferences(5)}# man page. APT "
"pinning can be configured either for build time, or else for run time. For "
"the former, create #{config/chroot_apt/preferences}#. For the latter, create "
"#{config/chroot_local-includes/etc/apt/preferences}#."
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:329
msgid ""
"Let's say you are building a Squeeze live system but need all #{live-*}# "
"packages to be installed from Sid at build time. You need to add Sid to your "
"APT sources and pin it so that only the packages you want are installed from "
"it at build time and all others are taken from the target system "
"distribution, Squeeze. The following will accomplish this:"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:337
#, no-wrap
msgid ""
" $ echo \"deb http://mirror/debian sid main\" > config/chroot_sources/sid.chroot\n"
" $ cat >>config/chroot_apt/preferences <<END\n"
" Package: live-*\n"
" Pin: release n=sid\n"
" Pin-Priority: 600\n"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:342
#, no-wrap
msgid ""
" Package: *\n"
" Pin: release n=sid\n"
" Pin-Priority: 1\n"
" END\n"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:346
msgid ""
"Negative pin priorities will prevent a package from being installed, as in "
"the case where you do not want a package that is recommended by another "
"package. Suppose you are building a GNOME image but don't want the user "
"prompted to store wifi passwords in the keyring, so you want to omit the "
"recommended #{gnome-keyring}# package. This can be done by adding the "
"following stanza to #{config/chroot_apt/preferences}#:"
msgstr ""

#. type: Plain text
#: en/user_customization-packages.ssi:352
#, no-wrap
msgid ""
" Package: gnome-keyring\n"
" Pin: version *\n"
" Pin-Priority: -1\n"
msgstr ""
