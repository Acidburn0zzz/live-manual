:B~ Personalización de la imagen binaria

1~customizing-binary Personalización de la imagen binaria

2~ Gestor de arranque

live-build utiliza /{syslinux}/ y algunos de sus derivados (en función del
tipo de imagen) como gestores de arranque por defecto. Se pueden
personalizar fácilmente de formas diferentes que varían desde emplear un
tema completo a sólo modificar algunos ficheros que permiten, por ejemplo,
cambiar el tiempo de arranque por defecto o simplemente añadir una imagen
splash.

Si se quiere utilizar un tema completo se puede especificar la opción
#{--syslinux-theme}# (ver man #{lb_config}#). live-build lo descargará de la
réplica y lo instalará. También se puede empaquetar en un .deb un tema
propio o modificar uno ya existente y subirlo a un servidor local.

Si se desea crear un cliente progress pero se quiere utilizar el tema del
servidor que incluye el menú de ayuda. Se puede configurar como se explica a
continuación:

code{

 $ lb config --mode progress-linux --syslinux-theme progress-server

}code

Si uno no quiere preocuparse de crear un .deb, sólo tiene que añadir los
ficheros de configuración local para una imagen predeterminada a
#{config/bootloaders/isolinux}#. Substituyendo "isolinux" por *{extlinux}*,
*{pxelinux}* o *{syslinux}* dependiendo del caso de uso.

Se pueden hacer cambios más pequeños. Por ejemplo, los derivados de syslinux
están configurados por defecto con un tiempo de espera de 0 (cero) lo que
significa que harán una pausa indefinida en su pantalla de inicio hasta que
se pulse una tecla.

Para modificar el tiempo de espera de arranque de una imagen #{iso-hybrid}#
se puede editar un fichero *{isolinux.cfg}* especificando el tiempo de
espera en unidades de segundo y agregarlo a
#{config/includes.binary/isolinux/}#

Un fichero *{isolinux.cfg}* modificado para arrancar después de cinco
segundos sería así:

code{

 include menu.cfg
 default vesamenu.c32
 prompt 0
 timeout 50

}code

Una forma alternativa de lograr el mismo objetivo podría ser escribiendo un
script gancho y agregarlo a #{config/hooks/}#. Recordar añadir el sufijo
.binary para que sea ejecutado en la etapa binary. Un ejemplo podría ser:

code{

 #!/bin/sh

 sed -i 's|timeout 0|timeout 50|' binary/isolinux/isolinux.cfg

}code

Del mismo modo, si se quiere usar una splash.png personalizada basta con
añadir una imagen de 640x480 píxeles en #{config/includes.binary/isolinux/}#

2~ Metadatos ISO

Al crear una imagen binaria ISO9660 se pueden utilizar las siguientes
opciones para añadir varios metadatos textuales a la imagen. Esto puede
ayudar a identificar fácilmente la versión o la configuración de una imagen
sin arrancarla.

_* #{LB_ISO_APPLICATION/--iso-application NAME}#: Esto debería especificar
la aplicación que estará en la imagen. La longitud máxima para este campo es
de 128 caracteres.

_* #{LB_ISO_PREPARER/--iso-preparer NAME}#: Esto debería identificar quién
prepara la imagen, por lo general con algunos detalles de contacto. El valor
predeterminado para esta opción es la versión de live-build que se está
utilizando, lo que puede ayudar con la posterior depuración de errores. La
longitud máxima para este campo es de 128 caracteres.

_* #{LB_ISO_PUBLISHER/--iso-publisher NAME}#: Esto debería identificar quién
publica la imagen, por lo general con algunos detalles de contacto. La
longitud máxima para este campo es de 128 caracteres.

_* #{LB_ISO_VOLUME/--iso-volume NAME}#: Esto debería especificar el volumen
de identificación de la imagen. Esto se utiliza como etiqueta visible para
el usuario en algunas plataformas como Windows y Apple Mac OS. La longitud
máxima para este campo es de 32 caracteres.
