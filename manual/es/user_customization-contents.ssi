:B~ Personalización de contenidos

1~customizing-contents Personalización de contenidos

Este capítulo trata, no solamente de una mera descripción de cómo
seleccionar los paquetes a incluir en el sistema en vivo, sino que además
presenta cómo hacer el «ajuste fino» de la personalización de los contenidos
del propio sistema. Los «añadidos» (includes) permiten adjuntar o reemplazar
cualquier fichero en la imagen Debian Live a crear, los scripts gancho
(hooks) permiten ejecutar cualquier orden en las diferentes etapas de
creación y en el momento del arranque y por último, la preconfiguración
permite configurar paquetes cuando son instalados, suministrando las
respuestas a las preguntas de debconf.

2~ Includes

Idealmente, un sistema Debain Live debería incluir solamente ficheros que
son obtenidos de paquetes Debian no modificados. Sin embargo, algunas veces
es conveniente incluir o modificar algún contenido mediante ficheros. La
utilización de «añadidos» (includes) posibilita la inclusión, modificación o
cambio de cualquier fichero en la imagen Debian Live a crear. live-build
tiene tres mecanismos:

_* Includes locales en chroot : Estos includes permiten incluir o reemplazar
ficheros del entorno chroot. Para más información ver {Includes locales en
Live/chroot}#live-chroot-local-includes

_* Includes locales en Binary: Estos includes permiten incluir o reemplazar
ficheros en la propia imagen binaria generada. Para más información ver
{Includes locales en Binary}#binary-local-includes

_* Includes en Binary: Estos includes permiten incluir o reemplazar ficheros
específicos de Debian en la imagen binaria, como pueden ser plantillas o
directorios de herramientas. Para más información ver {Includes en
Binary}#binary-includes

Para más infomación acerca de la diferencia entre las imágenes "Live" y
"binary" ver {Términos}#terms 

3~live-chroot-local-includes Includes locales en Live/chroot

Los includes locales en chroot se utilizan para incluir o reemplazar
ficheros en el sistema de ficheros Live/chroot de manera que puedan ser
utilizados en el sistema en vivo. Una utilización típica de estos Includes
puede ser el rellenar el directorio (#{/etc/skel}#) del sistema en vivo para
que sea utilizado en la creación del directorio home al dar de alta usuarios
en el sistema en vivo. Otra utilización típica es suministrar ficheros de
configuración que puedan ser incluidos o reemplazados en la imagen sin
necesidad de realizar proceso alguno (Los ficheros son simplemente copiados
sin realizar ningún proceso de los mismos para adecuarlos al sistema
concreto. N. del T); Si se necesita realizar algún procesado de estos
ficheros ver la sección {Scripts gancho locales en
Live/chroot}#live-chroot-local-hooks

Para incluir ficheros solamente hace falta añadirlos al directorio de
configuración #{config/includes.chroot}#. Habrá una relación directa entre
este directorio y el directorio raiz (#{/}#) del sistema en vivo. Por
ejemplo, si se desea añadir un fichero para que sea el fichero
#{/var/www/index.html}# del sistema en vivo se puede hacer lo siguiente:

code{

 $ mkdir -p config/includes.chroot/var/www
 $ cp /path/to/my/index.html config/includes.chroot/var/www

}code

El directorio de configuración presentará la siguiente jerarquía:

code{

 -- config
    [...]
     |-- includes.chroot
     |   `-- var
     |       `-- www
     |           `-- index.html
    [...]
     `-- templates

}code

Los includes locales en chroot serán instalados después de la instalación de
los paquetes de manera que los includes sobreescribirán cualquier fichero
que los paquetes puedan haber instalado.

3~binary-local-includes Includes locales en Binary 

Se puede incluir material como documentación, videos, etc en el sistema de
ficheros del medio de instalación (USB, CDROM, etc) donde se grabará la
imagen de manera que sea accesible nada más insertar el medio sin necesidad
de arrancar el sistema en vivo. Para esto se utilizan los includes locales
en Binary. Funciona de manera similar a los includes locales en chroot
comentados anteriormente. Por ejemplo, supongamos que en el medio de
instalación se desea añadir unos ficheros con videos de demostración
#{~/video_demo.*}# sobre el funcionamiento del sistema en vivo de manera que
el usuario pueda acceder a ellos a través de la página de indice
HTML. Simplemente se debe copiar el material en #{config/includes.binary/}#
de la siguiente manera:

code{

 $ cp ~/video_demo.* config/includes.binary/

}code

Los ficheros aparecerán en el directorio raiz del medio desde el que se
instalará el sistema en vivo.

3~binary-includes Includes en Binary 

live-build tiene algún fichero estandar, como puede ser la documentación,
que se incluyen por defecto en el medio de instalación. Esto puede ser
desactivado con:

code{

 $ lb config --includes none

}code

Si no se utiliza esta opción, live-build instalará el material en el
directorio #{/includes/}# del sistema de ficheros del medio de instalación
por defecto. En lugar de none, se puede especificar un directorio
alternativo mediante la misma opción #{--includes}#.

2~ Scripts gancho (Hooks)

Los scripts gancho permiten ejecutar órdenes para personalizar la imagen en
las etapas chroot y binary. 

3~live-chroot-local-hooks Scripts gancho locales en Live/chroot

To run commands in the chroot stage, create a hook script with a #{.chroot}#
suffix containing the commands in the #{config/hooks/}# directory. The hook
will run in the chroot after the rest of your chroot configuration has been
applied, so remember to ensure your configuration includes all packages and
files your hook needs in order to run. See the example chroot hook scripts
for various common chroot customization tasks provided in
#{/usr/share/live/build/examples/hooks}# which you can copy or symlink to
use them in your own configuration.

3~boot-time-hooks Scripts gancho en tiempo de arranque

Para ejecutar ordenes en el arranque del sistema en vivo, se puede
suministrar scripts gancho a live-config depositándolos en el directorio
#{config/includes.chroot/lib/live/config/}#, tal y como se explica en la
sección de "Personalización" de la página de manual de live-config. Es
interesante examinar los scripts gancho que trae de serie live-config que
pueden verse en #{/lib/live/config/}# y fijarse en la secuencia de
números. Cuando se vaya a utilizar scripts propios deben ser prefijados con
un número para indicar el orden de ejecución. Otra posibilidad es utilizar
un paquete personalizado tal y como se describe en {Instalar paquetes de
terceros o paquetes
modificados}#installing-modified-or-third-party-packages.

3~ Scripts gancho locales en Binary

To run commands in the binary stage, create a hook script with a #{.binary}#
suffix containing the commands in the #{config/hooks/}# directory. The hook
will run after all other binary commands are run, but before
binary_checksums, the very last binary command. The commands in your hook do
not run in the chroot, so take care to not modify any files outside of the
build tree, or you may damage your build system! See the example binary hook
scripts for various common binary customization tasks provided in
#{/usr/share/live/build/examples/hooks}# which you can copy or symlink to
use them in your own configuration.

2~ Preconfiguración de las preguntas de Debconf

Files in the #{config/preseed/}# directory suffixed with #{.preseed}#
followed by the stage (#{.chroot}# or #{.binary}#) are considered to be
debconf preseed files and are installed by live-build using
#{debconf-set-selections}# during the corresponding stage.

Ver debconf(7) en el paquete #{debconf}# para obtener más información acerca
de debconf.
