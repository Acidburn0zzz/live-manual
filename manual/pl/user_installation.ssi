:B~ Instalacja

1~installation Instalacja

2~requirements Wymagania

Budowanie obrazów systemu live ma bardzo niewielkie wymagania systemowe:

_* Dostęp do konta (root) super-użytkownika

_* Aktualna wersja live-build

_* Powłoka zgodna z POSIX, taka jak /{bash}/ lub /{dash}/

_* /{debootstrap}/ lub /{cdebootstrap}/

_* Linux 2.6 lub nowszy.

Note that using Debian or a Debian-derived distribution is not required -
live-build will run on almost any distribution with the above requirements.

2~installing-live-build Instalowanie live-build

Możesz zainstalować live-build na wiele różnych sposobów:

_* Z repozytorium Debiana

_* Ze źródła

_* Ze zrzutów deweloperskich

If you are using Debian, the recommended way is to install live-build via
the Debian repository.

3~ Z repozytorium Debiana

Zwyczajnie zainstaluj live-build jak każdą inną paczkę:

code{

 # apt-get install live-build

}code

3~ Ze źródła

live-build is developed using the Git version control system. On Debian
based systems, this is provided by the /{git}/ package. To check out the
latest code, execute:

code{

 $ git clone git://live-systems.org/git/live-build.git

}code

Możesz zbudować i zainstalować własną paczkę Debiana wykonując:

code{

 $ cd live-build
 $ dpkg-buildpackage -b -uc -us
 $ cd ..

}code

Now install whichever of the freshly built #{.deb}# files you were
interested in, e.g.

code{

 # dpkg -i live-build_3.0-1_all.deb

}code

Możesz również zainstalować live-build bezpośrednio w swoim systemie
wykonując:

code{

 # make install

}code

i odinstalować go wykonując:

code{

 # make uninstall

}code

3~ Ze 'zrzutów deweloperskich'

If you do not wish to build or install live-build from source, you can use
snapshots. These are built automatically from the latest version in Git and
are available on http://live-systems.org/debian/.

2~ Instalowanie live-boot i live-config

*{Note:}* You do not need to install live-boot or live-config on your system to create customized live systems. However, doing so will do no harm and is useful for reference purposes. If you only want the documentation, you may now install the /{live-boot-doc}/ and /{live-config-doc}/ packages separately.

3~ Z repozytorium Debiana

Both live-boot and live-config are available from the Debian repository as
per {Installing live-build}#installing-live-build.

3~ Ze źródła

Aby używać najnowszych źródeł z repozytorium GIT, użyj poniższego
polecenia. Proszę upewnij się, że zapoznałeś się z warunkami wymienionymi w
{Warunkach}#terms.

_* Sklonuj źródła live-boot i live-config

code{

 $ git clone git://live-systems.org/git/live-boot.git
 $ git clone git://live-systems.org/git/live-config.git

}code

Consult the live-boot and live-config man pages for details on customizing
if that is your reason for building these packages from source.

_* Zbuduj pliki .deb live-boot i live-config

You must build either on your target distribution or in a chroot containing
your target platform: this means if your target is ${testing} then you
should build against ${testing}.

Use a personal builder such as /{pbuilder}/ or /{sbuild}/ if you need to
build live-boot for a target distribution that differs from your build
system. For example, for ${testing} live images, build live-boot in a
${testing} chroot. If your target distribution happens to match your build
system distribution, you may build directly on the build system using
#{dpkg-buildpackage}# (provided by the /{dpkg-dev}/ package):

code{

 $ cd live-boot
 $ dpkg-buildpackage -b -uc -us
 $ cd ../live-config
 $ dpkg-buildpackage -b -uc -us

}code

_* Użyj mających zastosowanie wygenerowanych plików .deb

As live-boot and live-config are installed by live-build system, installing
the packages in the host system is not sufficient: you should treat the
generated .deb files like any other custom packages. Since your purpose for
building from source is likely to test new things over the short term before
the official release, follow {Installing modified or third-party
packages}#installing-modified-or-third-party-packages to temporarily include
the relevant files in your configuration. In particular, notice that both
packages are divided into a generic part, a documentation part and one or
more back-ends. Include the generic part, only one back-end matching your
configuration, and optionally the documentation. Assuming you are building a
live image in the current directory and have generated all .deb files for a
single version of both packages in the directory above, these bash commands
would copy all of the relevant packages including default back-ends:

code{

 $ cp ../live-boot{_,-initramfs-tools,-doc}*.deb  config/packages.chroot/
 $ cp ../live-config{_,-sysvinit,-doc}*.deb  config/packages.chroot/

}code

3~ Ze 'zrzutów deweloperskich'

You can let live-build automatically use the latest snapshots of live-boot
and live-config by configuring the package repository on live-systems.org as
a third-party repository in your live-build configuration directory.
