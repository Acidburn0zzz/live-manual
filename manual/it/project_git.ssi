:B~ Repository Git

1~git-repositories Repository Git

L'elenco di tutti i repository del progetto Debian Live disponibili si trova
all'indirizzo http://live.debian.net/gitweb/. Gli URL git sono nella forma
#{protocollo://live.debian.net/git/repository}#. Quindi per ottenere un
clone in sola lettura di live-manual eseguire:

code{

 $ git clone git://live.debian.net/git/live-manual.git

}code

oppure

code{

 $ git clone https://live.debian.net/git/live-manual.git

}code

oppure

code{

 $ git clone http://live.debian.net/git/live-manual.git

}code

Gli indirizzi per clonare con permessi di scrittura sono nella forma
#{git@live.debian.net:/repository}#.

Quindi per clonare live-manual via ssh si userà:

code{

 $ git clone git@live.debian.net:live-manual.git

}code

Il ramo git del progetto Debian Live è costituito da molteplici branch
differenti. I branch *{debian}* e *{debian-next}* sono particolarmente degni
di nota in quanto contengono il lavoro attuale che verrà incluso in ogni
nuovo rilascio.

Dopp aver clonato uno dei repository esistenti sarete nel branch
*{debian}*.Questo è adatto per prendere visione dello stato dell'ultimo
rilascio del progetto ma prima di iniziare a lavorarci è cruciale passare a
*{debian-next}*. Per farlo eseguire:

code{

 $ git checkout debian-next

}code

Il branch *{debian-next}*, che non è sempre soggetto al fast-forward, è dove
si fa il commit di tutte le modifiche prima di essere incluse nel branch
*{debian}*. È come un terreno di test, per fare un analogia. Se si sta
lavorando in questo branch e si necessita di eseguire il pull, bisogna usare
#{git pull --rebase}# in modo che le modifiche locali siano preparate per il
commit (stage) quando si fa il pull dal server, in questo modo saranno poste
in cima a tutto il resto.

2~ Gestire repository multipli

Se si intende clonare svariati repository Debian Live e passare direttamente
al ramo *{debian-next}* per controllare il codice più recente, scrivere una
patch o contribuire con una traduzione, il server git fornisce un file
#{mrconfig}# per facilitare la gestione di molteplici repository. Per
utilizzarlo è necessario installare il pacchetto /{mr}/ e quindi eseguire:

code{

 $  mr bootstrap http://live.debian.net/other/mr/mrconfig

}code

Il comando clonerà e farà il checkout al ramo *{debian-next}* dei repository
di sviluppo dei pacchetti Debian prodotti dal progetto. Questi includono tra
gli altri il repository live-images che contiene le configurazioni usate per
le immagini precompilate che il progetto pubblica per uso generico. Per
maggiori informazioni su come utilizzare questo repository si veda {Clonare
una configurazione pubblicata tramite Git.}#clone-configuration-via-git
