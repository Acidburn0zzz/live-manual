:B~ A proposito di questo manuale

1~about-manual A proposito di questo manuale

Questo manuale funge da unico punto d'accesso a tutta la documentazione
relativa al progetto Debian Live e si applica in particolare al software
prodotto per il rilascio di Debian 7.0 "wheezy". Si può trovare una versione
aggiornata all'indirizzo http://live.debian.net/

Sebbene sia principalmente focalizzato nell'aiutare a costruire un sistema
live e non su argomenti per l'utente finale, è comunque possibile trovare
alcune informazioni utili in queste sezioni: le {Nozioni di base}#the-basics
coprono il download di immagini precompilate e la preparazione delle
immagini da avviare da un supporto o dalla rete, sia tramite il web builder
o eseguendo live-build direttamente sul proprio sistema. {Personalizzare i
comportamenti durante l'esecuzione}#customizing-run-time-behaviours descrive
alcune opzioni specificabili al prompt d'avvio, come la scelta di un layout
di tastiera e una lingua, e l'utilizzo della persistenza.

Alcuni dei comandi menzionati nel testo devono essere eseguiti con i
privilegi di super-utente che possono essere ottenuti diventando utente root
tramite #{su}# oppure usando #{sudo}#. Per distinguere i comandi che possono
essere eseguiti come utente normale da quelli che necessitano dei privilegi
di super-utente, i comandi sono preceduti rispettivamente da #{$}# o
#{#}#. Questi simboli non fanno parte del comando.

2~ Per gli impazienti

Sebbene crediamo che ogni cosa in questo manuale sia importante almeno per
alcuni dei nostri utenti, ci rendiamo conto che c'è tanto materiale da
trattare e che si potrebbe voler provare il software prima di entrare nei
dettagli; pertanto suggeriamo di leggerlo nel seguente ordine.

Per iniziare leggere questo capitolo, {A proposito di questo
manuale}#about-manual, da cima a fondo insieme alla sezione
{Glossario}#terms, quindi passare ai tre tutorial all'inizio della sezione
{Esempi}#examples progettati per insegnare le basi della costruzione e della
personalizzazione delle immagini. Si legga innanzitutto {Usare gli
esempi}#using-the-examples, seguito da {Tutorial 1: un'immagine
predefinita}#tutorial-1, {Tutorial 2: un programma di utilità web
browser}#tutorial-2 e, infine, {Tutorial 3: un'immagine
personalizzata}#tutorial-3. Alla fine di queste esercitazioni, si avrà un
assaggio di ciò che si può fare con Debian Live.

Ti invitiamo ad uno studio più approfondito del manuale, magari leggendo in
seguito le {Nozioni di base}#the-basics, sfogliando o saltando {Creare
un'immagine netboot}#building-netboot-image, e finendo con la lettura di
{Panoramica sulla personalizzazione}#customization-overview e dei capitoli
che lo seguono. A questo punto, ci auguriamo che tu sia davvero stimolato da
ciò che si può fare con Debian Live e motivato a leggere il resto del
manuale per intero.

2~terms Glossario

_* *{Sistema Live}*: un sistema operativo che può partire senza
installazione su disco rigido. I sistemi live non alterano né il sistema
operativo locale (o i sistemi operativi locali) né i file già installati sul
disco rigido del computer a meno che lo si faccia volontariamente. I sistemi
live vengono solitamente avviati da supporti quali CD, DVD o penne USB;
alcuni possono anche avviarsi via rete.

_* *{Supporto Live}*: diversamente dal sistmea live, si riferisce a CD, DVD
o penna USB dove viene scritto il binario prodotto da live-build e usato per
l'avvio del sistema live. Più in generale, il termine si riferisce anche a
qualsiasi posto in cui risiede il binario allo scopo di avviare il sistema,
come il percorso per i file di avvio da rete.

_* *{Debian Live}*: il sotto-progetto Debian che mantiene, tra gli altri, i
pacchetti live-boot, live-build, live-config, live-tools e live-manual.

_* *{Sistema Debian Live}*: un sistema live che usa software proveniente dal
sistema operativo Debian e che può essere lanciato da CD, DVD, supporti USB,
via rete (tramite immagini netboot) e via internet (tramite il parametro di
boot #{fetch=URL}#).

_* *{Sistema host}*: l'ambiente utilizzato per creare il sistema live.

_* *{Sistema di destinazione}*: l'ambiente usato per eseguire il sistema
live.

_* *{live-boot}*: una raccolta di script usati per avviare sistemi live.

_* *{live-boot}*: una raccolta di script usati per creare sistemi live
Debian personalizzati.

_* *{live-config}*: una raccolta di script usati per configurare un sistema
live durante il processo di avvio.

_* *{live-tools}*: una raccolta di script aggiuntivi usati per eseguire
utili compiti in un sistema live avviato.

_* *{live-manual}*: questo documento è inserito nel pacchetto chiamato
live-manual.

_* *{Debian Installer (d-i)}*: il sistema d'installazione ufficiale per la
distribuzione Debian.

_* *{Boot parameters}*: parametri che possono essere immessi nel prompt del
boot loader per modificare il comportamento del kernel o di live-config.

_* *{chroot}*: il programma /{chroot}/, #{chroot(8)}#, rende possibile
eseguire diverse istanze dell'ambiente GNU/Linux su un singolo sistema
simultaneamente senza riavviare.

_* *{Binary image}*: un file che contiene il sistema live, come binary.iso o
binary.img.

_* *{Distribuzione di destinazione}*: la distribuzione su cui sarà basato il
sistema live. Può differire dalla distribuzione presente sul proprio
computer.

_* *{stable/testing/unstable}*: la distribuzione *{stable}* contiene
l'ultima distribuzione ufficialmente rilasciata da Debian; la *{testing}* è
il punto di raccolta per i pacchetti della prossima *{stable}*. Uno dei
principali vantaggi nell'uso di questa distribuzione sta nell'avere software
più recente rispetto alla *{stable}*. La distribuzione *{unstable}* è dove
avviene lo sviluppo attivo di Debian; viene generalmente usata dagli
sviluppatori o da coloro che amano l'azzardo. In tutto il manuale tendiamo a
usare i nomi in codice dei rilasci, ad esempio wheezy o sid, in quanto è
quanto supportato dagli strumenti stessi.

2~ Autori

Lista degli autori (in ordine alfabetico):

_* Ben Armstrong

_* Brendan Sleight

_* Carlos Zuferri

_* Chris Lamb

_* Daniel Baumann

_* Franklin Piat

_* Jonas Stein

_* Kai Hendry

_* Marco Amadori

_* Mathieu Geli

_* Matthias Kirschner

_* Richard Nelson

_* Trent W. Buck

2~how-to-contribute Contribuire a questo documento

Questo manuale è pensato come un progetto comunitario e ogni suggerimento e
contributo è benvenuto. Si veda {Contribuire al
progetto}#contributing-to-project per informazioni dettagliate su come
prelevare la chiave SSH ed eseguire buoni commit.

3~ Applicare le modifiche

Per apportare modifiche alla versione inglese del manuale è necessario
modificare i file giusti in #{manual/en/}#, ma prima di sottoporre il
proprio contributo si prega di visionare l'anteprima del proprio lavoro. Per
ottenere l'anteprima di live-manual, assicurarsi di avere installato i
pacchetti necessari per la sua compilazione eseguendo:

code{

 # apt-get install make po4a ruby ruby-nokogiri sisu-complete texlive-generic-recommended

}code

Si può compilare il live-manual dalla directory superiore del checkout di
Git eseguendo:

code{

 $ make build

}code

Giacché occorre del tempo per compilare il manuale in tutte le lingue
supportate può risultare conveniente farlo per una sola lingua, ad esempio
eseguendo:

code{

 $ make build LANGUAGES=en

}code

È inoltre possibile compilare in base al tipo di documento, esempio:

code{

 $ make build FORMATS=pdf

}code

O entrambi:

code{

 $ make build LANGUAGES=de FORMATS=html

}code

Dopo aver revisionato il proprio lavoro e assicurato che tutto funzioni, non
usare #{make commit}# a meno che nel commit non si stiano aggiornando delle
traduzioni, in tal caso non mescolare nello stesso le modifiche al manuale
inglese e le traduzioni ma eseguire un commit per ognuna. Per maggiori
dettagli vedere la sezione {Traduzione}#translation.

3~translation Traduzione

Per iniziare una traduzione per una nuova lingua, seguire questi passi:

_* Tradurre i file *{about_manual.ssi.pot}*, *{about_project.ssi.pot}* e
*{index.html.in.pot}* nella propria lingua con il proprio editor preferito
(tipo /{poedit}/). Inviare i file #{.po}# tradotti alla mailing list in modo
che il team di traduzione possa controllarne l'integrità.

_* Per abilitare una nuova lingua nell'autobuild è sufficiente aggiungere i
file tradotti iniziali a #{manual/po/${LANGUAGE}/}# ed eseguire #{make
commit}#. Quindi modificare il file #{manual/_sisu/home/index.html}#.

_* Una volta che la nuova lingua è stata aggiunta, si può continuare a
tradurre i restanti file po situati in #{manual/po/}#, nell'ordine che si
preferisce.

_* Non dimenticare che è necessario usare #{make commit}# per assicurarsi
che i manuali tradotti siano aggiornati partendo dai file po, quindi si
possono verificare le modifiche con #{make build}# prima di #{git add .}#,
#{git commit -m "Translating..."}# e #{git push}#.

Dopo aver eseguito #{make commit}# si vedrà del testo scorrere. Questi sono
messaggi informativi sullo stato del processo e alcuni suggerimenti su cosa
si può fare per migliorare live-manual. A meno che non si ottenga un errore
fatale si può procedere e inviare il proprio contributo.

live-manual è fornito di due utilità in grado di fornire un grande aiuto ai
traduttori al fine di trovare le stringhe da tradurre o modificate. La prima
è "make translate", avvia uno script che dice dettagliatamente quante
stringhe non tradotte ci sono in ogni file po. La seconda, "make fixfuzzy",
funziona solo sulle stringhe modificate ma aiuta a trovarle e aggiornarle
una per una.

È da considerare che nonostante queste utilità possono davvero risultare
utili per tradurre dalla riga di comando, si raccomanda l'uso di uno
strumento specifico come /{poedit}/. È inoltre una buona idea leggere la
documentazione sulla localizzazione in Debian (l10n) e, specifiche per
live-manual, le {Linee guida per i traduttori}#guidelines-translators.

*{Nota:}* si può usare #{make clean}# per pulire l'albero del repository git locale prima del push. Grazie al file .gitignore questo passo non è obbligatorio ma è una buona abitudine che evita di fare involontariamente il commit di certi file.
