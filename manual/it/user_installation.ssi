:B~ Installazione

1~installation Installazione

2~requirements Requisiti

Per costruire immagini Debian Live i requisiti di sistema sono davvero
pochi:

_* Accesso come utente root

_* Una versione aggiornata di live-build

_* Una shell POSIX-compliant, come /{bash}/ o /{dash}/

_* /{debootstrap}/ o /{cdebootstrap}/

_* Linux 2.6 o successivi

Si noti che usare Debian o una distribuzione derivata Debian non è richiesto
- live-build funzionerà sostanzialmente su qualsiasi distribuzione che
soddisfi i requisiti di cui sopra.

2~installing-live-build Installare live-build

Si può installare live-build in diversi modi:

_* Dal repository Debian

_* Da sorgenti

_* Da istantanee

Se si sta usando Debian, il metodo raccomandato è di installare live-build
attraverso il repository Debian.

3~ Dal repository Debian

Installare live-build come qualsiasi altro pacchetto:

code{

 # apt-get install live-build

}code

3~ Da sorgenti

live-build è sviluppato usando il sistema di controllo versione Git. Sui
sistemi basati su Debian è fornito dal pacchetto /{git}/. Per scaricare il
codice aggiornato, eseguire:

code{

 $ git clone git://live.debian.net/git/live-build.git

}code

È possibile costruirsi ed installarsi il proprio pacchetto Debian eseguendo:

code{

 $ cd live-build
 $ dpkg-buildpackage -b -uc -us
 $ cd ..

}code

Si installino ora i file #{.deb}# appena generati ai quali si è interessati,
ad esempio:

code{

 # dpkg -i live-build_3.0-1_all.deb

}code

Si può anche installare live-build direttamente sul proprio sistema
eseguendo:

code{

 # make install

}code

e disinstallarlo con:

code{

 # make uninstall

}code

3~ Da "istantanee"

Se non si desidera generare o installare live-build da sorgenti, è possibile
usare le istantanee. Sono costruite automaticamente dall'ultima versione
presente su Git e disponibili su http://live.debian.net/debian/.

2~ Installare live-boot e live-config

*{Nota:}* non è necessario installare live-boot o live-config sul proprio sistema per creare sistemi Debian Live personalizzati. Tuttavia, farlo non nuoce. Se si vuole la documentazione è possibile installare i pacchetti /{live-boot-doc}/ e /{live-config-doc}/ separatamente.

3~ Dal repository Debian

Sia  live-boot che live-config sono disponibili dai repository Debian come
per l'{installazione di live-build}#installing-live-build.

3~ Da sorgenti

Per utilizzare i sorgenti più recenti da Git si può seguire il procedimento
seguente. Assicurarsi di conoscere i termini menzionati nel
{Glossario}#terms.

_* Scaricare i sorgenti di live-boot e live-config

code{

 $ git clone git://live.debian.net/git/live-boot.git
 $ git clone git://live.debian.net/git/live-config.git

}code

Consultare la pagine man di live-boot e live-config per i dettagli sulla
personalizzazione se questa è il motivo per compilare questi pacchetti dai
sorgenti.

_* Costruire un .deb di live-boot e live-config

È necessario compilare sulla distribuzione di destinazione, oppure in un
chroot contenente la piattaforma di destinazione: significa che se
l'obiettivo è wheezy allora bisogna compilare su wheezy.

Se si deve compilare live-boot per una distribuzione di destinazione diversa
dal proprio sistema, utilizzare un compilatore tipo /{pbuilder}/ o
/{sbuild}/. Ad esempio, per immagini live wheezy, si generi live-boot in un
chroot wheezy. Se la distribuzione di destinazione corrisponde con la
distribuzione del proprio sistema, si può costruire direttamente sul sistema
usando #{dpkg-buildpackage}# (fornito dal pacchetto /{dpkg-dev}/):

code{

 $ cd live-boot
 $ dpkg-buildpackage -b -uc -us
 $ cd ../live-config
 $ dpkg-buildpackage -b -uc -us

}code

_* Usare il .deb di live-boot generato

live-boot e live-config sono installati dal sistema creato con live-build,
installare i pacchetti nel sistema host non è sufficiente: si dovrebbero
trattare i file .deb generati come qualsiasi pacchetto personalizzato. Dal
momento che lo scopo di compilare dai sorgenti è di testare cose nuove nel
breve periodo prima del rilascio ufficiale, seguire {Installare pacchetti
modificati o di terze parti}#installing-modified-or-third-party-packages per
includere temporaneamente i file attinenti nella propria configurazione. In
particolare notare che entrambi i pacchetti sono suddivisi in una parte
generica, una parte della documentazione e uno o più backend. Includere la
parte generica, solo il backend corrispondente alla propria configurazione
ed eventualmente la documentazione. Supponendo di creare un'immagine live
nella directory attuale e di aver generato tutti i .deb per un singola
versione di entrambi i pacchetti nella stessa directory, questi comandi bash
copieranno tutti i file attinenti inclusi i backend predefiniti:

code{

 $ cp ../live-boot{_,-initramfs-tools,-doc}*.deb  config/packages.chroot/
 $ cp ../live-config{_,-sysvinit,-doc}*.deb  config/packages.chroot/

}code

3~ Da "istantanee"

Si può lasciare che live-build usi automaticamente l'ultima istantanea di
live-boot e live-config configurando un repository esterno nella directory
di configurazione di live-build. Assumendo che si sia già creato un albero
di configurazione nell'attuale directory con #{lb config}#:

code{

 $ lb config --archives live.debian.net

}code
