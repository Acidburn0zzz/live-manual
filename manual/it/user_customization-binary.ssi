:B~ Customizing the binary image

1~customizing-binary Personalizzare l'immagine binaria

2~ Bootloader

live-build usa /{syslinux}/ e alcuni dei suoi derivati (a seconda del tipo
di immagine) come bootloader predefiniti. Si possono facilmente
personalizzare in vari modi che vanno dal fornire un tema completo per
modificare solo alcuni file che vi permettono ad esempio di cambiare il
timeout d'avvio o semplicemente per aggiungere un'immagine splash
personalizzata.

Per cambiare un intero tema specificare l'opzione #{--syslinux-theme}#
(vedere man #{lb_config}#); live-build recupera quindi il tema dal mirror e
lo installa. Si può inoltre pacchettizzare il proprio o modificarne uno
esistente e caricarlo sul mirror locale.

Si immagini di voler creare un client progress ma si preferisce includere il
tema del server per avere il menù di aiuto. Si lancerà #{lb config}# come
segue:

code{

 $ lb config --mode progress-linux --syslinux-theme progress-server

}code

Se non si desidera creare un .deb, aggiungere semplicemente i propri file di
configurazione per un'immagine predefinita a
#{config/bootloaders/isolinux}#. Sostituire "isolinux" con *{extlinux}*,
*{pxelinux}* o *{syslinux}* dipende dalle necessità.

Si può anche fare piccole modifiche. Per esempio i derivati di syslinux sono
configurati con un timeout impostato a 0 (zero) in modo predefinito,
significa che resteranno in pausa al loro splash screen fino a quando non si
preme un tasto.

Per modificare il timeout di avvio di un'immagine #{iso-hybrid}# modificare
un file *{isolinux.cfg}* predefinito specificando il timeout in unità di
secondi e aggiungerlo a #{config/includes.binary/isolinux/}#

Un file *{isolinux.cfg}* modificato per fare il boot dopo cinque secondi
sarà simile a questo:

code{

 include menu.cfg
 default vesamenu.c32
 prompt 0
 timeout 50

}code

Un modo alternativo per raggiungere lo stesso obiettivo potrebbe essere
scrivere un hook e aggiungerlo a #{config/hooks/}# Ricordarsi di aggiungere
il suffisso #{.binary}# per eseguirsi nella fase binaria. Ecco un esempio:

code{

 #!/bin/sh

 sed -i 's|timeout 0|timeout 50|' binary/isolinux/isolinux.cfg

}code

Allo stesso modo, se si vuole utilizzare un'immagine splash.png
personalizzata basta aggiungerne una di 640x480 pixel a
#{config/includes.binary/isolinux/}#

2~ Metadati ISO

Quando si crea un'immagine binaria ISO9660, si possono usare le seguenti
opzioni per aggiungere vari metadati testuali. Questo può aiutare a
identificare facilmente la versione o la configurazione di un'immagine senza
avviarla.

_* #{LB_ISO_APPLICATION/--iso-application NAME}#: descrive l'applicazione
che sarà nell'immagine. La lunghezza massima per questo campo è di 128
caratteri.

* #{LB_ISO_PREPARER/--iso-preparer NAME}#: descrive il costruttore
dell'mmagine, solitamente con alcuni dettagli per
contattarlo. L'impostazione predefinita è la versione di live-build che si
sta usando, il quale potrà essere utile in seguito per il debugging. La
lunghezza massima per questo campo è di 128 caratteri.

_* #{LB_ISO_PUBLISHER/--iso-publisher NAME}#: descrive l'editore
dell'immagine, solitamente con qualche dettaglio per contattarlo. La
lunghezza massima lunghezza per questo campo è di 128 caratteri.

_* #{LB_ISO_VOLUME/--iso-volume NAME}#: specifica l'ID del volume
dell'immagine. Questa è utilizzata come etichetta visibile all'utente su
alcune piattaforme, come Windows e Apple Mac OS. La lunghezza massima per
questo campo è di 128 caratteri.
