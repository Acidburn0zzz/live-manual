B~ Personalizzare i contenuti

1~customizing-contents Personalizzazione dei contenuti

This chapter discusses fine-tuning customization of the live system contents
beyond merely choosing which packages to include. Includes allow you to add
or replace arbitrary files in your Debian Live image, hooks allow you to
execute arbitrary commands at different stages of the build and at boot
time, and preseeding allows you to configure packages when they are
installed by supplying answers to debconf questions.

2~ Includes

While ideally a Debian live system would include files entirely provided by
unmodified Debian packages, it is sometimes convenient to provide or modify
some content by means of files. Using includes, it is possible to add (or
replace) arbitrary files in your Debian Live image. live-build provides
three mechanisms for using them:

_* Chroot local includes: Ciò permette di aggiungere o sostituire file al
file system chroot/Live. Vedere {Live/chroot local
includes}#live-chroot-local-includes per maggiori informazioni.

_* Binary local includes: Ciò permette di aggiungere o sostituire file
nell'immagine binaria. Vedere {Binary local includes}#binary-local-includes
per maggiori informazioni

_* Binary includes: Ciò permette di aggiungere o sostituire specifici file
Debian nell'immagine  binaria, come le directory dei template e dei
tool. Vedere {Binary includes}#binary-includes per maggiori informazioni.

Si consulti il {glossario}#terms per ulteriori informazioni sulla
distinzione per le immagini "Live" e "binari".

3~live-chroot-local-includes Live/chroot local includes

Chroot local includes can be used to add or replace files in the chroot/Live
filesystem so that they may be used in the Live system. A typical use is to
populate the skeleton user directory (#{/etc/skel}#) used by the Live system
to create the live user's home directory. Another is to supply configuration
files that can be simply added or replaced in the image without processing;
see {Live/chroot local hooks}#live-chroot-local-hooks if processing is
needed.

Per aggiungere i file, si aggiungano semplicemente nella directory
#{config/chroot_local-includes}#. Questa directory corrisponde alla
directory root (#{/}#) del sistema live. Per esempio, per aggiungere un file
#{/var/www/index.html}# nel sistema live, usare:

code{

$ mkdir -p config/chroot_local-includes/var/www $ cp /path/to/my/index.html
config/chroot_local-includes/var/www

}code

La configurazione avrà quindi il seguente schema:

code{

-- config
   [...]
    |-- chroot_local-includes
    |   `-- var
    |       `-- www
    |           `-- index.html
   [...]
    `-- templates

}code

I pacchetti inseriti in chroot local includes  vengono installati dopo
l'installazione degli altri pacchetti standard che vengono in seguito
sovrascitti.

3~binary-local-includes Binary local includes

To include material such as documentation or videos on the media filesystem
so that it is accessible immediately upon insertion of the media without
booting the Live system, you can use binary local includes. This works in a
similar fashion to chroot local includes. For example, suppose the files
#{~/video_demo.*}# are demo videos of the live system described by and
linked to by an HTML index page. Simply copy the material to
#{config/binary_local-includes/} as follows:

code{

$ cp ~/video_demo.* config/binary_local-includes/

}code

These files will now appear in the root directory of the live media.

3~binary-includes Binary includes

live-build ha alcuni file predefiniti (come da documentazione) che sono
inclusi  nella configurazione predefinita di ogni media live. Ciò può essere
disabilitato con:

code{

$ lb config --includes none

}code

Otherwise, the material will be installed by live-build in #{/includes/}# by
default on the media filesystem, or else you can specify an alternate path
with #{--includes}#.

2~ Hooks

Hooks permette di eseguire comandi nel chroot e nella costruzione dei binari
al fine della personalizzazione dell'immagine.

3~live-chroot-local-hooks Live/chroot local hooks

Per eseguire comandi nello stadio chroot, creare un hook script contenete i
comandi nella directory #{config/chroot_local-hooks}#. Lo hook verrà
eseguito nel chroot dopo che tutta la configurazione del chroot sarà
eseguita, quindi ricorda di includere tutti i pacchetti e i file di
configurazione per far in modo che lo hook funzioni. Vedere gli esempi degli
script chroot hook per le diverse comuni personalizzazioni contenuti in
#{/usr/share/live/build/examples/hooks}# le quali puoi copiarle o creare dei
collegamenti da usare nella configurazione.

3~ Boot-time hooks

To execute commands at boot time, you can supply live-config hooks as
explained in the "Customization" section of its man page. Examine
live-config's own hooks provided in #{/lib/live/config/}#, noting the
sequence numbers. Then provide your own hook prefixed with an appropriate
sequence number, either as a chroot local include in
#{config/chroot_local-includes/lib/live/config/}#, or as a custom package as
discussed in {Installing modified or third-party
packages}#installing-modified-or-third-party-packages.

3~ Binary local hooks

Per eseguire comandi nello stadio binario, creare uno script hook che
contienga i comandi in #{config/binary_local-hooks}#. Lo hook verrà eseguito
dopo tutti gli altri comandi per i binari, ma prima del binary_checksums,
l'ultimo definitivo comando. I comandi dello hook non vengono eseguiti nel
chroot, quindi fai attenzione a non modificare nessun file dell'abero di
costruzione, pena puoi corrompere la costruzione del sistema! Vedere gli
esempi di personalizzazione degli script hook binari in
#{/usr/share/live/build/examples/hooks}# i quali puoi copiarli o creare dei
collegamenti per usarli nella configurazione.

2~ Domande su Preseeding Debconf 

I file nella directory #{config/chroot_local-preseed}# sono considerati
essere file debconf preseed ed essi sono installati dal live-build usando
#{debconf-set-selections}#.

Per ulteriori informazioni su debconf, vedere debconf(7) nel pacchetto
#{debconf}#.
