<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
    "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd" [
  <!ENTITY % commondata SYSTEM "../entities/common.ent" > %commondata;
]>
<chapter id="installation">
<title>Installation</title>

<section>
<title>Requirements</title>

<para>Building Debian Live images has very few system requirements:</para>

<orderedlist>
<listitem><para>Super user (root) access</para></listitem>
<listitem><para>An up-to-date version of &live-helper;</para></listitem>
<listitem><para>A POSIX-compliant shell, such as <command>bash</command> or <command>dash</command>.</para></listitem>
<listitem><para><command>debootstrap</command> or <command>cdebootstrap</command></para></listitem>
<listitem><para>Linux 2.6.x</para></listitem>
</orderedlist>

<para>Note that using Debian or a Debian-derived distribution is not required - &live-helper; will run on almost any operating system with the above requirements.</para>

</section>

<section>
<title>Installing &live-helper;</title>

<para>You can install &live-helper; in a number of different ways:</para>

<orderedlist>
<listitem><para>From the Debian repository</para></listitem>
<listitem><para>From source</para></listitem>
<listitem><para>From snapshots</para></listitem>
<listitem><para>From backports.org</para></listitem>
</orderedlist>

<para>If you are using &lenny; or &sid; the recommended way is to install &live-helper; via the Debian repository.</para>

<section>
<title>From the Debian repository</title>

<para>Simply install &live-helper; like any other package:</para>
<screen># apt-get install live-helper</screen>
<para>or</para>
<screen># aptitude install live-helper</screen>

</section>

<section>
<title>From source</title>

<para>&live-helper; is developed using the Git version control system. On Debian systems, this is provided by the <command>git-core</command> package. To check out the latest code, execute:</para>
<screen>$ git clone git://live.debian.net/git/live-helper.git</screen>
<para>You can build and install your own Debian package by executing:</para>
<screen>
 $ cd live-helper
 $ dpkg-buildpackage -rfakeroot -b -uc -us
 $ cd ..
 # dpkg -i live-helper*.deb
</screen>
<para>You can also use a local version of &live-helper; without installation:</para>
<screen># live-helper/helpers/lh_local</screen>
<para>Subsequent calls to <filename>lh_</filename>-prefixed helpers in that shell environment will then use the version located in the directory you executed <filename>lh_local</filename> from.</para>
<para>You can also install &live-helper; directly to your system by executing:</para>
<screen># make install</screen>

</section>

<section>
<title>From 'snapshots'</title>
<para>If you do not wish to build or install &live-helper; from source, you can use snapshots. These are built automatically from the latest version in Git and are available on <ulink url="http://live.debian.net/debian/">http://live.debian.net/debian</ulink>.</para>
</section>

<section>
<title>&live-initramfs;</title>

<para><emphasis>N.B. You do not need to install &live-initramfs; on your system to create customised Debian Live systems. However, doing so will do no harm.</emphasis></para>

<section>
<title>Using a customised &live-initramfs;</title>

<para>To modify the code you can follow the process below. Please ensure you are familiar with the terms mentioned in <xref linkend="terms"/>.</para>

<orderedlist>
<listitem>
<para>Checkout the &live-initramfs; source</para>
<screen>$ git clone git://live.debian.net/git/live-initramfs.git</screen>
</listitem>
<listitem>
<para>Make changes to your local copy</para>
<para>And beware that if you want to add your pre-init script in live-bottom, you should name it without dashes '-', e.g: call it "81new_feature" and not "81new-feature".</para>
</listitem>
<listitem>
<para>Build a &live-initramfs; <command>.deb</command></para>
<para>You must build either on your target distribution or in a chroot containing your target platform: this means if your target is lenny then you should build against lenny. You can use a personal builder such as <command>pbuilder</command> to automate building packages in chroot. To build directly on the target platform, use <command>dpkg-buildpackage</command> (provided by the <command>dpkg-dev</command> package):</para>
<screen>
$ cd live-initramfs
$ dpkg-buildpackage -rfakeroot -b -uc -us
</screen>
</listitem>
<listitem>
<para>Use the generated &live-initramfs; <command>.deb</command></para>
<para>As &live-initramfs; is installed by the build system, installing the package in the host system is not sufficient: you should treat the generated <command>.deb</command> like another custom package. Please see <xref linkend="custom-packages"/> for more information. You should pay particular attention to <xref linkend="custom-packages-apt"/>.</para>
</listitem>
</orderedlist>
</section>

<section>
<title>Using &live-initramfs; snapshots</title>

<para>You can let &live-helper; automatically use the latest snapshot of &live-initramfs; by configuring a third-party repository in your live-system configuration. Assumed you have already created a configuration tree with <command>lh_config</command></para>

<orderedlist>
<listitem>
<para>Create a sources.list entry for the chroot stage:</para>
<screen>echo "deb http://live.debian.net/ sid/snapshots main contrib non-free" > config/chroot_sources/debian-live_sid-snapshots.chroot</screen>
</listitem>
<listitem>
<para>Create a sources.list entry fro the binary stage:</para>
<screen>cp config/chroot_sources/debian-live_sid-snapshots.chroot config/chroot_sources/debian-live_sid-snapshots.binary</screen>
</listitem>
<listitem>
<para>Fetch the archive signing key:</para>
<screen>
wget http://live.debian.net/debian/project/openpgp/archive-key.asc -O config/chroot_sources/debian-live_sid-snapshots.chroot.gpg
cp config/chroot_sources/debian-live_sid-snapshots.chroot.gpg config/chroot_sources/debian-live_sid-snapshots.binary.gpg
</screen>
</listitem>
</orderedlist>
</section>
</section>
</chapter>
